<%args>
	$tourn
	$person
	$person_settings
	$session
	$perms
</%args>
<%init>

	my $entry_only;

	unless ($person) { 
		my $err = "You are not logged in.  Log in to continue";
		$m->redirect("/index/index.mhtml?err=$err");
	}

	unless ($tourn) {
		my $err = "You are no longer logged into a tournament" unless $tourn;
		$m->redirect("/user/home.mhtml?err=$err");
	}

	my $dbh = Tab::DBI->db_Main();

	if ($ARGS{'event_id'}) { 

		my $sth = $dbh->prepare("
			select event.tourn, event.abbr from event where event.id = ? 
		");

		$sth->execute($ARGS{'event_id'});

		while ( 
			my ($tourn_id, $event_name) = $sth->fetchrow_array()
		) { 
			
			next if $tourn_id == $tourn->id;

			my $now = DateTime->now();

            Tab::ChangeLog->create({       
                tourn       => $tourn_id,
                person      => $person->id,
                type        => 'access',    
                created     => $now,    
                description => "Event/tournament mismatch $event_name from ".$ENV{REMOTE_ADDR}    
            }); 

			$m->print("<div id='wrapper'><div id='content'><div class='blankfull'>");

			$m->comp(
				"/funclib/abort.mas", 
				message => "Unauthorized access to the event <br /><br />$event_name <br /><br /> which does not belong to your tournament <br /><br />".$tourn->name.". <br /><br />  This access attempt has been logged.",
				noback => 1
			);

		}

	} elsif ($ARGS{"category_id"}) { 

		my $sth = $dbh->prepare("
			select category.tourn, category.abbr from category where category.id = ? 
		");

		$sth->execute($ARGS{'category_id'});

		while ( 
			my ($tourn_id, $category_name) = $sth->fetchrow_array()
		) { 
			
			next if $tourn_id == $tourn->id;

			my $now = DateTime->now();

            Tab::ChangeLog->create({       
                tourn       => $tourn_id,
                person      => $person->id,
                type        => 'access',    
                created     => $now,    
                description => "Event/tournament mismatch $category_name from ".$ENV{REMOTE_ADDR}    
            }); 

			$m->print("<div id='wrapper'><div id='content'><div class='blankfull'>");

			$m->comp(
				"/funclib/abort.mas", 
				message => "Unauthorized access to the category <br /><br />$category_name <br /><br /> which does not belong to your tournament <br /><br />".$tourn->name.". <br /><br />  This access attempt has been logged.",
				noback => 1
			);
		}
	}

	unless (${$perms}{"owner"} 
		|| ${$perms}{"full_admin"} 
		|| ${$perms}{"tabbing"} 
		|| ${$perms}{"detailed"} 
		|| ${$perms}{"category_tab"}
	) { 
		if (${$perms}{"entry_only"}) { 
			$entry_only++;
		} elsif (not defined ${$perms}{"registration"}) { 
			my $err = "You do not have access to this tournament";
			$m->redirect("/user/home.mhtml?err=$err");
		} else { 
			my $err = "You do not have access to tab this tournament";
			$m->redirect("/register/index.mhtml?err=$err");
		}
	}

	undef $entry_only if $person->site_admin;
	undef $entry_only if $person_settings->{"nsda_district"};

	my $only_category;

	if (${$perms}{"category_tab"} && ${$perms}{"category_tab"}->category) { 

		$only_category = ${$perms}{"category_tab"}->category;

		unless ($session->category && $session->category->id == $only_category->id) { 
			$session->category($only_category->id);
			$session->update;
		}
	}

	unless ($tourn->settings) {

		if (${$perms}{"entry_only"} 
			|| (${$perms}{"limited"} &! ${$perms}{"setup"})
		) { 

			my $err = "That tournament is not set up.  An owner or admin must set it up before you can do anything";
			$m->redirect("/user/home.mhtml?err=$err");
		}	
		
		my $err = "You must set up your tournament before you can do anything else!";
		$m->redirect("/setup/tourn/main.mhtml?err=$err");
	}

</%init>

	<div id="wrapper">

		<div id="content">

<%perl>
		if ($perms->{"detailed"}) { 
			if ($ARGS{"event_id"}) { 
				$m->comp("/funclib/abort.mas", warning => "You have no access to that event")
					unless $perms->{"details"}{$ARGS{"event_id"}};
			}
		}

 			$m->call_next(
				person        => $person,
				tourn         => $tourn,
				session       => $session,
				entry_only    => $entry_only,
				perms         => $perms,
				only_category => $only_category
			);
</%perl>

		</div> 
		
	</div>

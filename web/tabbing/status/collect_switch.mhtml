<%args>
	$person
	$target_id => undef
	$parent_id => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($target_id) { 
		$m->print('{ "error": true, "message": "No ballot ID sent"}');
		$m->abort();
	}

	my $ballot = Tab::Ballot->retrieve($target_id);

	unless ($ballot) { 
		$m->print('{ "error": true, "message": "No ballot ID retrieved"}');
		$m->abort();
	}

	my @ballots = Tab::Ballot->search(
		judge => $ballot->judge->id,
		panel => $ballot->panel->id
	);

	my $message;
	my $reply;

	Tab::Ballot->set_sql( update_ballot_collect => "
		update ballot
		set collected = NULL
		where id = ? 
	");

	my $counter;
	my $return_to;

	foreach my $ballot (@ballots) { 

		$counter++;

		if ($parent_id eq "collected_body") { 

			$reply = $ballot->panel->round->event->abbr unless $reply;
			$message = $ballot->judge->last." ballots marked uncollected" unless $message;

			Tab::Ballot->sql_update_ballot_collect->execute($ballot->id);

			$return_to = "uncollected_body";

		} elsif ($parent_id eq "uncollected_body") { 

			my $tz = $ballot->entry->event->tourn->tz
				if $ballot && $ballot->entry && $ballot->entry->event;
			$tz = "UTC" unless $tz;

			my $now = DateTime->now(time_zone => $tz);

			$ballot->collected($now);
			$ballot->update();

			$reply = Tab::nicetime($now) unless $reply;
			$message = $ballot->judge->last." ballots marked collected" unless $message;
			$return_to = "collected_body";
 
		} else { 

			$m->print('{ "error": true, "message": "No other value sent"}');
			$m->abort();
		}

	}

	$m->print('{ 
		"error": false,
		"message": "'.$message.'",
		"reply": "'.$reply.'",
		"newParent": "'.$return_to.'"
	}');

	$m->abort();

</%init>


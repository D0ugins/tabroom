<%args>
	$person
	$tourn
	$tourn_settings
	$timeslot_id => undef
	$round_id    => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	my $limit;

	if ($round_id) {
		$limit = " where round.id = ".int($round_id);
	} elsif ($timeslot_id) {
		$limit = " where round.timeslot = ".int($timeslot_id);
	} else {
		$m->abort();
	}

	my %status;

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select
			cl.panel, cl.tag, cl.description,
				CONVERT_TZ(cl.timestamp, '+00:00', tourn.tz),
			person.id, person.first, person.last

		from panel, campus_log cl, tourn, person, round

		$limit

			and panel.round = round.id
			and panel.id = cl.panel
			and cl.tourn = tourn.id
			and cl.person = person.id

			and ( exists (
					select ballot.id
						from ballot, judge
					where judge.id = ballot.judge
						and judge.person = person.id
						and ballot.panel = panel.id
				) or exists (
					select ballot.id
						from ballot, entry_student es, student
					where ballot.panel = panel.id
						and ballot.entry = es.entry
						and es.student = student.id
						and student.person = person.id
				)
			)
		order by cl.timestamp
	");

	$sth->execute();

	while (
		my (
			$panel, $tag, $description,
			$timestamp,
			$id, $first, $last
		) = $sth->fetchrow_array()
	) {
		$status{$id}{$panel}{"tag"}         = $tag;
		$status{$id}{$panel}{"timestamp"}   = $timestamp;
		$status{$id}{$panel}{"description"} = $description;
	}

	my $json = JSON->new->allow_nonref->convert_blessed->utf8->pretty;
	$m->print($json->encode(\%status));

	$dbh->disconnect();

	$m->abort();

</%init>

<%args>
	$tourn
	$person
	$target_id      => undef
	$related_thing  => undef
	$another_thing  => undef
	$setting_name   => undef
	$property_name  => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($target_id) {
		$m->print('{ "error": true, "message": "No Person ID sent"}');
		$m->abort();
	}

	my $target = Tab::Person->retrieve($target_id);

	unless ($target) {
		$m->print('{ "error": true, "message": "No tabroom account found for ID '.$target_id.'"}');
		$m->abort();
	}

	unless ($related_thing) {
		$m->print('{ "error": true, "message": "No section ID sent"}');
		$m->abort();
	}

	my $panel = Tab::Panel->retrieve($related_thing);

	unless ($panel) {
		$m->print('{ "error": true, "message": "No panel retrieved for ID '.$related_thing.'"}');
		$m->abort();
	}

	my $judge;
	my $entry;

	Tab::debuglog("Setting name $setting_name entry id $another_thing");

	if ($setting_name eq "entry") {
		$entry = Tab::Entry->retrieve($another_thing);
	} elsif ($setting_name eq "judge") {
		$judge = Tab::Judge->retrieve($another_thing);
	}

	my %response;
	my $message;
	my @reclass;
	my @reprop;

	Tab::debuglog("Property name is $property_name");

	if ($property_name) {

		$message = $target->first." ".$target->last." marked as absent by ".$person->email;

		Tab::CampusLog->create({
			tag         => "absent",
			description => $message,
			person      => $target->id,
			tourn       => $tourn->id,
			panel       => $panel->id,
			entry       => $entry,
			judge       => $judge
		});

		my %color = ();
		$color{"id"} = $panel->id."_".$target->id;
		$color{"removeClass"} =  "greentext";
		$color{"addClass"} =  "brightredtext";
		push @reclass, \%color;

		my %symbol = ();
		$symbol{"id"} = $panel->id."_".$target->id;
		$symbol{"removeClass"} =  "fa-check";
		$symbol{"addClass"} =  "fa-circle";
		push @reclass, \%symbol;

		my %value = ();
		$value{"id"} = "container_".$panel->id."_".$target->id;
		$value{"property"} = "property_name";
		$value{"value"} = 0;
		push @reprop, \%value;

	} else {

		$message = $target->first." ".$target->last." marked as present by ".$person->email;

		Tab::CampusLog->create({
			tag         => "present",
			description => $message,
			person      => $target->id,
			tourn       => $tourn->id,
			panel       => $panel->id,
			entry       => $entry,
			judge       => $judge
		});

		my %color = ();
		$color{"id"} = $panel->id."_".$target->id;
		$color{"addClass"} =  "greentext";
		$color{"removeClass"} =  "brightredtext";
		push @reclass, \%color;

		my %symbol = ();
		$symbol{"id"}          = $panel->id."_".$target->id;
		$symbol{"addClass"}    = "fa-check";
		$symbol{"removeClass"} = "fa-circle";
		push @reclass, \%symbol;

		my %value = ();
		$value{"id"} = "container_".$panel->id."_".$target->id;
		$value{"property"} = "property_name";
		$value{"value"} = 1;
		push @reprop, \%value;

	}

	$response{"error"} = JSON::false;
	$response{"message"} = $message;
	$response{"reclass"} = \@reclass;
	$response{"reprop"} = \@reprop;

	$m->print(JSON::encode_json(\%response));

	$m->abort();

</%init>

<%args>
	$tourn
	$perms
	$session
	$person
	$tourn_settings => undef
	$only_category  => undef
	$timeslot_id    => undef
	$check_all      => undef
	$type           => undef
	$entry_only     => undef
	$fs             => undef
	$defaults       => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my %event_done;
	my %event_round;
	my %event_status;

	my @all_events;
	my %done_events = ();
	my %ready_events = ();

	my $limit;
	my $fields;

	if ($only_category) {

		my ($in_progress, $advance_me, $done)
			= $m->comp('/funclib/event_breakable.mas',
			tourn    => $tourn,
			category => $only_category
		);

		%ready_events = map {$_ => 1} @{$advance_me};
		%done_events = map {$_ => 1} @{$done};
		$limit = " and event.category = ".$only_category->id;

	} else {

		my ($in_progress, $advance_me, $done) =
			$m->comp(
			'/funclib/event_breakable.mas',
				tourn    => $tourn,
				category => $only_category
			);

		%ready_events = map {$_ => 1} @{$advance_me};
		%done_events = map {$_ => 1} @{$done};
		$fields .= ", category ";
		$limit = " and event.category = category.id and category.tourn = ".$tourn->id;
	}

	Tab::Event->columns(TEMP => "nsda_code");

	Tab::Event->set_sql(has_kidz => "
		select event.*, nsda.value as nsda_code
		from (event, entry $fields)
			left join event_setting nsda
				on nsda.tag = 'nsda_event_category'
				and nsda.event = event.id
		where entry.event = event.id
		and entry.active = 1
		$limit
		group by event.id
	");

	@all_events = Tab::Event->search_has_kidz();

	@all_events = $m->comp(
		"/funclib/event_perms.mas",
		perms  => $perms,
		events => \@all_events
	);

	@all_events = sort {
		$a->type cmp $b->type
		|| $a->nsda_code <=> $b->nsda_code
		|| $a->abbr cmp $b->abbr
	} @all_events;

	my @events;
	my $debate;
	my $speech;
	my $congress;

	my %event_flights;

	my $num_rows = POSIX::floor( (scalar @all_events) / 4);
	my $num_elements = POSIX::floor( (scalar @all_events) / $num_rows) if $num_rows;
	my $count;

	EVENT:
	foreach my $event (@all_events) {

		my $online_ballots = $event->setting('online_ballots');

		my @rounds = $event->rounds;

		my $round = $m->comp(
			"/funclib/event_current_round.mas",
			event => $event
		);

		my $done_round = $m->comp(
			"/funclib/event_current_round.mas",
			event => $event,
			done => 1
		);

		my $last_round = pop @rounds;

		$event_done{$event->id}++
			if $done_round
			&& $done_round->type eq "final";

		$event_done{$event->id}++
			if $done_round
			&& $done_round->id == $last_round->id;

		unless (
			$event->type eq "speech"
			|| $event->type eq "congress"
		) {
			$debate++;
			next EVENT
			if $type && $type ne "debate";
		}

		if ($event->type eq "speech") {
			$speech++;
			next EVENT
			if $type && $type ne "speech";
		}

		if ($event->type eq "congress") {
			$congress++;
			next EVENT
			if $type && $type ne "congress";
		}

		push @events, $event;

		my $switch;

		if ($round) {

			my $flighted = $round->flighted();
			$flighted = 1 unless $flighted;
			$event_flights{$event->id} = $flighted;
			my %done_round;

			foreach my $flight (1 .. $flighted) {

				next if $done_round{$round->id}{$flight};

				unless ($event_round{$round->event->id}) {
					my $round_name = $round->realname;
					$round_name =~ s/Round/Rd/g;
					$event_round{$event->id} = $round_name;
				}

				my $start = $round->start_time;
				$start = $round->timeslot->start unless $start;
				$start->set_time_zone($tz);

				if ($flighted > 1) {
					$event_status{$event->id}{$flight} .= '<span class="full flighted ltborderbottom smaller nospace">';
					$event_status{$event->id}{$flight} .= '<span class="nospace sixth leftalign">';
					$event_status{$event->id}{$flight} .= '<h2 class="smaller nospace semibold martopless marleftless orangetext"> F'.$flight .'</h2></span>';
					$event_status{$event->id}{$flight} .= '<span class="nospace fivesixths centeralign">';
				} else {
					$event_status{$event->id}{$flight} .= '<span class="nospace full">';
				}

				if ($online_ballots) {

					my $unstarted = $m->comp(
						"/funclib/round_status.mas",
						round     => $round,
						flight    => $flight,
						unstarted => 1
					);

					if ($unstarted) {
						$event_status{$event->id}{$flight} .= '
							<span class="nospace third">
							<span class="explain smaller"> Unstarted </span>
							<h2 class="bluetext nospace centeralign">'.$unstarted.'</h2></span>';

						$done_round{$round->id}{$flight}++;
					}

					my $unentered = $m->comp(
						"/funclib/round_status.mas",
						round     => $round,
						flight    => $flight,
						unentered => 1,
						started   => 1
					);

					if ($unentered) {
						$event_status{$event->id}{$flight} .= '
							<span class="nospace third">
							<span class="explain smaller"> Unentered </span>
							<h2 class="redtext nospace centeralign">'.$unentered.'</h2></span>';

						$done_round{$round->id}{$flight}++;
					}

				} else {

					my $unentered = $m->comp(
						"/funclib/round_status.mas",
						round     => $round,
						flight    => $flight,
						unentered => 1
					);

					if ($unentered) {
						$event_status{$event->id}{$flight} .= '
							<span class="nospace third">
							<span class="explain smaller"> Unentered </span>
							<h2 class="redtext nospace centeralign">'.$unentered.'</h2></span>';
					}
					$done_round{$round->id}{$flight}++;
				}

				my $unconfirmed = $m->comp(
					"/funclib/round_status.mas",
					round       => $round,
					flight      => $flight,
					unconfirmed => 1
				);

				if ($unconfirmed) {
					$event_status{$event->id}{$flight} .= '
						<span class="nospace third">
						<span class="explain smaller"> Unconfirmed </span>
						<h2 class="orangetext nospace centeralign">'.$unconfirmed.'</h2></span>';

					$done_round{$round->id}{$flight}++;
				}

				if ($flighted > 1) {
					$event_status{$event->id}{$flight} .= '</span></span>';
				} else {
					$event_status{$event->id}{$flight} .= '</span>';
				}

				undef ($event_status{$event->id}{$flight}) unless $done_round{$round->id}{$flight};

				if ($flight == $flighted) {
					$event_status{$event->id}{$flight} .= '<div class="explain centeralign" style="bottom: 0px;">Start: ';
					$event_status{$event->id}{$flight} .= Tab::nicetime($start)."</div>";
				}
			}
		}
	}

	my $num_types;
	$num_types++ if $congress;
	$num_types++ if $debate;
	$num_types++ if $speech;

</%init>

	<div class="blankfull">

		<div class="nospace">

			<span class="third">
				<h2>
					Status
				</h2>
			</span>

			<span class="twothird rightalign nospace">
				<h4>
					<% $tourn->name %>
				</h4>
			</span>

		</div>

		<& "tabbar.mas",
			whoami         => 'dashboard',
			tourn          => $tourn,
			tourn_settings => $tourn_settings
		&>

		<div class="nospace">

			<span class="third nospace">
				<h4>Tournament Dashboard</h4>
			</span>

			<span class="twothird nospace rightalign">

%				if ($num_types > 1) {

					<a
						href="dashboard.mhtml?type="
						class="buttonwhite fifth centeralign smallish purpletext
							<% $type ? "" : "invert" %>"
						>
						All
					</a>

%					if ($congress) {
						<a
							href="dashboard.mhtml?type=congress"
							class="fifth centeralign smallish buttonwhite greentext
								<% $type eq "congress" ? "invert" : "" %>"
							>
							Congress
						</a>
%					}

%					if ($debate) {
						<a
							href="dashboard.mhtml?type=debate"
							class="buttonwhite fifth centeralign smallish bluetext
								<% $type eq "debate" ? "invert" : "" %>"
							>
							Debate
						</a>
%					}

%					if ($speech) {

						<a
							href="dashboard.mhtml?type=speech"
							class="buttonwhite fifth centeralign smallish redtext <% $type eq "speech" ? "invert" : "" %>"
						>
							Speech
						</a>
%					}
%				}

			</span>
		</div>

		<div class="centeralign">
<%perl>

		my $counter;
		my $last_code;

		foreach my $event (sort {
			$a->type cmp $b->type
			|| $a->nsda_code cmp $b->nsda_code
			|| $a->abbr cmp $b->abbr
		} @events) {

			my $flighted = $event_flights{$event->id};
			$flighted = 1  if $ready_events{$event->id};
			$flighted = 1  unless $flighted;

			if (scalar @events < 8 && $event->nsda_code) {

				if ($last_code && $event->nsda_code ne $last_code) {
					$m->print("<div class='full padlessvert'></div>");
					undef $counter;
				}

				$last_code = $event->nsda_code;

			} elsif ($counter >= 4) {
				$m->print("<div class='full padlessvert'></div>");
				undef $counter;
			}

			$counter++;
</%perl>
			<span
				class = "padmore quarter border flexbox top"
				style = "min-height: 150px; width: 212px;"
			>

				<div class="full nospace">
					<span class="nospace twofifths nowrap">
						<h5 class="nospace padvert"> <% $event->abbr %></h5>
					</span>

					<h6 class="nospace threefifths rightalign bluetext semibold">
						<% $event_round{$event->id}
							? substr($event_round{$event->id}, 0, 10)
							: ""
						%>
					</h6>
				</div>
<%perl>

				my $flight_statused;

				foreach my $flight (1 .. $flighted) {

					next unless $event_status{$event->id}{$flight}
						|| $ready_events{$event->id}
						|| $event_done{$event->id};

					if ($event_status{$event->id}{$flight}) {
						$flight_statused++;
						$m->print($event_status{$event->id}{$flight});
					}

				}

				unless ($flight_statused) {
</%perl>
%					if ($done_events{$event->id}) {
						<div class="martop padmore">
							<span class="dkgreen full centeralign martop">
								All done!
							<span>
						</div>
%					} elsif ($ready_events{$event->id}) {
						<div class="martop">
%							if ($entry_only) {
								<span class="dkyellow centeralign smallish full">
%							} else {
								<a
									class="dkyellow centeralign smallish full"
								    href="/tabbing/break/index.mhtml?event_id=<% $event->id %>"
								>
%							}
								Ready to advance
%							if ($entry_only) {
								</span>
%							} else {
								</a>
%							}
						</div>
%					}
%				}
			</span>
%		}

%		if ($person->site_admin && (defined $fs)) {

			<span
				class = "padmore quarter border"
				style = "height: 150px; width: 212px;"
			>

				<div class="full marno marbottommore">
					<h4 class="nospace centeralign martop">
						Fucks Given
					</h4>
				</div>

				<span class="nospace third">
					<span class="explain smaller"> </span>
					<h2 class="redtext nospace centeralign"><% $fs %></h2>
				</span>

			</span>

%		}

		</div>
	</div>


<%args>
	$tourn
</%args>
<%init>

	Tab::Entry->set_sql( last_rounds => "
		select entry.*, school.name as schname, school.code as regname, 
				max(round.name) as panelid, round.label as othername,
				event.abbr as regcode
			from (entry, school, round, panel, ballot, event)
			where entry.school = school.id
			and school.tourn = ?
			and entry.active = 1 
			and entry.id = ballot.entry
			and entry.event = event.id
			and ballot.panel = panel.id
			and panel.round = round.id
			and (round.type = 'elim' or round.type = 'final')
			group by entry.id
			order by school.name, round.name
	");

	my @all_entries = Tab::Entry->search_last_rounds($tourn->id);

	my $name = $tourn->name;
	$name =~ s/[\W_]//g;
	my $filename = "LastRoundActive-".$name.".csv";

    $m->clear_buffer;

	$r->content_type('application/csv');

	$r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

	$m->print("School,Code,Name,Entry Code,Event,Last Round\n");

	my $counter;

	foreach my $entry (@all_entries) { 

		$m->print('"'.$entry->schname);
		$m->print('","');
		$m->print($entry->regname);
		$m->print('","');
		$m->print($entry->name);
		$m->print('","');
		$m->print($entry->code);
		$m->print('","');
		$m->print($entry->regcode);
		$m->print('","');
		$m->print($entry->othername." ");
		$m->print('","');
		$m->print("Round ".$entry->panelid);
		$m->print('"'."\n");

		if ($counter++ > 100) { 
			undef $counter;
			$m->flush_buffer();
		}

	}

	$m->flush_buffer();
	$m->abort();

</%init>

	

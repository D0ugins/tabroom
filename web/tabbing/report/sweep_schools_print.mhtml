<%args>
	$session
	$tourn
	$tourn_settings
	$sweep_set_id => undef
</%args>
<%init>

	my @sweep_sets;

	my $ncfl++ if $tourn_settings->{"ncfl"};
	my $regions++ if $tourn_settings->{"regions"};
	my $master_set = Tab::SweepSet->retrieve($sweep_set_id);

    $m->print("No sweepstakes set selected") unless $master_set;
    $m->abort() unless $master_set;

	my %schools = $m->comp("/tabbing/results/sweep_schools.mas", sweep_set => $master_set);

	my $print_limit = $master_set->rule("print_limit");

	my $name = $master_set->name;
	$name =~ s/[\W_]//g;

	my $filename = "$name-".$session->id;
	my $filepath = $Tab::file_root."tmp/".$filename;

	$m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		head     => 1
	);

	open (TEXOUT, ">>$filepath.tex");
	binmode(TEXOUT, ":utf8");

    print TEXOUT "\\noindent\n";
	print TEXOUT "\\hfill \\textsb{\\huge ". Tab::texify($tourn->name) ."}\n";
    print TEXOUT "\\smallskip\n";
	print TEXOUT "\\newline\n";

	print TEXOUT "\\strut \\hfill \\textsb{\\Large \\color{black!64} ". $master_set->name." } \n";
    print TEXOUT "\\medskip\n";
	print TEXOUT "\\newline\n";

	my $tabular = "\\begin{tabular}{p{.35in}p{.35in}p{2.25in}p{1.5in}p{.5in}p{.5in}p{.5in}}\n";

	print TEXOUT $tabular;
	print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[5.5pt\]\[5.5pt\]\n";

 	if ($ncfl) {
		print TEXOUT "  & Tie & Name & Diocese & Entries & Counted & Points \\\\ \n ";
	} elsif ($regions) {
		print TEXOUT "  & Tie & Name & Region & Entries & Counted & Points \\\\ \n ";
	} else {
		print TEXOUT "  & Tie & Name & State & Entries & Counted & Points \\\\ \n ";
	}
	print TEXOUT "\\end{tabular}\n";
	print TEXOUT "\\newline\n";

	my $switch;
	my $place;
	my $last_points;
	my $add_to_place;

	my %tiers;

	foreach my $school_id (sort {$schools{$b}{"points"} <=> $schools{$a}{"points"}} keys %schools) {

		next unless $schools{$school_id}{"points"};
		my $tie;

		if ($last_points == $schools{$school_id}{"points"}) {
			$add_to_place++;
		} elsif ($add_to_place) {
			$place++;
			$place += $add_to_place;
			undef $add_to_place;
		}  else {
			$place++;
		}

		push @{$tiers{$place}}, $school_id;
		$last_points = $schools{$school_id}{"points"};
		last if $print_limit && $place > $print_limit;
	}

	foreach my $place (sort {$a <=> $b} keys %tiers) {

		my $tie++ if scalar @{$tiers{$place}} > 1;

		foreach my $school_id (@{$tiers{$place}}) {

			print TEXOUT $tabular;
			print TEXOUT "\\rowcolor[rgb]{.94,.94,.94}\[5.5pt\]\[5.5pt\]\n" if ($switch++ % 2);
			print TEXOUT " \\hfill ".Tab::texify($place)." \\hfill \\strut & ";

			if ($tie) {
				print TEXOUT "\\hfill T \\hfill \\strut ";
			}

			print TEXOUT " & ";
			print TEXOUT Tab::texify($schools{$school_id}{"name"})." & ";

			if ($ncfl || $regions) {
				print TEXOUT Tab::texify($schools{$school_id}{"regionname"});
			} else {
				print TEXOUT Tab::texify($schools{$school_id}{"state"});
			}

			print TEXOUT " & ";
			print TEXOUT "\\hfill ".Tab::texify($schools{$school_id}{"all_entry_count"})." & ";
			print TEXOUT "\\hfill ".Tab::texify($schools{$school_id}{"counted_entry_count"})." & ";
			print TEXOUT "\\hfill \\textsb{".Tab::texify($schools{$school_id}{"points"})."} \\\\ \n ";
			print TEXOUT "\\end{tabular}\n";
			print TEXOUT "\\newline\n";

		}

	}

	close TEXOUT;

	$m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		tail     => 1
	);

</%init>


<%args>
	$school_id
	$tourn
	$person
	$person_settings
	$perms
	$session
</%args>
<%init>

	my $school = Tab::School->retrieve($school_id);

	unless ($school) {
		$m->comp("/funclib/abort.mas", message => "No valid school found for ID $school_id");
	}

	my $now = DateTime->now;
	$now->set_time_zone($tourn->tz);

	my $tourn_name = $tourn->name;
	my $school_name = $school->short_name;

	$tourn_name =~ s/[\W_]//g;
	$school_name =~ s/[\W_]//g;

	my $name = $tourn_name."-".$school_name;

	my $filename = "Results-$name-".$session->id;
	my $filepath = $Tab::file_root."tmp/".$filename;

	$m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		head     => 1,
		debug    => 1,
		array    => 1.6
	);

	open (my $texout, ">>$filepath.tex");

	my %results = $m->comp("/funclib/entry_results.mas", school => $school);

	foreach my $e_id (
		sort {
			$results{$a}{event_abbr} cmp $results{$b}{event_abbr}
			|| $results{$a}{code} cmp $results{$b}{code}
		} keys %results
	) {

		print $texout "\\strut\n";
		print $texout "\\hfill\n";
		print $texout "\\textsb{\\Huge \\color{black!64} ";
		print $texout Tab::texify($tourn->name);
		print $texout " }\n";
		print $texout "\\hfill\n";
		print $texout "\\medskip\n";
		print $texout "\\newline\n";

		print $texout "\\strut\n";
		print $texout "\\hfill\n";
		print $texout "\\textsb{\\LARGE ";
		print $texout Tab::texify($results{$e_id}{"event_abbr"}).": } ";
		print $texout "\\hspace{5mm} \\LARGE ";
		print $texout Tab::texify($results{$e_id}{"code"})." ";
		print $texout Tab::texify($results{$e_id}{"name"});
		print $texout "\\hfill\n";
		print $texout "\\medskip\n";
		print $texout "\\newline\n";

		print $texout "\\normalsize\n";

		foreach my $r_id (
			sort {
				$results{$e_id}{round}{$a}{number} <=> $results{$e_id}{round}{$b}{number}
			} keys %{$results{$e_id}{round}}
		) {

			my $round = $results{$e_id}{"round"}{$r_id};

			foreach my $b_id (
				sort {
					$round->{ballot}{$a}{"judge_last"} cmp $round->{ballot}{$b}{"judge_last"}
				} keys %{$round->{ballot}}
			) {

				my $ballot = $round->{ballot}{$b_id};

				next unless
					$round->{bye}
					|| $ballot->{"bye"}
					|| $ballot->{"forfeit"}
					|| $ballot->{score};

				print $texout "\\parbox[l][][l]{7in}{ ";
				print $texout "\\makebox[7in]{\\color{blue!20!black} \\hrulefill}\n\n";
				print $texout "\\strut\n";
				print $texout "\\vspace{-2mm}\n";
				print $texout "\\newline\n";
				print $texout "\\vspace{1mm}\n";

				print $texout "\\parbox[l][][l]{3in}{\\Large ";
				print $texout $round->{name};
				print $texout " }\n ";

				print $texout "\\parbox[l][][l]{4in}{\\large ";

				if ($round->{side_name}) {
					print $texout Tab::texify($round->{side_name});
				}

				print $texout " \\hfill ";

				if ($results{$e_id}{event_type} eq "speech" && $round->{order}) {
					print $texout "Spoke ".Lingua::EN::Numbers::Ordinate::ordinate($round->{order});
				} else {
				}

				print $texout " \\hfill ";

				if ($round->{position}) {
					print $texout $round->{position}
				}

				print $texout " \\hfill ";

				if ($round->{opponent}) {
					print $texout "vs ".Tab::texify($round->{opponent});
				}

				print $texout " }\n  ";
				print $texout "\\newline\n";

				print $texout "\\parbox[l][][l]{.25in}{ \\strut }\n";
				print $texout "\\parbox[l][][l]{6.75in}{ \n";
				print $texout "\\strut \\vspace{-2mm} \\newline\n";

				if ($round->{bye}) {
					print $texout " \\textsb{\\large Bye Round } "
				} elsif ($round->{ballot}{$b_id}{"bye"}) {
					print $texout " \\textsb{\\large ".$results{$e_id}{"code"}." given a bye }"
				} elsif ($round->{ballot}{$b_id}{"forfeit"}) {
					print $texout " \\textsb{\\large ".$results{$e_id}{"code"}." forfeits }"
				}

				if ($ballot->{score}) {

					print $texout " \\parbox[l][][l]{2.5in}{";
					print $texout " \\truncate{2.4in}{";
					print $texout "\\textsb{\\large ";
					print $texout "\\color{blue!20!black} ";

					if ($results{$e_id}{"event_type"} eq "congress" && $ballot->{"chair"}) {
						print $texout "Parliamentarian ";
					} else {
						print $texout "Judge ";
					}

					print $texout $ballot->{judge_name};
					print $texout "} } } \\hfill \n  ";

					print $texout "\\parbox[l][][l]{.5in}{ ";

					if ($ballot->{by_type}{"winloss"}) {
						if ($ballot->{by_type}{winloss} == 1) {
							print $texout "\\textsb{\\large WIN } ";
						} elsif ($ballot->{by_type}{winloss} == 0) {
							print $texout "\\textsb{\\large LOSS } ";
						}
					} elsif ($ballot->{by_type}{"rank"}) {
						print $texout "\\textsb{ Rank ".$ballot->{by_type}{"rank"}." } ";
					}

					print $texout "} \\hfill \n  ";
					print $texout "\\parbox[l][][l]{1.5in}{ ";

					if ($ballot->{by_student}{point} || $ballot->{by_student}{rank}) {
						foreach my $student_id (sort keys %{$ballot->{student}}) {
							print $texout "\\truncate{1.4in}{\n";
							print $texout Tab::texify($ballot->{student}{$student_id}{"name"});
							print $texout " } \\newline\n";
						}
					}

					print $texout "} \\hfill \n  ";

					print $texout "\\parbox[l][][l]{.75in}{ ";

					if ($ballot->{by_student}{point}) {
						foreach my $student_id (sort keys %{$ballot->{student}}) {
							if ($ballot->{student}{$student_id}{"point"}) {
								print $texout "Pts ".$ballot->{student}{$student_id}{"point"};
								print $texout "\\newline\n";
							}
						}
					} elsif ($ballot->{by_type}{"point"}) {
						print $texout "Pts ".$ballot->{by_type}{"point"};
					}

					print $texout "} \\hfill\n  ";
					print $texout "\\parbox[l][][l]{.75in}{ ";

					if ($ballot->{by_type}{"winloss"}) {
						if ($ballot->{by_student}{rank}) {
							foreach my $student_id (sort keys %{$ballot->{student}}) {
								if ($ballot->{student}{$student_id}{"rank"}) {
									print $texout "Rank ".$ballot->{student}{$student_id}{"rank"};
									print $texout "\\newline\n";
								}
							}
						} elsif ($ballot->{by_type}{"rank"}) {
							print $texout $ballot->{by_type}{"rank"};
						}

						if ($ballot->{by_student}{refute}) {
							foreach my $student_id (sort keys %{$ballot->{student}}) {
								if ($ballot->{student}{$student_id}{"refute"}) {
									print $texout Tab::texify("Reply ".$ballot->{student}{$student_id}{"refute"});
									print $texout "\\newline\n";
								}
							}
						}
					}

					print $texout "}\n \\smallskip \\newline\n";

					if ($ballot->{by_student}{subpoints}) {

						print $texout "\\makebox[6.5in]{\\color{red} \\hrulefill}\n\n";
						print $texout "\\strut \\vspace{-5mm} \\newline\n";

						foreach my $student_id (sort keys %{$ballot->{student}}) {

							my $subscores = eval{
								return JSON::decode_json($ballot->{student}{$student_id}{subpoints});
							};

							next unless $subscores;
							$ballot->{student}{$student_id}{"subscores"} = $subscores;

							foreach my $key (sort {$b cmp $a} keys %{$subscores}) {
								$ballot->{student}{$student_id}{"priority"} = $subscores->{$key}{"position"};
							}
						}

						foreach my $student_id (sort keys %{$ballot->{student}}) {

							my $subscores = $ballot->{student}{$student_id}{"subscores"};

							print $texout "\\parbox[l][][t]{6.5in}{ \n";

							print $texout "\\parbox[l][][l]{1.25in}{ \n";
							print $texout Tab::texify($ballot->{student}{$student_id}{"name"});
							print $texout "}\n";

							print $texout "\\parbox[c][][c]{5.25in}{ \n";

							foreach my $key (sort {$b cmp $a} keys %{$subscores}) {

								print $texout "\\strut \\vspace{-2mm} \\newline\n";
								print $texout "\\parbox[c][][c]{.75in}{ \n";
								print $texout ucfirst($key)." ";
								print $texout $subscores->{$key}{"position"};
								print $texout " }\n";

								foreach my $type (
									sort {
										($a eq "strategy") cmp ($b eq "strategy")
										|| $a cmp $b
									} keys %{$subscores->{$key}}
								) {
									next if $type eq "position";
									print $texout "\\parbox[c][][c]{1in}{ \n";
										print $texout ucfirst($type)." \\hspace{3mm}\n ";
										print $texout $subscores->{$key}{$type};
									print $texout " }\n";
								}

								print $texout "\\vspace{-1mm} \\newline\n";
							}
							print $texout "\\makebox[4.5in]{\\color{black!16} \\hrulefill}\n";
							print $texout "}\n";
							print $texout "}\n";
						}
					}

					print $texout "\\makebox[6.5in]{\\color{black!32} \\hrulefill}\n\n";
					print $texout "\\strut \\vspace{-1mm} \\newline\n";

					foreach my $score_id (
						sort {
						 	($ballot->{score}{$b}{tag} eq "title") cmp ($ballot->{score}{$a}{tag} eq "title")
							|| $ballot->{score}{$a}{tag} cmp $ballot->{score}{$b}{tag}
							|| $ballot->{score}{$a}{speech} cmp $ballot->{score}{$b}{speech}
							|| $a <=> $b
						} keys %{$ballot->{score}}
					) {
						next if $ballot->{score}{$score_id}{tag} eq "winloss";
						next if $ballot->{score}{$score_id}{tag} eq "point";
						next if $ballot->{score}{$score_id}{tag} eq "rank";
						next if $ballot->{score}{$score_id}{tag} eq "refute";

						my $score = $ballot->{score}{$score_id};
						next unless $score->{content};

						print $texout "\\parbox[l][][l]{1in}{\n ";
						print $texout " \\textsb{";
						print $texout " ".uc($score->{tag})." } ";

						if ($score->{speech}) {
							print $texout " ".Tab::texify("#".$score->{speech});
						}

						if ($score->{value}) {
							print $texout "\\newline\n\\strut \\quad ".$score->{value}." pts ";
						}

						print $texout "\n} \n";
						print $texout "\\parbox[l][][l]{5.5in}{ \n";

						if ($score->{topic}) {

							print $texout "\\parbox[l][][l]{.75in}{ ";
								if ($score->{position} == 1) {
									print $texout "FOR";
								} elsif ($score->{position} == 2) {
									print $texout "AGAINST";
								}
							print $texout "} \\hfill \n";

							print $texout "\\parbox[l][][l]{.35in}{ ";
							print $texout "\\textsb{BILL: } ";
							print $texout "} \\hfill \n";

							print $texout "\\parbox[l][][l]{3in}{ ";
							print $texout Tab::texify($score->{topic});
							print $texout "} \\hfill \n";

							print $texout "\\vspace{2mm} \\newline\n";
						}

						print $texout $m->comp("/funclib/print_format.mas", message => $score->{content});
						print $texout "}\n ";
						print $texout "\\strut \\vspace{2mm} \\newline\n";
						print $texout "\\makebox[6.5in]{\\color{black!32} \\hrulefill}\n\n";
						print $texout "\\strut \\vspace{-2mm} \\newline\n";
					}
				}

				print $texout " } } ";
				print $texout "\\medskip \\newline\n";
			}
		}
		print $texout "\\strut \\newpage \\strut \n";
	}

	$m->comp("/funclib/printout.mas",
        tourn    => $tourn,
        filename => $filename,
        tail     => 1,
        array    => 1.6
    );

</%init>

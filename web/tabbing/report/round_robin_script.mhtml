<%args>
	$tourn
	$tourn_settings
	$event_id
</%args>
<%init>

	use List::Util 'shuffle';

	$m->abort unless $event_id;

	my $event = Tab::Event->retrieve($event_id)
		if $event_id;

	$m->abort unless $event;
    my $name = $event->name;
    $name =~ s/[\W_]//g;
    my $filename = "RoundRobinScript-$name";
    my $filepath = $Tab::file_root."tmp/".$filename;

    $m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		head     => 1,
		array    => 1.8
	);

    open (TEXOUT, ">>$filepath.tex");
	binmode(TEXOUT, ":utf8");

	my $notfirst;

	my %side;

	$side{1} = $event->setting('aff_string');
	$side{2} = $event->setting('neg_string');
	$side{1} = "affirmative" unless $side{1};
	$side{2} = "negative" unless $side{2};

	foreach my $round (sort {$a->name <=> $b->name} $event->rounds) {

		print TEXOUT "\\newpage\n" if $notfirst++;
		print TEXOUT "\\strut \\hfill \n";
		print TEXOUT "\\huge \\textsb{ ";
		print TEXOUT Tab::texify($round->realname);
		print TEXOUT " } \n";
		print TEXOUT "\\hfill \\strut \n";
		print TEXOUT "\\vspace{.5in}\n \\newline\n";

		foreach my $panel (shuffle($round->panels)) {

			next if $panel->bye;


			my @entries = $m->comp("/funclib/panel_entries.mas", panel => $panel);
			my @judges = $m->comp("/funclib/panel_judges.mas", panel => $panel);

			print TEXOUT "\\large\n";

			print TEXOUT "In the debate between ";

			my $notfirst_entry;

			foreach my $entry (@entries) {
				print TEXOUT " and " if $notfirst_entry++;
				print TEXOUT Tab::texify($entry->code);
			}

			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";

			foreach my $judge (@judges) {

				my @ballots = $panel->ballots(judge => $judge->id);
				next unless @ballots;

				my $winner;
				my $winner_side;
				my %points;
				my %ranks;

				foreach my $ballot (@ballots) {

					foreach my $score ($ballot->scores) {

						if ($score->tag eq "winloss") {

							if ($score->value == 1) {
								$winner = $ballot->entry;
								$winner_side = $ballot->side;
							}

						} elsif ($score->tag eq "point") {

							$points{$score->student->id} = $score->value;

						} elsif ($score->tag eq "rank") {

							$ranks{$score->student->id} = $score->value;

						}

					}
				}

				next unless $winner;

				print TEXOUT "\\strut \\hspace{.5in}\n \\textsb{ Judge }\n";
				print TEXOUT Tab::texify($judge->first." ".$judge->last)." votes for ";
				print TEXOUT " the  ".Tab::texify($side{$winner_side});
				print TEXOUT " from ".$winner->school->short_name;

				print TEXOUT "\\medskip\n";
				print TEXOUT "\\newline\n";

				if (keys %points || keys %ranks) {

					print TEXOUT "\\strut \\hspace{.5in}\n";
					print TEXOUT "\\textsb{ ";
					print TEXOUT "Points " if (keys %points);
					print TEXOUT " and " if ( (keys %points)  && (keys %ranks));
					print TEXOUT "Ranks " if (keys %ranks);
					print TEXOUT " } \t";

					my $nf_student;

					foreach my $entry (@entries) {

						foreach my $student ($entry->students) {

							if ($nf_student++)  {
								print TEXOUT "\\smallskip \\newline\n";
								print TEXOUT "\\strut \\hspace{1.05in}\n";
							}

							print TEXOUT Tab::texify($student->first." ".$student->last).": ";
							print TEXOUT "Rank ".Tab::texify($ranks{$student->id})." " if $ranks{$student->id};
							print TEXOUT Tab::texify($points{$student->id}) if $points{$student->id};

						}
					}
				}
				print TEXOUT "\\vspace{.5in}\n";
				print TEXOUT "\\newline\n";
			}
		}
	}

	close TEXOUT;

    $m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		tail     => 1
	);

</%init>

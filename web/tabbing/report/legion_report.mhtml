<%args>
	$school_id => undef
	$school    => undef
	$tourn
	$tourn_settings
</%args>
<%init>

	my @schools;
	my $name;

	if ($school) {

		push @schools, $school;
		$name .= $school->name;

	} elsif ($school_id) {

		$school = Tab::School->retrieve($school_id);
		push @schools, $school;
		$name .= $school->name;

	} else {

		push @schools, sort {$a->name cmp $b->name} $tourn->schools;
		$name = "ALL";
	}

    $name =~ s/[\W_]//g;
    my $filename = "ContestantResults-$name";

	$m->comp("/funclib/printout.mas",
		tourn     => $tourn,
		filename  => $filename,
		head      => 1,
		no_footer => 1
	);

	my $filepath = $Tab::file_root."tmp/".$filename;
	open (TEXOUT, ">>$filepath.tex");

	my $logo_file = $tourn_settings->{"logo"};

	if ($logo_file) {

		unless (-e "$Tab::file_root/tmp/".$logo_file) {
			system("cd $Tab::file_root/tmp;
			$Tab::latex_path_prefix/wget ".$Tab::s3_url."/".$tourn->id."/".$logo_file);
		}
	}

	foreach my $school (@schools) {

		foreach my $entry ($school->entries) {

			my $event = $entry->event;

			foreach my $panel ($m->comp("/funclib/entry_panels.mas", entry => $entry)) {

				my $counter = 1;

				foreach my $ballot ($panel->ballots( entry => $entry)) {

					if ($logo_file && -e "$Tab::file_root/tmp/".$logo_file) {

						print TEXOUT "\\hspace{-4mm}\n";
						print TEXOUT "\\begin{minipage}[c]{1.6in}\n";
						print TEXOUT "\\includegraphics[width=1.2in]{".$logo_file."}\n";
						print TEXOUT "\\end{minipage}\n";

						print TEXOUT "\\hspace{-4mm}\n";
						print TEXOUT "\\begin{minipage}[c]{5.5in}\n";
						print TEXOUT "\\hfill \\textsb{\\Huge \\color{black!64} AMERICAN LEGION }\n";
						print TEXOUT "\\medskip\n";
						print TEXOUT "\\newline\n";
						print TEXOUT "\\strut \\hfill \\textsb{\\LARGE \\color{black!64} National Oratorical Contest }\n";
						print TEXOUT "\\end{minipage}\n";
						print TEXOUT "\\medskip\n";
						print TEXOUT "\\newline\n";

					} else {

						print TEXOUT "\\hspace{-4mm}\n";
						print TEXOUT "\\vspace{-4mm}\n";
						print TEXOUT "\\begin{minipage}[c]{4.0in}\n";
						print TEXOUT "{\\bf \\LARGE \\color{black!64} ".&Tab::texify($tourn->name)." }\n";
						print TEXOUT "\\end{minipage}\n";
						print TEXOUT "\\medskip\n";
						print TEXOUT "\\newline\n";

					}

					print TEXOUT "\\hrule\n";
					print TEXOUT "\\strut\n";
					print TEXOUT "\\medskip\n";
					print TEXOUT "\\newline\n";

					print TEXOUT "\\strut \\hfill {\\LARGE \\bf ".&Tab::texify($entry->name)." } \\hfill \n";
					print TEXOUT "\\medskip\n";
					print TEXOUT "\\newline\n";
					print TEXOUT "\\strut \\hfill \\textsb{\\Large ".uc(&Tab::texify($school->name))." } \\hfill \n";
					print TEXOUT "\\medskip\n";
					print TEXOUT "\\newline\n";

					my $comments = $ballot->scores(tag => 'comments')->first;
					my $points   = $ballot->scores(tag => 'point')->first;
					my $rank     = $ballot->scores(tag => 'rank')->first;
					my $subpoint = $ballot->scores(tag  => 'subpoints')->first;

					my $subpoints = JSON::decode_json($subpoint->text) if $subpoint;

					open (JSON, ">>$filepath.json");
					print JSON $subpoint->text;
					close JSON;

					print TEXOUT "\\textsb{\\large ";
					print TEXOUT Tab::texify($panel->round->realname)." \\hfill ";
					print TEXOUT "Judge ".$counter++." } \n";
					print TEXOUT "\\medskip\n";
					print TEXOUT "\\newline\n";

					print TEXOUT "{\\large ";
					print TEXOUT "Ranking: ".Lingua::EN::Numbers::Ordinate::ordinate($rank->value) if $rank;
					print TEXOUT " \\hfill ";
					print TEXOUT "Total Points: ".$points->value if $points;
					print TEXOUT " } \n";
					print TEXOUT "\\smallskip\n";
					print TEXOUT "\\newline\n";

					print TEXOUT "\\hrule\n";
					print TEXOUT "\\strut\n";
					print TEXOUT "\\smallskip\n";
					print TEXOUT "\\newline\n";

					print TEXOUT "\\strut \\hfill \\textsb{\\large Feedback} \\hfill\n";
					print TEXOUT "\\smallskip\n";
					print TEXOUT "\\newline\n";

					print TEXOUT "\\small\n";

					print TEXOUT $m->comp(
						"/funclib/print_format.mas",
						message => $comments->text
					) if $comments && $comments->content;

					print TEXOUT "\\smallskip\n";
					print TEXOUT "\\newline\n";
					print TEXOUT "\\hrule\n";
					print TEXOUT "\\strut\n";
					print TEXOUT "\\hfill";
					print TEXOUT "\\smallskip\n";
					print TEXOUT "\\newline\n";

					print TEXOUT "\\newline\n";
					print TEXOUT "\\strut \\hfill \\textsb{\\large Score Breakdown} \\hfill\n";
					print TEXOUT "\\smallskip\n";
					print TEXOUT "\\newline\n";

					my $tabular = "\\begin{tabular}{|p{.05in}p{4.95in}|p{.12in}p{.35in}|p{.12in}p{.35in}|}\n";
					my $counter;

					foreach my $type ("content", "speaking", "penalties") {

						print TEXOUT "\\medskip\n";
						print TEXOUT "\\newline\n";

						print TEXOUT "\\begin{tabular}{p{.05in}p{4.95in}p{.65in}p{.6in}}\n";
						print TEXOUT " & \\textsb{\\large \\color{black!64} ".uc($type)." } ";
						print TEXOUT " & \\textsb{\\small \\color{black!64} PREPARED } ";
						print TEXOUT " & \\textsb{\\small \\color{black!64} ASSIGNED } \n";
						print TEXOUT "\\end{tabular}\n";
						print TEXOUT "\\newline\n";

						my $notfirst;

						foreach my $key (sort keys %{$subpoints->{$type}}) {

							print TEXOUT $tabular;
							print TEXOUT "\\hline \n" unless $notfirst++;
							print TEXOUT "\\textsb{".$key."} & ";
							print TEXOUT Tab::texify($subpoints->{$type}{$key}{"text"});

							my @tags = ("total", "prepared", "assigned");
							my $count;

							foreach my $tag (@tags) {

								if ($subpoints->{$type}{$key}{$tag}{'score'}) {

									$count++;

									print TEXOUT " & ";
									print TEXOUT "\\textsb{".$subpoints->{$type}{$key}{$tag}{"score"}."} & ";

									if ($subpoints->{$type}{$key}{$tag}{"max"} != 0) {
										print TEXOUT "\\emph{\\scriptsize ";
										print TEXOUT "out  of ".$subpoints->{$type}{$key}{$tag}{"max"};
										print TEXOUT " } ";
									}
								}
							}

							if ($count < 1) {
								print TEXOUT " & & ";
							}
							if ($count < 2) {
								print TEXOUT " & & ";
							}

							print TEXOUT "\\\\ \\hline \n";
							print TEXOUT "\\end{tabular}\n";
							print TEXOUT "\\newline\n";

						}

					}

					print TEXOUT "\\newpage\n";

				}
			}
		}
	}

	my $new_filename = $m->comp("/funclib/printout.mas",
		tourn       => $tourn,
		filename    => $filename,
		tail        => 1,
		no_redirect => $ARGS{"no_redirect"}
	);

	return $new_filename;

</%init>

<%args>
	$tourn
	$tourn_settings
	$session
	$event_id => undef
	$by_round => undef
	$cutoff   => "14"
	$names    => undef
</%args>
<%init>

	use Tab::NSDA::MemberSchool;

	my @events = sort {$a->name cmp $b->name} $tourn->events ;

	Tab::Entry->columns(TEMP => "tie");
	Tab::Entry->columns(TEMP => "key");

	my $tourn_name = $tourn->name;
	$tourn_name =~ s/[\W_]//g;

	my $filename = $tourn_name."-winner-contacts.csv"; 

	$m->clear_buffer(); 
	$r->content_type('application/csv'); 
	$r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

	our %school_dump;

	EVENT:
	foreach my $event (sort {$a->name cmp $b->name} $tourn->events) { 


		my %order = $m->comp("/tabbing/results/nats_order.mas", 
			event          => $event,
			tourn          => $tourn,
			tourn_settings => $tourn_settings,
			limit          => $cutoff
		);

		$m->print("\n\n");
		$m->print($event->name);
		$m->print("\n");
		$m->print("Top ".$cutoff);
		$m->print("\n\n");

		foreach my $entry_id (sort {$order{$a}{"place"} <=> $order{$b}{"place"}} keys %order) { 
			my $entry = Tab::Entry->retrieve($entry_id);
			next unless $entry;
			print_entry($entry, '', '', $tourn_settings);
		}
	}

	undef %school_dump;

	$m->flush_buffer();
	$m->abort();

	sub print_entry {

		my ($entry, $type, $tag, $tourn_settings) = @_;

		my @students = $entry->students;

		$m->print('"');

		if ($tag && $type ne "elim") {
			
			$m->print("Top Novice") if $tag eq "TN";
			$m->print("Honorable Mention") if $tag eq "HM";

		} elsif ($type eq "final") { 

			my $place = Lingua::EN::Numbers::Ordinate::ordinate($entry->key);
			$m->print($place);

		} elsif ($type eq "elim") { 

			$m->print($tag);

		} else { 

			$m->print($type);
		}
		
		foreach my $student (@students) { 
			$m->print('","');
			$m->print($student->first.'","'.$student->last) ;
		}

		$m->print('","');

		my $nsda_school = $school_dump{$entry->school->id};

		unless ($nsda_school) { 
			$nsda_school = Tab::NSDA::MemberSchool->retrieve($entry->school->chapter->nsda);
			$school_dump{$entry->school->id} = $nsda_school;
		}

		if ($nsda_school) { 

			$m->print($nsda_school->school_name);
			$m->print('","');
			$m->print($nsda_school->school_addr);
			$m->print('","');
			$m->print($nsda_school->school_addr2);
			$m->print('","');
			$m->print($nsda_school->school_city);
			$m->print('","');
			$m->print($nsda_school->school_state);
			$m->print('","');
			$m->print($nsda_school->school_zip);
			$m->print('","');

			my $district = $entry->school->district;

			if ($district) { 
				$m->print($district->name);
				$m->print('","');
			}

			my @advisors = $m->comp(
				"/funclib/nsda_school_advisors.mas", 
				chapter => $entry->school->chapter
			);

			my %advisors_by_type = map {$_->advisor_type => $_} @advisors;

			$m->print($advisors_by_type{"Advisor"}->uemail) if $advisors_by_type{"Advisor"};
			$m->print('","');

			my $coach_name = $entry->setting("coach_script");
			$coach_name = $entry->school->chapter->setting('coaches') unless $coach_name;

			$m->print($coach_name);
			$m->print('","');

			my %principal = $m->comp(
				"/funclib/nsda_school_advisors.mas", 
				chapter   => $entry->school->chapter,
				principal => 1
			);


			$m->print($principal{"title"});
			$m->print('","');

			$m->print($principal{"first"});
			$m->print('","');

			$m->print($principal{"last"});
			$m->print('","');

			$m->print($principal{"email"});

		}

		$m->print('"');
		$m->print("\n");

	}


</%init>


<%args>
	$round_id => undef
	$event_id => undef
</%args>
<%init>

	my @rounds;

	if ($round_id) { 

		push @rounds, Tab::Round->retrieve($round_id);
	
	} elsif ($event_id) { 

		my $event = Tab::Event->retrieve($event_id);
		push @rounds, $event->rounds;

	}

	foreach my $round (@rounds) { 

		foreach my $existing (
			$m->comp(
				"/funclib/round_scores.mas", 
				round => $round
			)
		) { 
			$existing->delete;
		}

		use List::Util 'shuffle';

		foreach my $panel ($round->panels) { 

			foreach my $judge ($m->comp(
				"/funclib/panel_judges.mas", 
					panel => $panel
				)
			) { 

				my @ballots = shuffle(
					Tab::Ballot->search( 
						panel => $panel->id, 
						judge => $judge->id 
					)
				); 

				my $rank;

				foreach my $ballot (@ballots) { 

					next if $ballot->audit;

					$rank++;	

					foreach my $student ($ballot->entry->students) { 

						my $points = int(rand(100));

						Tab::Score->create({
							ballot  => $ballot->id,
							tag     => "points",
							student => $student->id,
							value   => $points
						});

					} 
				
					Tab::Score->create({
						ballot => $ballot->id,
						tag    => "rank",
						value  => $rank
					});

				}

				foreach my $ballot (@ballots) { 
					$ballot->audit(1);
					$ballot->update;
				}

			}

		}

	}

	my $msg = "Ranks faked";
	$m->redirect("/panel/schemat/show.mhtml?round_id=$round_id");

</%init>


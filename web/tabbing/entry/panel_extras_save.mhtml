<%args>
	$tourn
	$person
	$panel_id  => undef
	$judge_id  => undef
</%args>
<%init>

	my $panel = Tab::Panel->retrieve($panel_id) if $panel_id;
	my $judge = Tab::Judge->retrieve($judge_id) if $judge_id;

	my $scrubber = HTML::Scrubber->new( allow => [ qw[ p strong b i u hr br ol ul li] ] );

	if ($panel && $judge) { 

		my @rfds;
		my @comments;

		foreach my $ballot ($panel->ballots(judge => $judge->id)) { 

			foreach my $student ($ballot->entry->students) { 

				my $categories = $ballot->scores(
					student => $student->id,
					tag     => "categories"
				)->first;

				if ($ARGS{"subscores_".$student->id}) { 

					if ($categories) {

						$categories->content($ARGS{"subscores_".$student->id});
						$categories->update();

					} else { 

						Tab::Score->create({
							type     => "categories",
							ballot   => $ballot->id,
							student  => $student->id,
							tiebreak => 8,
							content  => $ARGS{"subscores_".$student->id}
						});

					}
	
				} else {

					$categories->delete() if $categories;

				}

			}

			my @rfds = $ballot->scores(tag => "rfd");

			my $rfd = shift @rfds if @rfds;
		
			if ($rfd) { 

				$rfd->content($scrubber->scrub($ARGS{"rfd"}));
				$rfd->update();

				#Kill the spares
				foreach (@rfds) {
					$_->delete(); 
				} 

			} else { 

				eval { 
					$rfd = Tab::Score->create({
						tag      => "rfd",
						tiebreak => 4,
						ballot   => $ballot->id,
						content  => $scrubber->scrub($ARGS{"rfd"}),
						student  => 0
					});
				};
			}

			my @comments = $ballot->scores( tag => "comments");

			my $comment = shift @comments;

			if ($comment) { 

				$comment->content($scrubber->scrub($ARGS{"comment_".$ballot->id}));
				$comment->update();

				foreach my $comment (@comments) { 
					$comment->delete();
				}


			} else { 

                eval {
                    Tab::Score->create({
                        tag      => "comments",
                        tiebreak => 4,
                        ballot   => $ballot->id,
                        content  => $scrubber->scrub($ARGS{"comments_".$ballot->id}),
                        student  => 0
                    });
                };


			}
		}

	}


	my $description = "Edited the RFD or comments for judge ".$judge->first." ".$judge->last;

	my $changeline = Tab::ChangeLog->create({
		type        => 'tabbing',
		event       => $panel->round->event->id,
		judge       => $judge->id,
		tourn       => $tourn->id,
		old_panel   => $panel->id,
		person      => $person->id,
		description => $description
	});

	my $msg = "RFD & comments edited for section ".$panel->letter." judge ".$judge->last;

	$m->redirect("panel.mhtml?panel_id=".$panel_id."&judge_id=".$judge_id."&msg=$msg");

</%init>



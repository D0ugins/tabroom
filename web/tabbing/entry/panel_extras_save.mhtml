<%args>
	$tourn
	$person
	$panel_id  => undef
	$judge_id  => undef
</%args>
<%init>

	my $panel = Tab::Panel->retrieve($panel_id) if $panel_id;
	my $judge = Tab::Judge->retrieve($judge_id) if $judge_id;

	if ($panel && $judge) {

		my @rfds;
		my @comments;
		my @subpoints;

		foreach my $ballot ($panel->ballots(judge => $judge->id)) {

			next unless $ballot->entry > 0;

			foreach my $student ($ballot->entry->students) {

				my $categories = $ballot->scores(
					student => $student->id,
					tag     => "categories"
				)->first;

				if ($ARGS{"subscores_".$student->id}) {

					if ($categories) {

						$categories->content($ARGS{"subscores_".$student->id});
						$categories->update();

					} else {

						Tab::Score->create({
							type     => "categories",
							ballot   => $ballot->id,
							student  => $student->id,
							tiebreak => 8,
							content  => $ARGS{"subscores_".$student->id}
						});
					}

				} else {
					$categories->delete() if $categories;
				}
			}

			foreach my $score ($ballot->scores(tag => "congress_speech")) {
				$score->content($m->comp("/funclib/save_editor.mas",
					text => $ARGS{"congress_speech_".$score->id}
				));
				$score->update();
			}

			my @rfds = $ballot->scores(tag => "rfd");
			my $rfd = shift @rfds if @rfds;

			if ($rfd) {

				$rfd->content($m->comp("/funclib/save_editor.mas",
					text => $ARGS{"rfd"})
				);

				$rfd->update();

				#Kill the spares
				foreach (@rfds) {
					$_->delete();
				}

			} else {

				eval {

					my $text = $m->comp("/funclib/save_editor.mas",
						text => $ARGS{"rfd"}
					);

					$rfd = Tab::Score->create({
						tag      => "rfd",
						tiebreak => 4,
						ballot   => $ballot->id,
						content  => $text,
						student  => 0
					});
				};
			}

			foreach my $other_comment (
				$ballot->scores( tag => "comments")
			) {
				$other_comment->delete();
			}

			my $text = $m->comp("/funclib/save_editor.mas",
				text => $ARGS{"comments_".$ballot->id}
			);

			Tab::Score->create({
				tag      => "comments",
				tiebreak => 4,
				ballot   => $ballot->id,
				content  => $text,
				student  => 0
			});

			foreach my $other_subpoint (
				$ballot->scores( tag => "subpoints")
			) {
				$other_subpoint->delete();
			}

			Tab::Score->create({
				tag      => "subpoints",
				tiebreak => 4,
				ballot   => $ballot->id,
				content  => $ARGS{"subpoints_".$ballot->id},
				student  => 0
			});

		}
	}

	my $description = "Edited the RFD or comments for judge ".$judge->first." ".$judge->last if $judge;
	my $now = DateTime->now();

	eval {
		my $changeline = Tab::ChangeLog->create({
			type        => 'tabbing',
			event       => $panel->round->event->id,
			judge       => $judge->id,
			tourn       => $tourn->id,
			old_panel   => $panel->id,
			person      => $person->id,
			created     => $now,
			description => $description
		});
	};

	my $msg = "RFD and comments edited for section ".$panel->letter." judge ".$judge->last;
	$m->redirect("panel.mhtml?panel_id=".$panel_id."&default=".$judge_id."&msg=$msg");

</%init>

<%args>
	$person
	$person_settings
	$session
	$tourn
	$tourn_settings
	$defaults      => undef
	$perms         => undef
	$judge_id      => undef
	$judge_code    => undef
	$timeslot_id   => undef
	$flight        => undef
	$all           => undef
	$errs          => undef
	$ballot_err    => undef
	$rank_string   => undef
	$audit_mode    => undef
	$entry_only    => undef
	$points_later  => undef
	$only_category => undef
</%args>
<%init>

    my $judge;

    if ($judge_id) {

        $judge = Tab::Judge->retrieve($judge_id);

    } elsif ($judge_code) {

        my @code_judges = $m->comp(
			"/funclib/tourn_judges.mas",
			tourn => $tourn,
			code  => $judge_code,
			nats  => $tourn_settings->{"nsda_nats"}
		);

        $judge = shift @code_judges if @code_judges;
    }

	my ($eventref, $catref) = $m->comp(
		"/funclib/allowed_events.mas",
		tourn => $tourn,
		perms => $perms
	);

	my %cats = map {$_->id => $_} @{$catref};
	my %evs = map {$_->id => $_} @{$eventref};

	if (scalar @{$eventref} == 1) {
		$defaults->{event} = int(${$eventref}[0])
			if $evs{int(${$eventref}[0])};
	}

	if (scalar @{$catref} == 1) {
		$defaults->{cat} = ${$catref}[0];
	}

	my $session_category;

	if ($only_category) {

		$session->category($only_category->id);
		$session->update;

		if ($evs{$session->event} && $session->event->category == $only_category) {

		} elsif ($defaults->{event} && $evs{$defaults->{event}}->category == $only_category) {

		} else {
			$session->event();
			$session->update();
		}

	} elsif ($defaults->{category}) {

		my $cat = Tab::Category->retrieve($defaults->{category});

		if ($cat && $cat->tourn == $tourn) {
			$session_category = $cat;
			$session->category($cat->id);
			$session->update();
		}

		if ($session->event && $session->event->category != $cat) {
			$session->event();
			$session->update();
		}

	} elsif ($session->category) {

		$session_category = $session->category;

	} elsif ($defaults->{event} && $evs{$defaults->{event}}) {

	}

	my $session_event;

	if ($defaults->{event}) {
		my $ev = Tab::Event->retrieve($defaults->{event});

		if ($ev && $cats{$ev->category}) {
			$session_event = $ev;
			$session_category = $cats{$ev->category};
		}

	} elsif ($session->event) {
		$session_event = $session->event;
		undef $session_event if $session_event && ($session_event->category != $session_category);
	}

	if ($session_event && (not defined $session_category)) {
		$session_category = $session_event->category;
	}

	unless ($session_event) {
		my @cevs;
		foreach my $ev (@{$eventref}) {
			push @cevs, $ev if $ev->category->id == $session_category;
		}

		if (scalar @cevs == 1) {
			$session_event = shift @cevs;
		}
	}

	undef $session_category unless $cats{$session_category};
	undef $session_event unless $evs{$session_event};


	if ($session_category && ($session_category != $defaults->{category})){
		$defaults->{category} = $session_category->id;
		$session->category($session_category);
	}

	if ($session_event && ($session_event != $defaults->{event})){
		$defaults->{event} = $session_event->id;
		$session->event($session_event);
	}

	$session->default($defaults);
	$session->update();

	if ($session_event) {
		if ($session_event->setting("combined_ballots")) {
			$m->redirect("combined.mhtml");
		}
	}

	my $timeslot = Tab::Timeslot->retrieve($timeslot_id)
		if $timeslot_id
		&& $timeslot_id == int($timeslot_id);

	if ($session_category) {
		 $timeslot = $m->comp(
		 	"/funclib/category_timeslots.mas",
				category => $session_category,
				undone   => 1
		) if $session_category
			&& not defined $timeslot;
	}

    $flight = 1 unless $flight;
    my @panels = $m->comp(
		'/funclib/judge_panels.mas',
			flight   => $flight,
			judge    => $judge,
			timeslot => $timeslot
	) if $judge && $timeslot ;

    my $panel = shift @panels if @panels;

	$m->comp("/funclib/panel_dedupe.mas",
		panel => $panel
	) if $panel;

</%init>

	<& "menu.mas",
		tourn          => $tourn,
		tourn_settings => $tourn_settings,
		timeslot       => $timeslot,
		perms          => $perms,
		all            => $all,
		session        => $session,
		panel          => $panel,
		judge          => $judge,
		flight         => $flight,
		points_later   => $points_later,
		audit_mode     => $audit_mode,
		entry_only     => $entry_only,
		only_category  => $only_category,
		category       => $session_category,
		event          => $session_event,
		person         => $person,
	&>

	<div class="main">
		<% $rank_string %>

%		if ($ballot_err) {

			<h1 class="warning centeralign"
				style="margin-top: 50px;"
			>
				OH, NOES!!!!
			</h1>

			<h2 class="warning centeralign">
				STOP RIGHT THERE
			</h2>

			<h2 style="text-align: center;">
				The last ballot had an error:
			</h2>

			<h4 class="warning centeralign">
				<% $ballot_err %>
			</h4>

%		   if ($judge) {
				<h4 class="warning centeralign">
					Judge: <% $judge->first." ".$judge->last %>
				</h4>
%		   }

			<p class="centeralign">
				Each ballot must be entered the same way twice in a row to be
				accepted.  Pass the ballot to someone else to enter again.
				This error will disappear once the ballot has been entered the
				same way twice in a row.
			</p>

%		} else {

%			if ($errs) {
				<div class="centeralign borderred">

					<h2 class="orangetext">
						Terrible terrible damage!
					</h2>

					<span class="leftalign threequarters redtext semibold">
						<% $errs %>
					</span>

				</div>
%			}

%			if ($judge &! $panel) {
				<h4 class="centeralign"
					style="margin-bottom: 75pt; margin-top: 50pt;"
				>
					No ballots found for that judge in this round
				</h4>
%			}

%			unless ($judge) {
				<h4 class="centeralign"
					style="margin-bottom: 75pt; margin-top: 75pt;"
				>
					Select a judge on the right to continue
				</h4>
<%perl>

			}

			if ($panel) {

				my $round = $panel->round;
				my $event = $round->event;
				my $tiebreak_set = $round->tiebreak_set;

				unless ($tiebreak_set > 0) {

					my $err = "This round doesn't have tiebreakers, thus I do
					not know what to ask you for. Set them and try again";

					$m->redirect("/setup/schedule/event.mhtml?round_highlight=".$round->id."&event_id=".$event->id."&err=$err");

				}

				my $event_type = $event->type;

				$event_type = "debate"
					if $event_type eq "pf"
					|| $event_type eq "ld"
					|| $event_type eq "big_questions"
					|| $event_type eq "policy"
					|| $event_type eq "parli";

				$event_type = "debate"
					if $event_type eq "wsdc"
					&& $round->type eq "elim";

				$event_type = "legion"
					if $tourn_settings->{"legion"};

				$event_type = "debate"
					if $event_type eq "wsdc"
					&& $round->type eq "final"
					&& $round->type eq "runoff";

</%perl>

%				if ($event_type eq "legion") {

					<& "ballots/legion.mas",
						session         => $session,
						person          => $person,
						person_settings => $person_settings,
						judge           => $judge,
						timeslot        => $timeslot,
						panel           => $panel,
						tourn           => $tourn,
						tourn_settings  => $tourn_settings,
					&>

<%perl>
				} elsif ($event_type eq "congress"
						&& ($tourn_settings->{"ncfl"}
						|| $points_later
					)
				) {
</%perl>

					<& "ballots/congress_points.mas",
						session         => $session,
						person          => $person,
						person_settings => $person_settings,
						judge           => $judge,
						timeslot        => $timeslot,
						panel           => $panel,
						tourn           => $tourn,
						tourn_settings  => $tourn_settings,
					&>

%				} elsif ($event_type eq "wudc") {

					<& "ballots/wudc.mas",
						session         => $session,
						person          => $person,
						person_settings => $person_settings,
						judge           => $judge,
						timeslot        => $timeslot,
						panel           => $panel
					&>

%				} elsif ($event_type eq "wsdc") {

%					if ($event->setting("wsdc_subtotal_ballot")) {

						<& "ballots/wsdc_subtotal.mas",
							session         => $session,
							person_settings => $person_settings,
							person          => $person,
							judge           => $judge,
							timeslot        => $timeslot,
							panel           => $panel
						&>

%					} else {

						<& "ballots/wsdc.mas",
							session         => $session,
							person          => $person,
							person_settings => $person_settings,
							judge           => $judge,
							timeslot        => $timeslot,
							panel           => $panel
						&>

%					}

%				} elsif ($event_type eq "debate") {

					<& "ballots/debate.mas",
						session         => $session,
						person          => $person,
						person_settings => $person_settings,
						judge           => $judge,
						timeslot        => $timeslot,
						panel           => $panel
					&>

%				} elsif ($event_type eq "speech") {

					<& "ballots/speech.mas",
						session        => $session,
						person         => $person,
						judge          => $judge,
						timeslot       => $timeslot,
						tourn_settings => $tourn_settings,
						panel          => $panel
					&>

%				} elsif ($event_type eq "congress") {

					<& "ballots/congress.mas",
						session  => $session,
						person   => $person,
						judge    => $judge,
						timeslot => $timeslot,
						panel    => $panel
					&>

%				}
%			}
%		}

	</div>

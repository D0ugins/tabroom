<%args>
	$tourn
	$tourn_settings
	$event 
	$limit => "32"
</%args>
<%init>

	my %integer_tbs = $m->comp("/funclib/tiebreaks.mas");

	my @rounds = sort {$b->name <=> $a->name} 
		$m->comp(
			"/funclib/event_rounds.mas", 
			event      => $event,
			had_rounds => 1
		);

	my $final;
	my $semi;
	my $last_nonelim;
	my $first_nonelim;
	my @prelims;

	my $runoffs; 

	foreach my $round (@rounds) { 

		if ($round->type eq "runoff") { 
			$runoffs++;
			next;
		}

		if ($round->type eq "final"
			&& (not defined $final) 
		) {

			$final = $round;

		} elsif ($round->type eq "elim" 
			&& (not defined $semi)
		){

			$semi = $round;

		} else { 

			$last_nonelim = $round if (not defined $last_nonelim);
			$first_nonelim = $round;
			push @prelims, $round;
		}
	}

	my $final_tiebreaks = $final->tiebreak_set if $final;

	my @final_results = $m->comp(
		"/tabbing/results/order_entries.mas",
			round       => $final,
			all_entries => 1,
			runoffs     => $runoffs
		) if $final;

	my $final_entries_ref = pop @final_results if @final_results;

	my %in_finals = ();
	my %in_elims = ();
	my %in_round = ();
	my %round_count = ();

	my %last_prelim = ();
	my $alt = 1;

	my %entries; 
	my $done;
	my $counter;

	if (${$final_entries_ref}{"by_place"}) { 

		KEY:
		foreach my $key (sort {$a <=> $b} keys %{${$final_entries_ref}{"by_place"}}) { 
			
			next if $done;
		
			my $tie++ if scalar @{${${$final_entries_ref}{"by_place"}}{$key}} > 1; 
		
			foreach my $entry_id (@{${${$final_entries_ref}{"by_place"}}{$key}}) { 

				next if $in_elims{$entry_id};

				if ($counter++ >= $limit) { 
					$done++;
					last KEY;
					next KEY;
				}

				$in_finals{$entry_id} = $key;
				$in_elims{$entry_id}  = $key;

				$entries{$entry_id}{"tie"}++ if $tie;
				$entries{$entry_id}{"place"} = $key;
			}
		}
	}

	if ($final && $semi && (not defined $done))  { 

		my @semi_results = $m->comp(
			"/tabbing/results/order_entries.mas",
			round        => $semi,
			tiebreak_set => $final_tiebreaks,
			runoffs      => $runoffs,
			all_entries  => 1
		);

		my $semi_entries_ref = pop @semi_results 
			if @semi_results;

		if (${$semi_entries_ref}{"by_place"}) { 

			KEY:
			foreach my $key (sort {$a <=> $b} keys %{${$semi_entries_ref}{"by_place"}}) { 
			
				next if $done;

				my $tie++ if scalar @{${${$semi_entries_ref}{"by_place"}}{$key}} > 1; 
			
				foreach my $entry_id (@{${${$semi_entries_ref}{"by_place"}}{$key}}) { 
				
					next if $in_elims{$entry_id};
					$in_elims{$entry_id} = $key;

					next if $entries{$entry_id} && $entries{$entry_id}{"place"};

					if ($counter++ >= $limit) { 
						$done++;
						last KEY;
						next KEY;
					}

					$entries{$entry_id}{"tie"}++ if $tie;
					$entries{$entry_id}{"place"} = $key;
				}
			}
		}
	}

	if ($final && @prelims && not defined ($done)) { 

		PRELIM:
		foreach my $prelim (@prelims) { 

			next if $done;

			my @previous_results = $m->comp(
				"/tabbing/results/order_entries.mas",
					round        => $prelim,
					runoffs      => $runoffs,
					tiebreak_set => $final_tiebreaks,
			);

			my $previous_entries_ref = 
				pop @previous_results 
				if @previous_results;

			if (${$previous_entries_ref}{"by_place"}) { 

				foreach my $key (
					sort {$a <=> $b} 
					(keys %{${$previous_entries_ref}{"by_place"}})
				) { 
					
					my $tie++ 
						if scalar @{${${$previous_entries_ref}{"by_place"}}{$key}} > 1; 

					foreach my $entry_id (@{${${$previous_entries_ref}{"by_place"}}{$key}}) { 

						unless ($in_finals{$entry_id} 
							|| $in_elims{$entry_id}
							|| $in_round{$entry_id}
						) { 
							$in_round{$entry_id} = $prelim->name;
							$round_count{$prelim->name}++;
						}

						next if $entries{$entry_id} && $entries{$entry_id}{"place"};

						if ($counter++ >= $limit) { 
							$done++;
							last PRELIM;
							next PRELIM;
						}
						$entries{$entry_id}{"tie"}++ if $tie;
						$entries{$entry_id}{"place"} = $key;
					}
				}
			}
		}
	}

	return %entries; 

</%init>


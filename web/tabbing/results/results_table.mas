<%args>
	$round
	$printok         => undef
	$nsda_districts  => undef
	$nsda_nats       => undef
	$section         => undef
	$num_qualifiers  => undef
	$tiebreak_set    => undef
	$threshold       => undef
	$qualifiers      => undef
	$vacated         => undef
	$alternates      => undef
	$nsda            => undef
	$exclude         => undef
	$none_above      => undef
	$section_rank    => undef
	$start_placement => undef
	$noheader        => undef
	$nofinish        => undef
	$vacate_option   => undef
	$limit           => undef
	$qualbox         => undef
	$tourn_settings  => undef
</%args>
<%init>

	return unless $round;

	$tiebreak_set = $round->tiebreak_set 
		unless $tiebreak_set;

	$m->comp("/funclib/abort.mas", 
		message => "Round ".$round->realname." has no tiebreakers assigned"
	) unless $tiebreak_set;

	$section_rank++ 
		if $tiebreak_set->setting("equal_elims")
		&& ($round->type eq "elim" || $round->type eq "prelim");

	my $event = $round->event;

	my $debate_all++ 
		if $nsda_districts 
		&& $event->type eq "debate";

	my $final_tbset;

	if ($event->type eq "debate" 
		&& $round->type eq "final" 
		&& $tourn_settings 
		&& $tourn_settings->{"nsda_pilot_debate"}
	) { 
		$final_tbset = $event->tourn->tiebreak_sets(name => "Debate Elim")->first;
	} elsif ($event->type eq "debate" 
		&& $round->type eq "highlow"
		&& $tourn_settings 
		&& $tourn_settings->{"nsda_pilot_debate"}
	) { 
		$final_tbset = $event->tourn->tiebreak_sets(name => "Debate")->first;
	} else { 
		$final_tbset = $tiebreak_set;
	}


	my (@results) = $m->comp(
		"order_entries.mas", 
			long_names   => 1,
			nsda         => $nsda,
			round        => $round,
			tiebreak_set => $final_tbset,
			all_entries  => $debate_all,
			section_rank => $section_rank,
			section      => $section
	);

	my %priorities; 

	foreach my $school ($m->comp("/funclib/event_schools.mas", event => $event)) { 

		my $blob = $school->setting("single_entry_letters");
		my %student_priorities = %{JSON::decode_json($blob)} if $blob;

		foreach my $student_id (keys %student_priorities) { 
			foreach my $entry_id (keys %{$student_priorities{$student_id}}) { 
				$priorities{$entry_id} = $student_priorities{$student_id}{$entry_id};
			}
		}
	}

	my $entries_ref = pop @results if @results;

	my %entry_by_id = 
		map {$_->id => $_} $event->entries(active => 1) 
		if $nsda_districts;

	unless ($entries_ref) { 
		$m->print("No entries and results delivered for round ".$round->realname);
		return;
	}

	my %event_settings = $event->all_settings;

	my $round_robin++ 
		if $event_settings{"round_robin"} 
		&& $round->type ne "elim" 
		&& $round->type ne "final"
		&& $round->type ne "runoff";

    my $novice = $event_settings{"top_novice"};

	foreach my $key (keys %{$none_above}) {
		if ($none_above->{$key} > $round->name) { 
			$exclude->{$key} = $round->name + 1;
			$start_placement++;
		} 
	}

	# How does this even happen anyway?
	undef $novice if $novice eq "none"; 

	if ($novice) { 
		my @novii = $m->comp(
			"/funclib/event_novii.mas", 
			event => $event
		);
		my %novices = map {$_->id => 1} @novii;
		${$entries_ref}{"novice"} = \%novices;
	}

    my %breakouts = ();

    if ($event_settings{"breakouts"}) {

        foreach my $breakout (1 .. $event_settings{"breakouts"}) {

            $breakouts{$breakout}{"name"} = $event_settings{"breakout_".$breakout."_label"};

            my @settings = $m->comp(
				"/funclib/event_entry_settings.mas",
                event => $event,
                tag   => "breakout_".$breakout
            );

            foreach my $setting (@settings) {
                $breakouts{$breakout}{$setting->entry->id}++;
            }
        }
    }

    my $codes = $event_settings{"code_style"} if $event;

    my $no_school++ if ($codes eq "school_number"
        || $codes eq "school_names"
        || $codes eq "initials"
        || $codes eq "school_name_only"
        || $codes eq "schoolname_code"
        || $codes eq "full_initials");

	undef $no_school if $nsda_districts;

	my @schools = $m->comp(
		"/funclib/event_schools.mas", 
		event => $event
	);

	my %school_name = 
		map {$_->id => &Tab::short_name($_->name)} 
		@schools;

    my %entry_ballots = $m->comp(
		"/funclib/round_ballot_strings.mas",
		round       => $round,
		entries_ref => $entries_ref
	);  

	my %cutoff;

	my @tiebreak_keys = 
		sort {$a <=> $b} 
		keys %{$entries_ref->{"tier_description"}};

	my $cutoff_key = $tiebreak_keys[0] 
		if @tiebreak_keys && $threshold; 

	my $mark_ties++ 
		if scalar @tiebreak_keys > 1;

	my @ineligibles = $m->comp(
		"/funclib/event_entry_settings.mas",
		event => $event,
		tag   => "no_elims"
	);

	my %ineligible = 
		map {$_->entry->id => $_->value} 
		@ineligibles;

</%init>

	<script>

		$(document).ready(function(){
			$("#"+<% $round->id %>).trigger("applyWidgets");
		});

	</script>

%		unless ($noheader) { 

%			if ($section) { 

				<h4>
					<% $event->type eq "congress" ? "Chamber" : "" %>
					<% $event->type eq "speech" ? "Section" : "" %>
					<% $event->type ne "speech" && $event->type ne "congress" ? "Debate" : "" %>
					<% $section->letter %>
				</h4>
%			}

%			my $table_key = $round->id;
%			$table_key = $section->id if $section;

%			my $nobuttons = 1 unless $ARGS{"printok"};

			<& "/funclib/tablesorter.mas", 
				table     => $table_key,
				nobuttons => $nobuttons
			&>

				<table id="<% $table_key %>">

				<thead>

					<tr class="yellowrow"> 

						<th class="smallish">
							<% $qualbox ? "Reg" : $nsda_districts ? "Qual" : "Count" %>
						</th>

						<th class="smallish">
							Place
						</th>

						<th class="smallish">
							Code
						</th>

%						if ($nsda_districts) { 
							<th 
								title = "Priority for single entry intents"
								class = "smaller"
							>
								Choice
							</th>
%						}

%						if ($novice) { 
							<th class="smaller centeralign">
								Nov
							</th>
%						} 

%						foreach my $break (keys %breakouts) { 
							<th class="smallish centeralign">
								<% $breakouts{$break}{"name"} %>
							</th>
%						}

%						unless ($codes eq "names" 
%								|| $codes eq "last_names" 
%								|| $codes eq "names_lastfirst") { 

							<th class="smallish">
								Name
							</th>
%						} 

%						unless ($no_school) { 
							<th class="smallish">
								School
							</th>
%						} 

%						if ($nsda_districts || $nsda_nats) { 
							<th class="smallish">
								Round
							</th>
%						}

%						if ($section_rank) { 

							<th class="smallish">

								<span title="Rank within Section or Chamber">
									ScRk
								</span>

							</th>

							<th class="smallish">

								<span class="Section or Chamber">
									Sec
								</span>

							</th>

%						} elsif ($round_robin) { 

							<th class="smallish">
								<span title="Rank within Pod">
									PdRk
								</span>
							</th>

							<th class="smallish">
								<span class="Pod">
									Pod
								</span>
							</th>
%						}

%						foreach my $key (@tiebreak_keys) { 

							<th class="smallish">
								<span title="<% ${$entries_ref}{"tier_long_description"}{$key} %>">
									<% ${$entries_ref}{"tier_description"}{$key} %>
								</span>
							</th>
%						}

%						if ($ARGS{"runoffs"}) { 
							<th class="smallish">
								Runoff
							</th>
%						}

%						if ($vacate_option) { 
							<th 
								class = "smallish"
								title = "Vacate slot; entry qualified in a higher preferred slot"
							>
								Vacated
							</th>
%						}


					</tr>

				</thead>

				<tbody>

%			}

<%perl>
					my $count = $start_placement;
					$count = 1 unless $count;
					my $alt_count = 1;

					if (${$entries_ref}{"by_place"}) { 

						my $last_tied;

						foreach my $key (sort {$a <=> $b} keys %{${$entries_ref}{"by_place"}}) { 

							my $tie++ if (scalar @{${${$entries_ref}{"by_place"}}{$key}}) > 1;
							my $did;

							ENTRY:
							foreach my $entry_id (@{${${$entries_ref}{"by_place"}}{$key}}) { 

								next if $limit && $count > $limit;
								next if $exclude && $exclude->{$entry_id}++;
								$did++;

</%perl>
								<tr class="<% $tie && $last_tied && $mark_ties ? "libordertop" : "" %>" >

%									undef $last_tied;

%									if ($qualbox) { 

										<td 
											id    = "<% $entry_id %>"
											class = "qualbox centeralign"
										>
										</td>

%									} else {
									<td class="centeralign smallish nowrap nospace">

%										if ($nsda_districts) { 

%											if ($section) { 

%												if ($entries_ref->{"dq"}{$entry_id}) { 
													<span class="full nospace redtext strong">
														DQ
													</span>
%												} elsif ($vacated && $vacated->{$entry_id}{"place"}) { 
													<span 
														title="This entry qualled in their preferred event and gave up this slot to Nationals"
														class="full nospace greytext italic">
														Vacated
													</span>
%												} elsif ($num_qualifiers > 0) { 
													<span class="full nospace greentext strong">
														QUAL
													</span>
%													$num_qualifiers--;
%												} else { 
													<% Lingua::EN::Numbers::Ordinate::ordinate(
															$alt_count++
														)
													%> Alt
%												}

%											} else { 

%#												Tab::debuglog("Key $key entry $entry_id code ".$entries_ref->{"code"}{$entry_id}." num quals is $num_qualifiers and the other thing is ".$qualifiers->{$entry_id}{"place"});

%												if ($entries_ref->{"dq"}{$entry_id}) { 
													<span class="full nospace redtext strong">
														DQ
													</span>
%												} elsif ($vacated && $vacated->{$entry_id}{"place"}) { 
													<span 
														title="This entry qualled in their preferred event and vacated this slot to Nationals"
														class="full nospace greytext italic">
														Vacated
													</span>

%												} elsif ($qualifiers && $qualifiers->{$entry_id}{"place"}) { 
													<span class="full nospace greentext strong">
														QUAL
													</span>
%												} elsif ($alternates && $alternates->{$entry_id}{"place"}) { 
													<% Lingua::EN::Numbers::Ordinate::ordinate(
														$alternates->{$entry_id}{"place"}) 
													%> Alt
%												}
%											}

%										} elsif ($event_settings{"usa_wsdc"} && $round->type ne "final") { 

%										} else { 
											<% $count++ %>
%										}
									</td>
%									}

									<td 
										<% $ineligible{$entry_id} ? 
											'title="Ineligible to clear to elims"'
											: "" 
										%>
										class="centeralign smallish nowrap nospace"
									>
											
										<% $tie && $mark_ties 
											? '<span class="redtext semibold borderredmed biggish padmore">'
											: "" %> 

%										if ($event_settings{"usa_wsdc"} && $round->type ne "final") { 
											
											<% $round->realname %>

%										} else { 
											<% $tie ? "T-" : "" %><% 
												$start_placement 
												? $start_placement 
												: $key 
											%>
											<% $ineligible{$entry_id} ? 
												'<span class="orangetext strong fa fa-exclamation-triangle"></span>'
												: ""
											%>
%										} 
										<% $tie && $mark_ties 
											? "</span>"
											: ""
										%>
									</td>

									<td 
										class="smallish nospace padleft hover" 
										data-title="Scores<% $entry_ballots{$entry_id} %>"
									>
										<% $entries_ref->{"code"}{$entry_id} %>
									</td>

%									if ($nsda_districts) { 

										<td class="smallish centeralign">
											<% $priorities{$entry_id} %>
										</td>

%									}

%									if ($novice) {
										<td class="smallish centeralign">
											<% ${$entries_ref}{"novice"}{$entry_id} ? " Nov " : "" %>
										</td>
%									}

%									foreach my $break (keys %breakouts) { 
										<td class="smallish centeralign">
											<% $breakouts{$break}{$entry_id} 
												? $breakouts{$break}{"name"} 
												: ""
											%>
										</td>
%									}

<%perl>

									unless ($codes eq "names" 
										|| $codes eq "last_names" 
										|| $codes eq "names_lastfirst"
									) { 
</%perl>

										<td 
											class="smallish nospace padleft" 
											title="<% ${$entries_ref}{"name"}{$entry_id} %>"
										>
%											if ($nsda_districts) { 

%												if ($entry_by_id{$entry_id}) { 
%												foreach my $student ($entry_by_id{$entry_id}->students) { 
													<div 
														title = "<% $student->nsda %>"
														id    = "<% $student->id %>"
														class = "marno hover padtop padbottom padleft"
													>
														<% $student->first %> <% $student->last %>
													</div>
%												}
%												}

%											} else { 
												<% ${$entries_ref}{"name"}{$entry_id} %>
%											} 
										</td>
%									}

%									unless ($no_school) { 
										<td class="smallish">
											<% $school_name{${$entries_ref}{"school_id"}{$entry_id}} %>
										</td>
%									}

%									if ($nsda_districts || $nsda_nats) { 

										<td class="smallish centeralign">
<%perl>
											if ($none_above && $none_above->{$entry_id}) { 

												$m->print($none_above->{$entry_id});

											} elsif ($round->type eq "final") { 
												
												$m->print("FINAL");

											} else { 

												$m->print($round->name);

											}
</%perl>
										</td>
%									}

%									if ($section_rank) { 

										<td class="smallish">
											<% ${$entries_ref}{"section_rank"}{$entry_id} %> 
										</td>

										<td class="smallish">
											<% ${$entries_ref}{"section"}{$entry_id} %> 
										</td>
%									}

%									if ($round_robin) { 

										<td class="smallish">
											<% ${$entries_ref}{"pod_rank"}{$entry_id} %> 
										</td>

										<td class="smallish">
											<% ${$entries_ref}{"pod"}{$entry_id} %> 
										</td>
%									}

<%perl>

									foreach my $key (@tiebreak_keys) { 

										my $value = ${$entries_ref}{"tiebreak"}{$key}{$entry_id};

										if ($key == $cutoff_key) {

											if ($ARGS{"threshold_direction"} eq "desc") { 

												$cutoff{$entry_id}++ if $value < $threshold;

											} else { 

												$cutoff{$entry_id}++ if $value >= $threshold;

											}
										}

										my $digits = '%.'.$entries_ref->{"tb_digits"}{$key}.'f';
										$value =~ s/\.(?:|.*[^0]\K)0*\z//;
										$value = sprintf($digits, $value);

</%perl>

										<td 
											class="smallish nowrap rightalign 
												<% $cutoff{$entry_id} ? "strong redtext" : "" %>"
										>
											<% $value %>
										</td>
%									}

%									if ($vacate_option) { 

										<td class="centeralign padless">

											<span class="hidden"><% $vacated->{$entry_id}{"place"} %></span>

											<label class="switch smaller">

												<input 
													type         = "checkbox"
													value        = "1"
													id           = "<% $entry_id %>_nsda_vacate"
													setting_name = "nsda_vacate"
													target_type  = "entry"
													target_id    = "<% $entry_id %>"
													onChange     = "postSwitch(
														this, 
														'/register/entry/entry_switch.mhtml'
													);"

													<% $vacated->{$entry_id}{"place"} ?  'checked="checked"' : "" %>
												>
												<div class="onred slider"></div>

											</label>

										</td>
			

%									}

								</tr>
<%perl>

							}
							$start_placement += $did if $start_placement;
							$last_tied++ if $tie;
						} 
					}
</%perl>

%		unless ($nofinish) { 
				</tbody>
			</table>
%		} 

%		if ($novice) { 
			<p class="explain">(N) designates all-novice teams</p>
%		} 

%		return %cutoff if $threshold;


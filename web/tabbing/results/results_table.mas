<%args>
	$round
	$tiebreak_set    => undef
	$threshold       => undef
	$qualifiers      => undef
	$vacated         => undef
	$alternates      => undef
	$others          => undef
	$nsda_districts  => undef
	$nsda            => undef
	$exclude         => undef
	$none_above      => undef
	$section_rank    => undef
	$start_placement => undef
	$noheader        => undef
	$nofinish        => undef
</%args>
<%init>

	return unless $round;

	$tiebreak_set = $round->tiebreak_set unless $tiebreak_set;

	$m->abort unless $tiebreak_set;

	$section_rank++ 
		if $tiebreak_set->setting("equal_elims")
		&& ($round->type eq "elim" || $round->type eq "prelim");

	my $event = $round->event;

	my $debate_all++ if $nsda_districts && $event->type eq "debate";

	my (@results) = $m->comp(
		"order_entries.mas", 
			long_names   => 1,
			nsda         => $nsda,
			round        => $round,
			tiebreak_set => $tiebreak_set,
			all_entries  => $debate_all,
			section_rank => $section_rank
	);

	my $entries_ref = pop @results if @results;

	my %entry_by_id = 
		map {$_->id => $_} $event->entries 
		if $nsda_districts;

	return unless $entries_ref;

	my %event_settings = $event->all_settings;


	my $round_robin++ 
		if $event_settings{"round_robin"} 
		&& $round->type ne "elim" 
		&& $round->type ne "final";

    my $novice = $event_settings{"top_novice"};

	foreach my $key (keys %{$none_above}) {

		if ($none_above->{$key} > $round->name) { 
			$exclude->{$key}++;
			$start_placement++;
		} 

	}

	# How does this even happen anyway?
	undef $novice if $novice eq "none"; 

	if ($novice) { 
		my @novii = $m->comp(
			"/funclib/event_novii.mas", 
			event => $event
		);
		my %novices = map {$_->id => 1} @novii;
		${$entries_ref}{"novice"} = \%novices;
	}

    my %breakouts = ();

    if ($event_settings{"breakouts"}) {

        foreach my $breakout (1 .. $event_settings{"breakouts"}) {

            $breakouts{$breakout}{"name"} = $event_settings{"breakout_".$breakout."_label"};

            my @settings = $m->comp(
				"/funclib/event_entry_settings.mas",
                event => $event,
                tag   => "breakout_".$breakout
            );

            foreach my $setting (@settings) {
                $breakouts{$breakout}{$setting->entry->id}++;
            }

        }

    }

    my $codes = $event_settings{"code_style"} if $event;

    my $no_school++ if ($codes eq "school_number"
        || $codes eq "school_names"
        || $codes eq "initials"
        || $codes eq "school_name_only"
        || $codes eq "schoolname_code"
        || $codes eq "full_initials");

	undef $no_school if $nsda_districts;

	my @schools = $m->comp(
		"/funclib/event_schools.mas", 
		event => $event
	);

	my %school_name = 
		map {$_->id => &Tab::short_name($_->name)} 
		@schools;

    my %entry_ballots = $m->comp(
		"/funclib/round_ballot_strings.mas", 
		round => $round
	);  

	my %cutoff;

	my @tiebreak_keys = 
		sort {$a <=> $b} 
		keys %{$entries_ref->{"tier_description"}};

	my $cutoff_key = $tiebreak_keys[0] 
		if @tiebreak_keys && $threshold; 

	my $mark_ties++ 
		if scalar @tiebreak_keys > 1;

	my @ineligibles = $m->comp(
		"/funclib/event_entry_settings.mas",
		event => $event,
		tag   => "no_elims"
	);

	my %ineligible = map {$_->entry->id => $_->value} @ineligibles;

</%init>

	<script>

		$(document).ready(function(){
			$("#"+<% $round->id %>).trigger("applyWidgets");
		});

	</script>

%		unless ($noheader) { 

			<& "/funclib/tablesorter.mas", table => $round->id &>

				<table id="<% $round->id %>">

				<thead>

					<tr class="yellowrow"> 
						<th class="smallish">
							<% $nsda_districts ? "Qual" : "Count" %>
						</th>

						<th class="smallish">
							Place
						</th>

						<th class="smallish">
							Code
						</th>

%						if ($nsda_districts) { 
							<th 
								title = "Priority for single entry intents"
								class = "smaller"
							>
								Choice
							</th>
%						}

%						if ($novice) { 
							<th class="smaller centeralign">
								Nov
							</th>
%						} 

%						foreach my $break (keys %breakouts) { 
							<th class="smallish centeralign">
								<% $breakouts{$break}{"name"} %>
							</th>
%						}

%						unless ($codes eq "names" 
%								|| $codes eq "last_names" 
%								|| $codes eq "names_lastfirst") { 

							<th class="smallish">
								Name
							</th>
%						} 

%						unless ($no_school) { 
							<th class="smallish">
								School
							</th>
%						} 

%						if ($nsda_districts) { 
							<th class="smallish">
								Round
							</th>
%						}

%						if ($section_rank) { 

							<th class="smallish">

								<span title="Rank within Section or Chamber">
									ScRk
								</span>

							</th>

							<th class="smallish">

								<span class="Section or Chamber">
									Sec
								</span>

							</th>

%						} elsif ($round_robin) { 

							<th class="smallish">
								<span title="Rank within Pod">
									PdRk
								</span>
							</th>

							<th class="smallish">
								<span class="Pod">
									Pod
								</span>
							</th>
%						}

%						foreach my $key (@tiebreak_keys) { 

							<th class="smallish">
								<span title="<% ${$entries_ref}{"tier_long_description"}{$key} %>">
									<% ${$entries_ref}{"tier_description"}{$key} %>
								</span>
							</th>
%						}

					</tr>

				</thead>

				<tbody>

%			}

<%perl>
					my $count = 1;

					if (${$entries_ref}{"by_place"}) { 

						my $last_tied;

						foreach my $key (sort {$a <=> $b} keys %{${$entries_ref}{"by_place"}}) { 

							my $tie++ if scalar @{${${$entries_ref}{"by_place"}}{$key}} > 1;

							my $place = $start_placement if $start_placement;

							undef $tie 
								if $round->type eq "elim" 
								&& $event->type ne "speech" 
								&& $event->type ne "congress";

							my $did;

							ENTRY:
							foreach my $entry_id (@{${${$entries_ref}{"by_place"}}{$key}}) { 

								next if $exclude && $exclude->{$entry_id};

								$did++;

</%perl>
								<tr
									class="<% $tie && $mark_ties ? "lirdrow " : "" %> 
									<% $tie && $last_tied && $mark_ties ? "libordertop" : "" %>"
								>

%									undef $last_tied;

									<td class="centeralign smallish nowrap nospace">

%										if ($nsda_districts) { 

%											if ($qualifiers && $qualifiers->{$entry_id}{"place"}) { 

												<span class="full nospace greentext strong">
													QUAL
												</span>

%											} elsif ($vacated && $vacated->{$entry_id}{"place"}) { 

												<span 
													title="This entry qualled in their preferred event and vacated this slot to Nationals"
													class="full nospace greytext italic">
													Vacated
												</span>

%											} elsif ($alternates && $alternates->{$entry_id}{"place"}) { 
												<% Lingua::EN::Numbers::Ordinate::ordinate(
													$alternates->{$entry_id}{"place"}) 
												%> Alt
%											}
%										} else { 
											<% $count++ %>
%										}
									</td>

									<td 
										<% $ineligible{$entry_id} ? 
											'title="Ineligible to clear to elims"'
											: "" 
										%>
										class="centeralign smallish nowrap nospace">
										<% $tie ? "T-" : "" %><% $place ? $place : $key %>
										<% $ineligible{$entry_id} ? 
											'<span class="orangetext strong fa fa-exclamation-triangle"></span>'
											: ""
										%>
									</td>

									<td 
										class="smallish nospace padleft hover" 
										title="Scores:<% $entry_ballots{$entry_id} %>"
									>
										<% $entries_ref->{"code"}{$entry_id} %>
									</td>

%									if ($nsda_districts) { 

										<td class="smallish centeralign">
											<% $entry_by_id{$entry_id}->setting("nsda_priority") %>
										</td>

%									}

%									if ($novice) {
										<td class="smallish centeralign">
											<% ${$entries_ref}{"novice"}{$entry_id} ? " Nov " : "" %>
										</td>
%									}

%									foreach my $break (keys %breakouts) { 
										<td class="smallish centeralign">
											<% $breakouts{$break}{$entry_id} ? $breakouts{$break}{"name"} : "" %>
										</td>
%									}

<%perl>

									unless ($codes eq "names" 
										|| $codes eq "last_names" 
										|| $codes eq "names_lastfirst"
									) { 
</%perl>

										<td 
											class="smallish" 
											title="<% ${$entries_ref}{"name"}{$entry_id} %>"
										>
%											if ($nsda_districts) { 

%												foreach my $student ($entry_by_id{$entry_id}->students) { 
													<div 
														title="<% $student->ualt_id %>"
														class="marno hover"
													>
														<% $student->first %> <% $student->last %>
													</div>
%												}

%											} else { 
												<% ${$entries_ref}{"name"}{$entry_id} %>
%											} 

										</td>
%									}

%									unless ($no_school) { 
										<td class="smallish">
											<% $school_name{${$entries_ref}{"school_id"}{$entry_id}} %>
										</td>
%									}

%									if ($nsda_districts) { 
										<td class="smallish centeralign">
<%perl>
											if ($none_above && $none_above->{$entry_id}) { 
												$m->print($none_above->{$entry_id});
											} else { 
												$m->print($round->name);
											}
</%perl>
										</td>
%									}

%									if ($section_rank) { 

										<td class="smallish">
											<% ${$entries_ref}{"section_rank"}{$entry_id} %> 
										</td>

										<td class="smallish">
											<% ${$entries_ref}{"section"}{$entry_id} %> 
										</td>
%									}

%									if ($round_robin) { 

										<td class="smallish">
											<% ${$entries_ref}{"pod_rank"}{$entry_id} %> 
										</td>

										<td class="smallish">
											<% ${$entries_ref}{"pod"}{$entry_id} %> 
										</td>
%									}

<%perl>

									foreach my $key (@tiebreak_keys) { 

										my $value = ${$entries_ref}{"tiebreak"}{$key}{$entry_id};

										if ($key == $cutoff_key) {
											$cutoff{$entry_id}++ if $value >= $threshold;
										}

										$value =~ s/\.(?:|.*[^0]\K)0*\z//;
										$value = sprintf("%.2f", $value) 
											unless ${$entries_ref}{"tier_description"}{$key} eq "Rk" 
											|| ${$entries_ref}{"tier_description"}{$key} eq "Win" 
											|| ${$entries_ref}{"tier_description"}{$key} eq "Prev Win" 
											|| ${$entries_ref}{"tier_description"}{$key} eq "Rnds" 
											|| ${$entries_ref}{"tier_description"}{$key} eq "Loss" 
											|| ${$entries_ref}{"tier_description"}{$key} eq "Dwn" 
											|| ${$entries_ref}{"tier_description"}{$key} eq "CDwn" 
											|| ${$entries_ref}{"tier_description"}{$key} eq "H2H" 
											|| ${$entries_ref}{"tier_description"}{$key} eq "JP"
											|| ${$entries_ref}{"tier_description"}{$key} eq "Bal";

</%perl>

										<td 
											class="smallish nowrap rightalign 
												<% $cutoff{$entry_id} ? "strong redtext" : "" %>"
										>
											<% $value %>
										</td>
%									}

								</tr>

<%perl>

							}

							$start_placement += $did if $start_placement;
							$last_tied++ if $tie;

						} 
					}
</%perl>

%		unless ($nofinish) { 
				</tbody>
			</table>
%		} 

%		if ($novice) { 
			<p class="explain">(N) designates all-novice teams</p>
%		} 

%		return %cutoff if $threshold;


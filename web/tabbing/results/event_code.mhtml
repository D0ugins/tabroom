<%args>
	$person
	$perms
	$target_id      => undef
	$property_value => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	use Tab::NSDA::EventCategory;

	unless ($target_id) {
		$m->print('{ "error": true, "message": "No event ID sent"}');
		$m->abort();
	}

	unless ($property_value) {
		$m->print('{ "error": true, "message": "No category code sent"}');
		$m->abort();
	}

	my $event = Tab::Event->retrieve($target_id);

	unless ($event) {
		$m->print('{ "error": true, "message": "No event found for ID '.$target_id.'"}');
		$m->abort();
	}

	my $nsda_code = Tab::NSDA::EventCategory->retrieve($property_value);

	unless ($nsda_code) {
		$m->print('{ "error": true, "message": "No NSDA code found for '.$target_id.'"}');
		$m->abort();
	}

	unless ($event->type) {

		$event->setting("nsda_points_posted", 1);
		$event->setting("nsda_point_codefail", 0);

		my %response = (
			destroy => $event->id,
			message => "Event does not have a tabulation type, which means the event cannot be posted."
		);

		$m->print(JSON::encode_json(\%response));
		$m->abort();
	}

	if ($nsda_code->code < 200) {

		unless ($event->type eq "debate") {
			$m->print('{ "error": true, "message": "Non-Debate code '.$nsda_code->code.' attempted with a debate event"}');
			$m->abort();
		}

	} elsif ($nsda_code->code < 300) {

		unless ($event->type eq "speech") {
			$m->print('{ "error": true, "message": "Non-Speech code '.$nsda_code->code.' attempted with a speech event"}');
			$m->abort();
		}

	} else {

		unless ($event->type eq "congress") {
			$m->print('{ "error": true, "message": "Non-Congress code attempted with a speech event"}');
			$m->abort();
		}
	}

	my $replace_ref;

	unless ($event->type) {
		my @replace = (
			{id => "button_".$event->id, content => "No Event Type"}
		);
		$replace_ref = \@replace;
	}

	$event->setting("nsda_event_category", $nsda_code->id);
	$event->setting("nsda_point_codefail", 0);

    my %response = (
		replace => $replace_ref,
		message => $event->name." has been marked with code ".$nsda_code->code." ".$nsda_code->name
    );

	$response{"error"} = JSON::false;
    $m->print(JSON::encode_json(\%response));
	$m->abort();

</%init>

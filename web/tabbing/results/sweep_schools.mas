<%args>
	$sweep_set
</%args>
<%init>

	return unless $sweep_set;
	my $tourn = $sweep_set->tourn;

	my %schools;

	my (
		$ent_ref, $points_ref, $school_ref, $event_ref, $code_ref, $entries_ref
	) = sweep_set($sweep_set);

	my $events        = $sweep_set->rule("events");
	my $entries_rule  = $sweep_set->rule("entries");
	my $wildcards     = $sweep_set->rule("wildcards");
	my $event_entries = $sweep_set->rule("event_entries");
	my %used_entry;

	my %events = map {$_->id => $_} $tourn->events;

	foreach my $entry (@{$ent_ref}) {

		my $code      = ${$code_ref}{$entry};
		my $event     = ${$entries_ref}{$entry}{"eventabbr"};
		my $points    = ${$points_ref}{$entry};
		my $event_id  = ${$event_ref}{$entry};
		my $school_id = ${$school_ref}{$entry};

		unless ($schools{$school_id}{"name"}) {
			$schools{$school_id}{"name"} = $entries_ref->{$entry}{"schoolname"};
			$schools{$school_id}{"state"} = $entries_ref->{$entry}{"state"};
			$schools{$school_id}{"regionname"} = $entries_ref->{$entry}{"regionname"};
			$schools{$school_id}{"regioncode"} = $entries_ref->{$entry}{"regioncode"};
		}

		next unless $points;

		next if
			$entries_rule
			&& ( $schools{$school_id}{"counted_entry_count"} >= $entries_rule )
			&& ( $wildcards < 1 || $schools{$school_id}{"wildcard_count"} >= $wildcards );

		next if (
			(
				( $events && $schools{$school_id}{"event_count"} >= $events)
				||
				( $event_entries && $schools{$school_id}{"event_entry_count"}{$event_id} >= $event_entries)
			)
			&&
			($wildcards < 1 || $schools{$school_id}{"wildcard_count"} >= $wildcards )
		);

		if (
			($entries_rule && ($schools{$school_id}{"counted_entry_count"} >= $entries_rule))
			||
			($events && $schools{$school_id}{"event_count"} >= $events )
			||
			($event_entries && $schools{$school_id}{"event_entry_count"}{$event_id} >= $event_entries)
		) {

			 $schools{$school_id}{"wildcard_count"}++;

		} else {

			$schools{$school_id}{"counted_entry_count"}++;
			$schools{$school_id}{"event_count"}++
				unless $schools{$school_id}{event_used}{$event_id};

			$schools{$school_id}{"event_entry_count"}{$event_id}++;
			$schools{$school_id}{event_used}{$event_id}++;
		}

		$schools{$school_id}{all_entry_count}++;

		$schools{$school_id}{"count_string"} .= "\n" if $schools{$school_id}{"count_string"};
		$schools{$school_id}{"count_string"} .= $event." ".$code.": ".$points;

		$schools{$school_id}{entries}{$entry}{event}  = $event;
		$schools{$school_id}{entries}{$entry}{code}   = $code;
		$schools{$school_id}{entries}{$entry}{points} = $points;

		$schools{$school_id}{'points'} += $points;
	}

	return %schools;

	sub sweep_set {

		my @countme;
		my ($set) = @_;
		my $tourn = $set->tourn;

		my ($rules_ref, $entries_ref) = $m->comp(
			"/tabbing/results/sweep_tourn.mas",
			tourn     => $tourn,
			sweep_set => $set
		);

		foreach my $child ($set->children) {

			my ($rc_rules, $rc_entries_ref) = sweep_set($child);

			my %here_done;

			foreach my $entry (@{$rc_ent_ref}) {

				next if $here_done{$entry}++;

				$entries_ref->{$entry}{"points"} += $rc_entries_ref->{$entry}{"points"};

				unless ($entries_ref->{$entry}{"school"}) {

					$entries_ref->{$entry}{"code"} = $rc_entries_ref->{$entry}{"code"};
					$entries_ref->{$entry}{"name"} = $rc_entries_ref->{$entry}{"name"};

					$entries_ref->{$entry}{"school"} = $rc_entries_ref->{$entry}{"school"};
					$entries_ref->{$entry}{"state"} = $rc_entries_ref->{$entry}{"state"};
					$entries_ref->{$entry}{"schoolname"} = $rc_entries_ref->{$entry}{"schoolname"};

					$entries_ref->{$entry}{"regioncode"} = $rc_entries_ref->{$entry}{"regioncode"};
					$entries_ref->{$entry}{"regionname"} = $rc_entries_ref->{$entry}{"regionname"};

					$entries_ref->{$entry}{"districtcode"} = $rc_entries_ref->{$entry}{"districtcode"};
					$entries_ref->{$entry}{"districtname"} = $rc_entries_ref->{$entry}{"districtname"};

					$entries_ref->{$entry}{"event"} = $rc_entries_ref->{$entry}{"event"};
					$entries_ref->{$entry}{"eventname"} = $rc_entries_ref->{$entry}{"eventname"};
					$entries_ref->{$entry}{"eventabbr"} = $rc_entries_ref->{$entry}{"eventabbr"};

				}
			}

			push @entries, @{$rc_ent_ref};
		}


		Tab::debuglog("I have ".scalar @entries." entries from the sweep_tourn");

		my $events        = $set->rule("events");
		my $entries_rule  = $set->rule("entries");
		my $wildcards     = $set->rule("wildcards");
		my $event_entries = $set->rule("event_entries");
		my $one_per 	  = $set->rule("one_per_person");
		my $by_person 	  = $set->rule("by_person");
		my $max_per 	  = $set->rule("max_entry_persons");

		my %schools;

		ENTRY:
		foreach my $entry_id (sort {
			$entries_ref->{$b}{"points"}  <=> $entries_ref->{$a}{"points"}
			} keys %{$entries_ref}
		) {

			my $did;
			next unless $entries_ref->{$entry_id}{"points"};

			my $event_id = $entries_ref->{$entry_id}{"event"};
			my $school_id = $entries_ref->{$entry_id}{"school"};

			STUDENT:
			foreach my $student_id (keys %{$entries_ref->{$entry}{"students"}}) {

				if ($one_per) {
					next STUDENT if $schools{$school_id}{person_count}{student}{$student_id};
					if ($max_per) {
						next ENTRY if $schools{$school_id}{max_count}{$entry_id} >= $max_per;
					}
				} elsif ($max_per) {
					next ENTRY if $schools{$school_id}{max_count}{$entry_id} >= $max_per;

				} elsif ($by_person) {
					next if $did++;
				} else {
					next ENTRY if $schools{$school_id}{"person_count"}{"entry"}{$entry_id};
				}

				next if
					$entries_rule
					&& ( $schools{$school_id}{"counted_entry_count"} >= $entries_rule )
					&& ( $wildcards < 1 || $schools{$school_id}{"wildcard_count"} >= $wildcards );

				next if (
					(
						($events && $schools{$school_id}{"event_count"} >= $events)
						||
						($event_entries && $schools{$school_id}{"event_entry_count"}{$event_id} >= $event_entries)
					)
					&& ($wildcards < 1 || $schools{$school_id}{"wildcard_count"} >= $wildcards )
				);

				if (
					($entries_rule && ($schools{$school_id}{"counted_entry_count"} >= $entries_rule))
					|| ($events && $schools{$school_id}{"event_count"} >= $events )
					|| ($event_entries && $schools{$school_id}{"event_entry_count"}{$event_id} >= $event_entries)
				) {
					 $schools{$school_id}{"wildcard_count"}++;
				} else {

					$schools{$school_id}{"counted_entry_count"}++;
					$schools{$school_id}{"counted_event_count"}++ unless $schools{$school_id}{event_used}{$event_id};

					$schools{$school_id}{"event_entry_count"}{$event_id}++;
					$schools{$school_id}{event_used}{$event_id}++;

				}

				$schools{$school_id}{"person_count"}{"student"}{$student_id}++;
				$schools{$school_id}{"person_count"}{"entry"}{$entry_id}++;
				$schools{$school_id}{"max_count"}{$entry_id}++;
				push @countme, $entry;
			}
		}

		return \@countme, $points_ref, $schools_ref, $event_ref, $code_ref, $entries_ref;
	}

</%init>

<%args>
	$sweep_set
</%args>
<%init>

	return unless $sweep_set;
	my $tourn = $sweep_set->tourn;

	my %points_by_school      = ();
	my %count_by_school       = ();
	my %countstring_by_school = ();
	my %results               = ();

	my %school_events_used    = ();

	my (
		$ent_ref, $points_ref, $school_ref, $event_ref, $code_ref, $entries_ref
	) = sweep_set($sweep_set);

	my %school_entries = ();
	my %school_event_entries = ();
	my %school_events = ();
	my %school_wildcards = ();

	my $events        = $sweep_set->rule("events");
	my $entries_rule  = $sweep_set->rule("entries");
	my $wildcards     = $sweep_set->rule("wildcards");
	my $event_entries = $sweep_set->rule("event_entries");
	my %used_entry;

	my %events = map {$_->id => $_} $tourn->events;

	foreach my $entry (@{$ent_ref}) {

		my $code      = ${$code_ref}{$entry};
		my $event     = ${$entries_ref}{$entry}{"eventabbr"};
		my $points    = ${$points_ref}{$entry};
		my $event_id  = ${$event_ref}{$entry};
		my $school_id = ${$school_ref}{$entry};

		next unless $points;

		next if
			$entries_rule
			&& ( $school_entries{$school_id} >= $entries_rule )
			&& ( $wildcards < 1 || $school_wildcards{$school_id} >= $wildcards );

		next if (
			(
				( $events && $school_events{$school_id} >= $events)
				||
				( $event_entries && $school_event_entries{$school_id}{$event_id} >= $event_entries)
			)
			&&
			($wildcards < 1 || $school_wildcards{$school_id} >= $wildcards )
		);

		if (
			($entries_rule && ($school_entries{$school_id} >= $entries_rule))
			||
			($events && $school_events{$school_id} >= $events )
			||
			($event_entries && $school_event_entries{$school_id}{$event_id} >= $event_entries)
		) {

			 $school_wildcards{$school_id}++;

		} else {

			$school_entries{$school_id}++;
			$school_events{$school_id}++
				unless $school_events_used{$school_id}{$event_id};

			$school_event_entries{$school_id}{$event_id}++;
			$school_events_used{$school_id}{$event_id}++;
		}

		$count_by_school{$school_id}++;
		$countstring_by_school{$school_id} .= "\n" if $countstring_by_school{$school_id};
		$countstring_by_school{$school_id} .= $event." ".$code.": ".$points;

		$results{$school_id}{$entry_id}{event}  = $event;
		$results{$school_id}{$entry_id}{code}   = $code;
		$results{$school_id}{$entry_id}{points} = $points;
		$points_by_school{$school_id} += $points;

	}

	return (
		\%points_by_school,
		\%count_by_school,
		\%countstring_by_school,
		\%results
	);

	sub sweep_set {

		my @countme;
		my ($set) = @_;
		my $tourn = $set->tourn;

		my (
			$points_ref, $ent_ref, $schools_ref, $event_ref, $code_ref, $entries_ref
		) = $m->comp(
			"/tabbing/results/sweep_tourn.mas",
			tourn     => $tourn,
			sweep_set => $set
		);

		my @entries = @{$ent_ref} if $ent_ref;

		foreach my $child ($set->children) {

			my (
				$rc_ent_ref, $rc_points_ref, $rc_school_ref, $rc_event_ref, $rc_code_ref, $rc_entries_ref
			) = sweep_set($child);

			my %here_done;

			foreach my $entry (@{$rc_ent_ref}) {

				next if $here_done{$entry}++;

				${$points_ref}{$entry} += ${$rc_points_ref}{$entry};

				unless (${$schools_ref}{$entry}) {
					${$schools_ref}{$entry} = ${$rc_school_ref}{$entry};
				}

				unless (${$event_ref}{$entry}) {
					${$event_ref}{$entry} = ${$rc_event_ref}{$entry};
				}

				unless (${$code_ref}{$entry}) {
					${$code_ref}{$entry} = ${$rc_code_ref}{$entry};
				}

				if ($entries_ref) {
					%{$entries_ref} = (%{$entries_ref}, %{$rc_entries_ref});
				} else {
					$entries_ref = $rc_entries_ref;
				}

			}

			push @entries, @{$rc_ent_ref};
		}

		@entries = sort { ${$points_ref}{$b} <=> ${$points_ref}{$a}} @entries;

		my $events        = $set->rule("events");
		my $entries_rule  = $set->rule("entries");
		my $wildcards     = $set->rule("wildcards");
		my $event_entries = $set->rule("event_entries");
		my $one_per 	  = $set->rule("one_per_person");
		my $by_person 	  = $set->rule("by_person");
		my $max_per 	  = $set->rule("max_entry_persons");

		my %max_count;
		my %person_count;

		my %school_entries       = ();
		my %school_event_entries = ();
		my %school_events        = ();
		my %school_wildcards     = ();
		my %count_by_school      = ();
		my %school_events_used   = ();

		my $counter = 1;

		ENTRY:
		foreach my $entry (@entries) {

			my $did;

			STUDENT:
			foreach my $student (keys %{$entries_ref->{$entry}{"students"}}) {

				my $school_id = ${$schools_ref}{$entry};

				if ($one_per) {
					next STUDENT if $person_count{$student};
					if ($max_per) {
						next ENTRY if $max_count{$entry} >= $max_per;
					}
				} elsif ($max_per) {
					next ENTRY if $max_count{$entry} >= $max_per;

				} elsif ($by_person) {
					next if $did++;

				} else {
					next ENTRY if $person_count{$entry}++;
				}


				my $event_id = ${$event_ref}{$entry};
				next unless ${$points_ref}{$entry};

				next if
					$entries_rule
					&& ( $school_entries{$school_id} >= $entries_rule )
					&& ( $wildcards < 1 || $school_wildcards{$school_id} >= $wildcards );

				next if (
					(
						($events && $school_events{$school_id} >= $events)
						||
						($event_entries && $school_event_entries{$school_id}{$event_id} >= $event_entries)
					)
					&& ($wildcards < 1 || $school_wildcards{$school_id} >= $wildcards )
				);

				if (
					($entries_rule && ($school_entries{$school_id} >= $entries_rule))
					|| ($events && $school_events{$school_id} >= $events )
					|| ($event_entries && $school_event_entries{$school_id}{$event_id} >= $event_entries)
				) {
					 $school_wildcards{$school_id}++;
				} else {
					$school_entries{$school_id}++;
					$school_events{$school_id}++ unless $school_events_used{$school_id}{$event_id};
					$school_event_entries{$school_id}{$event_id}++;
					$school_events_used{$school_id}{$event_id}++;
				}

				$count_by_school{$school_id}++;
				$person_count{$student}++;
				$max_count{$entry}++;
				push @countme, $entry;

			}
		}

		return \@countme, $points_ref, $schools_ref, $event_ref, $code_ref, $entries_ref;
	}

</%init>

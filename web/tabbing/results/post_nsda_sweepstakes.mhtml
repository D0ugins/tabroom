<%args>
	$tourn
	$tourn_settings
	$person
	$person_settings
</%args>
<%init>

	use Tab::NSDA::MemberSchool;

	my @all_schools = $tourn->schools;
	my @events = $tourn->events;

	my %schools = ();
	my %events = ();

	foreach my $event (@events) { 
		$events{$event->id}{"type"} = $event->type;
	}

	my $year = $tourn->start->year;
	$year++ if $tourn->start->month > 7; 

	my $last_year = $year - 1; 

	foreach my $school (@all_schools) { 

		my $member = 
			Tab::NSDA::MemberSchool->retrieve($school->chapter->nsda);

		next unless $member;

		$schools{"member"}{$member->school_id} = $school;

		if ($member) {

			$schools{$school->id}{"past_cumulative_points"} 
				= $member->school_trophy_points;

			$schools{$school->id}{"nsda_trophy_points"} 
				= $school->setting("nsda_trophy_points");

			$schools{$school->id}{"object"} = $school;

			foreach my $entry ($school->entries) { 
				$schools{$school->id}{$events{$entry->event->id}{"type"}}++;
			}

		}

		my $cumulative_set = Tab::SweepSet->search(
			tourn => $tourn->id,
			name  => "Cumulative Award"
		)->first;

		if ($cumulative_set) { 

			my ($points_ref, $count_ref, $countstring_ref) = 
				$m->comp(
					"/tabbing/results/sweep_schools.mas", 
					sweep_set => $cumulative_set
				);

			foreach my $school_id (keys %schools) { 

				$schools{$school_id}{"cumulative"} 
					= ${$points_ref}{$school_id};

				$schools{$school_id}{"cumulative_count"} 
					= ${$count_ref}{$school_id};

				$schools{$school_id}{"cumulative_string"} 
					= ${$countstring_ref}{$school_id};

			}
		}
	}

	Tab::NSDA::MemberSchool->set_sql( by_district => "
		select school.*
			from NEW_SCHOOLS school, NEW_SCHOOLS_TO_DISTRICTS sd            
			where sd.district_id = ? 
			and sd.enddate = '0000-00-00 00:00:00'
			and sd.school_id = school.school_id
			and school.school_status = 1
			order by school.school_trophy_points
	");

	my @members = Tab::NSDA::MemberSchool->search_by_district(
		$tourn_settings->{"nsda_district"}
	);

	Tab::NSDA::MemberSchool->set_sql( erase_trophy_points => "
		delete from nfl.DISTRICT_TROPHY_POINTS
		where year = ? 
		and school_id = ? 
	");

	Tab::NSDA::MemberSchool->set_sql( erase_trophy_winner => "
		delete from nfl.DISTRICT_TROPHY_WINNERS
		where year = ? 
		and district_id = ? 
	");

	Tab::NSDA::MemberSchool->set_sql( insert_trophy_points => "
		insert into nfl.DISTRICT_TROPHY_POINTS values ( ?, ?, ?, ?, ?)
	");

	Tab::NSDA::MemberSchool->set_sql( insert_trophy_winner => "
		insert into nfl.DISTRICT_TROPHY_WINNERS values ( ?, ?, ?, ?)
	");

	Tab::NSDA::MemberSchool->set_sql( update_trophy_points => "
		update points.NEW_SCHOOLS set school_trophy_points = ? where school_id = ? 
	");

	Tab::NSDA::MemberSchool->set_sql( get_trophy => "
		select school_trophy from points.NEW_SCHOOLS where school_id = ? 
	");

	Tab::NSDA::MemberSchool->set_sql( update_trophy => "
		update points.NEW_SCHOOLS set school_trophy = ? where school_id = ? 
	");

	my $winner;
	my $winner_total;
	my $marked_winner;

	Tab::NSDA::MemberSchool->set_sql( get_past_trophy_points => "
		select prior
		from nfl.DISTRICT_TROPHY_POINTS
		where year = ? 
		and school_id = ? 
	");

	Tab::NSDA::MemberSchool->set_sql( get_past_trophy_points_also => "
		select curr
		from nfl.DISTRICT_TROPHY_POINTS
		where year = ? 
		and school_id = ? 
	");

    Tab::NSDA::MemberSchool->set_sql( winner_school => "
        select school_id
        from nfl.DISTRICT_TROPHY_WINNERS
        where year = ? 
		and district_id = ?
    ");

    Tab::NSDA::MemberSchool->set_sql( winner_points => "
        select points
        from nfl.DISTRICT_TROPHY_WINNERS
        where year = ? 
		and district_id = ?
    ");

	my $winner_school  = Tab::NSDA::MemberSchool->sql_winner_school->select_val(
		$last_year,
		$tourn_settings->{"nsda_district"}
	);

	my $winner_points  = Tab::NSDA::MemberSchool->sql_winner_points->select_val(
		$last_year,
		$tourn_settings->{"nsda_district"}
	);

	foreach my $member (@members) { 

		my $school = $schools{"member"}{$member->school_id};

		my $school_id = $school->id if $school;

		my $past_points =
			Tab::NSDA::MemberSchool->sql_get_past_trophy_points->select_val( 
				$last_year, $member->school_id
			);

		my $past_points_also = 
			Tab::NSDA::MemberSchool->sql_get_past_trophy_points_also->select_val( 
				$last_year, $member->school_id
			);

		$past_points += $past_points_also;

		if ($winner_school = $member->school_id) { 
			$past_points -= $winner_points;
		}

		my $current_points = $schools{$school_id}{"cumulative"};
		$current_points    += $schools{$school_id}{"nsda_trophy_points"};

		$current_points = 0 unless $current_points;
		$past_points = 0 unless $past_points;

		my $total = $current_points + $past_points;

		Tab::NSDA::MemberSchool->sql_erase_trophy_points->execute(
			$year, 
			$member->school_id
		);
	
		Tab::NSDA::MemberSchool->sql_insert_trophy_points->execute(
			$year,
			$tourn_settings->{"nsda_district"},
			$member->school_id,
			$past_points,
			$current_points
		);

		Tab::NSDA::MemberSchool->sql_update_trophy_points(
			$total,
			$member->school_id
		);


		if ($total > $winner_total) { 
			$winner_total = $total;
			$winner = $member;
		}

		my $marked_winner = $school if $school && $school->setting("nsda_trophy_winner");

	}

	if ($winner) { 

		Tab::NSDA::MemberSchool->sql_erase_trophy_winner->execute(
			$year,
			$tourn_settings->{"nsda_district"}
		);

		Tab::NSDA::MemberSchool->sql_insert_trophy_winner->execute(
			$year,
			$tourn_settings->{"nsda_district"},
			$winner->school_id,
			$winner_total
		);

		Tab::NSDA::MemberSchool->sql_update_trophy_points->execute(
			0,
			$winner->school_id
		);

		my $school = $schools{"member"}{$winner->school_id};

		unless ($school->setting("nsda_trophy_winner")) { 

			my $trophy_string = Tab::NSDA::MemberSchool->sql_get_trophy->select_val( $winner->school_id );
			$trophy_string .= "L";

			Tab::NSDA::MemberSchool->sql_update_trophy->execute(
				$trophy_string,
				$winner->school_id
			);

			$school->setting("nsda_trophy_winner", 1);

		}

		if ($winner && $marked_winner && ($marked_winner != $winner) ) { 

			my $trophy_string = Tab::NSDA::MemberSchool->sql_get_trophy->select_val( $winner->school_id );

			$trophy_string =~ s/L$//;
			$trophy_string = "" unless $trophy_string;

			Tab::NSDA::MemberSchool->sql_update_trophy->execute($trophy_string, $winner->school_id);
		}

	}

	my $msg = "$year sweepstakes points have been posted to the NSDA";
	$m->redirect("nsda_sweepstakes.mhtml?msg=$msg");

</%init>

<%args>
	$round
	$flight
</%args>
<%init>

	if ($ARGS{"unstarted"}) { 

		Tab::Judge->set_sql( unstarted => "
			select count(distinct judge.id)
			from judge, ballot, panel
			where panel.round = ?
			and panel.flight = ? 
			and panel.id = ballot.panel
			and ballot.bye != 1
			and ballot.forfeit != 1
			and panel.bye != 1
			and ballot.judge = judge.id
			and panel.started is null
			and ballot.judge_started is null
		");

		return Tab::Judge->sql_unstarted->select_val($round->id, $flight);

	} elsif ($ARGS{"unentered"}) { 

		my $started = " and panel.started is not null and ballot.judge_started is not null "
			if $ARGS{"started"};

		Tab::Judge->set_sql( unentered => "
			select count(distinct judge.id)
			from judge, ballot, panel
			where panel.round = ?
			and panel.flight = ? 
			and panel.id = ballot.panel
			and ballot.judge = judge.id
			and ballot.bye != 1
			and ballot.forfeit != 1
			and panel.bye != 1
			$started
			and not exists ( 
				select score.id
				from score
				where score.ballot = ballot.id
				and score.tag in ('rank', 'points', 'ballot')
			)
		");

		return Tab::Judge->sql_unentered->select_val($round->id, $flight);

	}  elsif ($ARGS{"unconfirmed"}) { 

		my $started = " and panel.started is not null and ballot.judge_started is not null "
			if $ARGS{"started"};

		Tab::Judge->set_sql( unconfirmed => "
			select count(distinct judge.id)
			from judge, ballot, panel
			where panel.round = ?
			and panel.flight = ? 
			and panel.id = ballot.panel
			and ballot.judge = judge.id
			and ballot.bye != 1
			and ballot.forfeit != 1
			and panel.bye != 1
			and ballot.audit != 1
			$started
			and exists ( 
				select score.id
				from score
				where score.ballot = ballot.id
				and score.tag in ('rank', 'points', 'ballot')
			)
		");

		return Tab::Judge->sql_unconfirmed->select_val($round->id, $flight);
	} 

</%init>

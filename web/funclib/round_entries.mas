<%args>
	$round
	$active      => undef
	$no_byes     => undef
	$by_code     => undef
	$unentered   => undef
	$unstarted   => undef
	$unconfirmed => undef
	$cards       => undef
	$sort_by     => undef
</%args>
<%init>

	if ($unstarted) { 

		Tab::Entry->set_sql(unstarted_by_round => "
			select distinct entry.*
				from panel,ballot,judge,entry
				where panel.round = ? 
				and panel.id = ballot.panel
				and ballot.judge = judge.id
				and ballot.audit != 1
				and ballot.entry = entry.id
				and entry.active = 1
				and panel.started is null
				and panel.bye != 1
				group by entry.id
				order by entry.code, entry.name
		");

		return Tab::Entry->search_unstarted_by_round($round->id);

	} elsif ($unconfirmed) { 

		Tab::Entry->set_sql(unconfirmed_by_round => "
			select distinct entry.*
				from panel,ballot,judge,entry
				where panel.round = ? 
				and panel.id = ballot.panel
				and ballot.judge = judge.id
				and ballot.audit != 1
				and ballot.entry = entry.id
				and entry.active = 1
				and panel.bye != 1
				and exists (
					select score.id
					from score
					where score.ballot = ballot.id
					and (score.tag = \"rank\" or score.tag = \"points\" or score.tag != \"ballot\") 
				)
				group by entry.id
				order by entry.code, entry.name
		");

		return Tab::Entry->search_unconfirmed_by_round($round->id);

	} elsif ($unentered) { 

		Tab::Entry->set_sql(unvoted_by_round => "
			select distinct entry.*
				from panel,ballot,judge,entry
				where panel.round = ? 
				and panel.id = ballot.panel
				and ballot.judge = judge.id
				and ballot.audit != 1
				and ballot.entry = entry.id
				and entry.active = 1
				and panel.bye != 1
				group by entry.id
				order by entry.code, entry.name
		");

		return Tab::Entry->search_unvoted_by_round($round->id);

	} else { 

		my $order = "order by ballot.audit, ballot.speakerorder, ballot.side, entry.code";
		$order = "order by entry.code, entry.name" if $by_code;
		$order = "order by chapter.state, school.name, entry.code" if $cards;

		if ($sort_by eq "codes") { 
			$order = "order by entry.code, entry.name"; 
		} elsif ($sort_by eq "lastname") { 
			$order = "order by student.last, entry.code";
		}

		Tab::Entry->columns(TEMP => "schoolcode");
		Tab::Entry->columns(TEMP => "schoolname");

		Tab::Entry->columns(TEMP => "regioncode");
		Tab::Entry->columns(TEMP => "regionname");

		Tab::Entry->columns(TEMP => "districtid");
		Tab::Entry->columns(TEMP => "districtcode");
		Tab::Entry->columns(TEMP => "districtname");
		Tab::Entry->columns(TEMP => "lastname");
		Tab::Entry->columns(TEMP => "state");
		Tab::Entry->columns(TEMP => "chapterid");

		if ($no_byes) { 

			Tab::Entry->set_sql(by_round => "
				select distinct entry.*, 
					panel.id as panelid, 
					ballot.speakerorder as speaks, sum(ballot.audit) as ballot, 
					ballot.seed as bracketseed, ballot.pullup as pullup, ballot.side as side

				from panel,ballot,entry
					where panel.round = ? 
					and panel.id = ballot.panel
					and panel.bye != 1
					and ballot.entry = entry.id
					group by entry.id
					". $order ."
			");

			return Tab::Entry->search_by_round($round);

		} else { 

			Tab::Entry->set_sql(by_round => "
				select distinct entry.*, panel.id as panelid, ballot.speakerorder as speaks, 
					sum(ballot.audit) as ballot, ballot.seed as bracketseed, ballot.pullup as pullup, 
					ballot.side as side, 
					entry.school as schname, 
					school.region as regname,
					school.name as schoolname,
					region.name as regionname,
					region.code as regioncode,
					district.name as districtname,
					district.code as districtcode,
					district.id as districtid,
					chapter.state as state,
					student.last as lastname

					from (panel,ballot,entry)
					left join school on entry.school = school.id
					left join chapter on school.chapter = chapter.id
					left join entry_student on entry.id = entry_student.entry
					left join student on student.id = entry_student.student
					left join region on school.region = region.id
					left join district on school.district = district.id
					where panel.round = ? 
					and panel.id = ballot.panel
					and ballot.entry = entry.id
					group by entry.id
					". $order ."
			");

			return Tab::Entry->search_by_round($round);

		}
	}


</%init>

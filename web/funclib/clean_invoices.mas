<%args>
</%args>
<%init>

	Tab::School->set_sql(invoiced => "
		select distinct school.*
		from school, invoice, chapter
		where  school.chapter = chapter.id
		and chapter.nsda > 0
		and school.id = invoice.school
		and invoice.blusynergy > 0
	");

    use JSON;
    use MIME::Base64;
    use REST::Client;
	use Data::Dumper;

    my $auth_header = encode_base64($Tab::nsda_invoice_user.":".$Tab::nsda_invoice_key);

	my $true = bless( do{\(my $o = 1)}, 'JSON::PP::Boolean' ); 

	my $client = REST::Client->new(
		host => $Tab::nsda_invoice_endpoint 
	);

	foreach my $school (Tab::School->search_invoiced) { 

		$client->GET(
			"/v1/schools/".$school->chapter->nsda."/invoices?status=all",
			{
				'Authorization' => "Basic $auth_header",
				'Content-Type'  => 'application/json',
				'Accept'        => 'application/json'
			}
		);

		my $response_json = $client->responseContent();

        my %answered_invoices = eval {
			return %{JSON::decode_json($response_json)};
		};

		my %exists; 

		foreach my $blu_invoice (@{$answered_invoices{"invoices"}}) { 
			$exists{$blu_invoice->{"invoiceId"}}++;
		}

		foreach my $invoice ($school->invoices) { 
			unless ($exists{$invoice->blusynergy}) { 
				Tab::debuglog("Impostor detected!  ".$invoice->id." blu ".$invoice->blusynergy." should not belong to me!");
				$invoice->delete();
			}
		}

		sleep(.5);

	}

</%init>

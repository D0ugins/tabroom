<%args>
	$panel
	$person => undef
</%args>
<%init>

	use Crypt::JWT qw(encode_jwt);


	unless ($person) {
		return "You cannot join an online room without being logged into Tabroom.com.";
	}

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select
			panel.id, panel.letter, panel.flight,
			round.label, round.name,
			event.abbr,
			online_mode.value,
			online_public.value,
			online_support.value,
			online_instructions.value_text,
			online_judge_display.value,
			online_entry_display.value,
			online_prepend_role.value,
			judge.id, judge.code, judge.first, judge.last,
			permission.tag,
			person.first, person.last, person.email

		from (ballot, panel, round, event, person)

			left join event_setting online_mode
				on online_mode.event = event.id
				and online_mode.tag = 'online_mode'

			left join event_setting online_judge_display
				on online_judge_display.event = event.id
				and online_judge_display.tag = 'online_judge_display'

			left join event_setting online_entry_display
				on online_entry_display.event = event.id
				and online_entry_display.tag = 'online_entry_display'

			left join event_setting online_prepend_role
				on online_prepend_role.event = event.id
				and online_prepend_role.tag = 'online_prepend_role'

			left join event_setting online_public
				on online_public.event = event.id
				and online_public.tag = 'online_public'

			left join event_setting online_support
				on online_support.event = event.id
				and online_support.tag = 'online_support'

			left join event_setting online_instructions
				on online_instructions.event = event.id
				and online_instructions.tag = 'online_instructions'

			left join judge on ballot.judge = judge.id
				and judge.person = person.id

			left join permission on permission.person = person.id
				and permission.tourn = event.tourn

		where panel.id = ?
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.event = event.id
			and person.id   = ?
	");

	$sth->execute($panel, $person);

	my %json = (
		source    => "tabroom",
		person_id => int($person)
	);

	# Check if the person is a student/entry in the round

	my $ep_sth = $dbh->prepare("
		select student.person, entry.code, student.first, student.last
		from ballot, entry, entry_student es, student
		where ballot.panel = ?
			and ballot.entry = es.entry
			and es.student = student.id
			and student.person = ?
	");

	$ep_sth->execute($panel, $person);

	my ($person_id, $entry_code, $student_first, $student_last) = $ep_sth->fetch();

	if ($person_id && $person_id == $person) {
		$json{"role"}        = "competitor";
		$json{"entry_code"}  = $entry_code;
		$json{"entry_first"} = $student_first;
		$json{"entry_name"}  = $student_first." ".$student_last;
	}

	while (
		my (
			$panel_id, $panel_letter, $panel_flight, $round_label, $round_name,
			$event_abbr, $online_mode, $online_public, $online_support,
			$online_instructions,
			$online_judge_display,
			$online_entry_display,
			$online_prepend_role,
			$judge_id, $judge_code, $judge_first, $judge_last,
			$permission_tag,
			$person_first, $person_last, $person_email
		) = $sth->fetchrow_array()
	) {

		unless ($json{"roomName"}) {
			$json{"roomName"}         = $event_abbr." ".$panel_letter;
			$json{"roomInstructions"} = $online_instructions;
			$json{"supportEmail"}     = $online_support;

			if ($online_mode eq "nsda_jitsi") {
				$json{"publicServer"} = JSON::true;
			} elsif ($online_mode eq "nsda_private") {
				$json{"publicServer"} = JSON::false;
			} else {
				return "This tournament is not configured to use the integrated online service";
			}

			$json{"uuid"} = substr(Digest::SHA::sha256_hex($panel_id),0,32);
		}

		if ($json{"role"} eq "competitor") {

			$json{"displayName"} = "Entry - " if ($online_prepend_role);

			if ($online_entry_display eq "name") {
				$json{"displayName"} .= $json{"entry_name"};
			} elsif ($online_entry_display eq "code_first") {
				$json{"displayName"} .= $json{"entry_code"}." ".$json{"entry_first"};
			} elsif ($online_entry_display eq "code_name") {
				$json{"displayName"} .= $json{"entry_code"}." ".$json{"entry_name"};
			} else {
				$json{"displayName"} .= $json{"entry_code"};
			}

		} elsif ($judge_id) {

			$json{"role"} = "judge";
			$json{"displayName"} = "Judge - " if ($online_prepend_role);

			if ($online_judge_display eq "code") {
				$json{"displayName"} .= $judge_code;
			} elsif ($online_judge_display eq "code_first") {
				$json{"displayName"} .= $judge_code." ".$person_first;
			} elsif ($online_judge_display eq "code_name") {
				$json{"displayName"} .= $judge_code." ".$person_first." ".$person_last;
			} else {
				$json{"displayName"} .= $person_first." ".$person_last;
			}

		} elsif ($permission_tag) {

			$json{"role"} = "tab";
			$json{"displayName"} = "Tab - " if ($online_prepend_role);
			$json{"displayName"} .= $person_first." ".$person_last;

		} else {

			$json{"role"} = "observer";
			$json{"displayName"} = "Obsv - " if ($online_prepend_role);
		}
	}

	$sth->finish();

	my $json_data = JSON::encode_json(\%json);

	my $jwt = encode_jwt(
		payload => $json_data,
		alg     => 'HS256',
		key     => $Tab::jitsi_key
	);

	$dbh->disconnect();

	if ($ARGS{'return'}) {
		return $jwt;
	}

</%init>

	<form
		id     = "meet"
		action = "<% $Tab::jitsi_uri %>"
		method = "post"
		target = "_blank"
	>

		<input
			name  = "json"
			type  = "hidden"
			value = <% $jwt %>
		/>

		<button
			type="submit"
			class="fa fa-video-camera <% $ARGS{"class"} ? $ARGS{"class"} : "fa-lg" %> buttonwhite bluetext marno full"
		>
		</button>

	</form>

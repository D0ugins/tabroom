<%args>
	$entry    => undef
	$entry_id => undef
	$event
</%args>
<%init>

	$entry = Tab::Entry->retrieve($entry_id) unless $entry;

    my $dbh = Tab::DBI->db_Main(); 
	
	my $sth = $dbh->prepare("
		select distinct round.name, ballot.side as side, ballot.bye as bye, panel.bye as pbye
		from round, ballot, panel
		where ballot.entry = ? 
		and ballot.panel = panel.id
		and panel.round = round.id
		group by round.name
		order by round.name
	");

	$sth->execute( $entry->id );

	unless ($ARGS{"rounds"}) { 
		my @rounds = $event->rounds;
		$ARGS{"rounds"} = \@rounds;
	} 

	my $count = scalar @{$ARGS{"rounds"}};
	my $percent = POSIX::floor(80 / $count);
	my %round_strings = ();

	while (my ($name, $side, $bye, $pbye) = $sth->fetchrow_array() ) {

		$side = "A" if $side == 1;
		$side = "N" if $side == 2;
		$side = "B" if $bye;
		$side = "B" if $pbye;
		$round_strings{$name} = '<span title="round '.$name.'" style="width: '.$percent.'%;" class="code">'.$side."</span> ";
	}

	my $roundstring;


	foreach my $round (@{$ARGS{"rounds"}}) { 

		if ($round_strings{$round->name}) { 
			$roundstring .= $round_strings{$round->name};
		} else { 
			$roundstring .= '<span title="'.$round->name.'" style="width: '.$percent.'%;" class="code">&ndash;</span> ';
		}

	}

	if ($ARGS{"print"} ) { 
		$m->print($roundstring);
	} 

    return $roundstring;

</%init>


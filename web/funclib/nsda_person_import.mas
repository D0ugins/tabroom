<%args> 
	$nsda_person
</%args>
<%init>

	use Tab::NSDA::Login;
	use Tab::NSDA::Person;
	use Email::Valid;

	my $now = DateTime->now();

	my $email = lc($nsda_person->uemail);

	return unless Email::Valid->address(
        -address => $email, 
        -mxcheck => 0 
    );

	my $existing_person = Tab::Person->search(
		email => $email
	)->first;

	return $existing_person if $existing_person;

	my $existing_login = Tab::Login->search(
		username => $email
	)->first;

	return $existing_login->person if $existing_login;

	$existing_person = Tab::Person->search(
		ualt_id => $nsda_person->ualt_id
	)->first;

	my $nsda_login = Tab::NSDA::Login->search( 
		person_id => $nsda_person->user_id 
	)->first;

	if ($nsda_login) { 

		$existing_person = Tab::Person->create({
			first   => $nsda_person->ufname,
			middle  => $nsda_person->umname,
			last    => $nsda_person->ulname,
			email   => $email,
			phone   => $nsda_person->cell,
			ualt_id => $nsda_person->ualt_id
		}) unless $existing_person;

		$m->comp("/funclib/claim_followers.mas", 
			person => $existing_person
		);

		$existing_login = Tab::Login->create({ 
			username      => $email,
			person        => $existing_person->id,
			accesses      => 1,
			source        => "points",
			password      => $nsda_login->password,
			ualt_id       => $nsda_person->ualt_id,
			nsda_login_id => $nsda_login->login_id
		});

	}

	return $existing_person;

</%init>

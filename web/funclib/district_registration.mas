<%args>
	$tourn
	$tourn_settings
	$district_id => undef
	$mode        => undef
</%args>
<%init>

	my $limit;

	if ($district_id && $district_id == int($district_id)) {
		$limit = " and school.district = ".int($district_id);
	}

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select
			student.id, student.first, student.middle, student.last,
			entry.id, entry.code, entry.name, event.abbr, entry.active,
			chapter.name, region.name, region.code,
			district.id, district.code, district.name, district.location,
			chair.email, chair.first, chair.last,
			supp.value, conn.value
		from (student, entry_student es, entry, school, event, district, chapter)

		left join region on region.id = school.region
		left join permission on permission.district = district.id
			and permission.tag = 'chair'
		left join person chair on chair.id = permission.person

		left join event_setting supp on event.id = supp.event and supp.tag = 'supp'
		left join event_setting conn on event.id = conn.event and conn.tag = 'conn'

		where school.tourn = ?
			and school.district = district.id
			and school.id = entry.school
			and entry.event = event.id
			and entry.id = es.entry
			and es.student = student.id
			and student.chapter = chapter.id
		$limit
	");

	$sth->execute($tourn->id);

	my %districts = ();

	while (
		my (
			$student_id, $student_first, $student_middle, $student_last,
			$entry_id, $entry_code, $entry_name, $event_abbr, $entry_active,
			$school_name, $region_name, $region_code,
			$district_id, $district_code, $district_name, $district_location,
			$chair_email, $chair_first, $chair_last,
			$supp, $conn
		) = $sth->fetchrow_array()
	) {

		next unless ($entry_active || $supp || $conn);

		unless ($districts{$district_id}{"name"}) {
			$districts{$district_id}{"name"} = $district_name;
			$districts{$district_id}{"code"} = $district_code;
			$district_location = substr($district_location, 0, 2);

			$districts{$district_id}{"chair_name"}  = $chair_first." ".$chair_last;
			$districts{$district_id}{"chair_email"} = $chair_email;
		}

		unless ($districts{$district_id}{"state_code"}) {
			$districts{$district_id}{"state"} = $district_location;
			$districts{$district_id}{"state_code"}  = $region_code;
		}

		unless ($districts{$district_id}{"students"}{$student_id}) {
			$districts{$district_id}{"students"}{$student_id}{"name"}   = "$student_last, $student_first $student_middle";
			$districts{$district_id}{"students"}{$student_id}{"school"} = $school_name;
			$school_name =~ s/^The //g;
			$districts{$district_id}{"students"}{$student_id}{"school_sort"} = $school_name;
		}

		unless ($supp || $conn) {
			unless ($districts{$district_id}{"entries"}{$entry_id}) {
				$districts{$district_id}{"entries"}{$entry_id}{event}  = $event_abbr;
				$districts{$district_id}{"entries"}{$entry_id}{code}   = $entry_code;
				$districts{$district_id}{"entries"}{$entry_id}{name}   = $entry_name;
				$districts{$district_id}{"entries"}{$entry_id}{school} = $school_name;
			}
		}

		$districts{$district_id}{"students"}{$student_id}{"entries"}{$entry_id}{'event'}  = $event_abbr;
		$districts{$district_id}{"students"}{$student_id}{"entries"}{$entry_id}{'code'}   = $entry_code;
	}

	$sth->finish();

	$sth = $dbh->prepare("
		select judge.id, judge.code, judge.first, judge.middle, judge.last, judge.obligation,
			school.name, school.state,
			region.name, region.code, category.name,
			district.id, district.code, district.name, district.location,
			chair.email, chair.first, chair.last,
			os.id, os.name
		from (judge, school, category, district)

			left join judge_setting oss on oss.judge = judge.id and oss.tag = 'original_school'
			left join school os on os.id = oss.value

		left join region on region.id = school.region
		left join permission on permission.district = district.id
			and permission.tag = 'chair'
		left join person chair on chair.id = permission.person

		where school.tourn = ?
		and school.district = district.id
		and school.id = judge.school
		and judge.category = category.id
		$limit
	");

	$sth->execute($tourn->id);

	while (
		my (
			$judge_id, $judge_code, $judge_first, $judge_middle, $judge_last, $judge_obligation,
			$school_name, $school_state,
			$region_name, $region_code, $category_abbr,
			$district_id, $district_code, $district_name, $district_location,
			$chair_email, $chair_first, $chair_last,
			$os_id, $os_name
		) = $sth->fetchrow_array()
	) {

		unless ($districts{$district_id}{"name"}) {
			$districts{$district_id}{"name"}        = $district_name;
			$districts{$district_id}{"code"}        = $district_code;
			$districts{$district_id}{"chair_name"}  = $chair_first." ".$chair_last;
			$districts{$district_id}{"chair_email"} = $chair_email;
		}

		unless ($districts{$district_id}{"state_code"}) {
			$districts{$district_id}{"state"} = $region_name;
			$districts{$district_id}{"state_code"} = $region_code;
		}

		$districts{$district_id}{"judges"}{$judge_id}{"name"}   = "$judge_last, $judge_first $judge_middle";
		$districts{$district_id}{"judges"}{$judge_id}{"code"}   = $judge_code;

		if ($os_id && $os_name) {
			$districts{$district_id}{"judges"}{$judge_id}{"school"} = $os_name;
		} else {
			$districts{$district_id}{"judges"}{$judge_id}{"school"} = $school_name;
		}
		$districts{$district_id}{"judges"}{$judge_id}{"rounds"} = $judge_obligation;

		$school_name =~ s/^The //g;
		$districts{$district_id}{"judges"}{$judge_id}{"school_sort"} = $school_name;
		$districts{$district_id}{"judges"}{$judge_id}{"category"}   = $category_abbr;
	}

	return %districts;

</%init>

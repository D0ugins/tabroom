<%args>	
	$category
	$school => undef
	$region => undef
</%args>
<%init>

	use POSIX;
	my $drop_limit = "and entry.dropped != 1" 
		if $category->setting("drops_no_burden");

	my $waitlist_limit = " and entry.waitlist != 1 " 
		unless $category->tourn->setting("judges_waitlist");

	if ($region) { 

		Tab::Entry->set_sql(entry_categories => "select distinct entry.id 
			from entry,class,event,category,chapter
			where entry.event = event.id 
			and event.no_judge_burden = 0
			and event.category = category.id 
			and entry.school = chapter.school  
			".$drop_limit."
			".$waitlist_limit."
			
			and chapter.region = ? 
			and not exists (
				select id from event_setting
				where event_setting.event = event.id
				and event_setting.tag = \"no_judge_burden\"
				and event_setting.value = 1 )
			and category.id = ? ");

		my @entries = Tab::Entry->search_entry_categories( $region->id, $category->id );

		my $judge_burden = ceil( (scalar @entries) / $category->setting("judge_per")) 
			if $category->setting("judge_per") != 0;

		$judge_burden = ceil( (scalar @entries) * $category->setting("rounds_per")) 
			if $category->setting("rounds_per") != 0;

		$judge_burden = $category->setting("dio_min") 
			if $category->setting("dio_min");

		$judge_burden = $judge_burden - $category->setting("free") 
			if @entries;

		$judge_burden = $category->setting("min_burden") 
			if $category->setting("min_burden") 
			&& $category->setting("min_burden") > $judge_burden 
			&& @entries;

		$judge_burden = $category->setting("max_burden") 
			if $category->setting("max_burden") 
			&& $category->setting("max_burden") < $judge_burden 
			&& @entries;

		return $judge_burden;

	} else { 

		Tab::Entry->set_sql(by_category_school=> "select distinct entry.* 
			from entry,event
			where entry.school = ?
			".$drop_limit."
			".$waitlist_limit."
			
			and entry.event = event.id
			and event.category = ?
			and not exists (
				select id from event_setting
				where event_setting.event = event.id
				and event_setting.tag = \"no_judge_burden\"
				and event_setting.value = 1 )
			order by entry.code
		");

		my @entries = Tab::Entry->search_by_category_school($school->id, $category->id);
	
		my $judge_burden = ceil( (scalar @entries) / $category->setting("judge_per")) 
			if $category->setting("judge_per") != 0;

		$judge_burden = ceil( (scalar @entries) * $category->setting("rounds_per")) 
			if $category->setting("rounds_per") != 0;

		# bruschke addition for college users; no place to enter this
		# category_setting yet

		my %entries_in_event;
		my %event_by_id = map {$_->id => $_} $category->events;

		my $bump_after = $category->setting("commitment_bump_after");
		foreach my $entry (@entries) {
			$entries_in_event{$entry->event}++;
		}

		foreach my $event_id (keys %entries_in_event) { 

			#add a rd of commitment if too many entries in event
			if ( $bump_after && $entries_in_event{$event_id} > $bump_after) {
				$judge_burden += ( ($entries_in_event{$event_id}-$bump_after) * $category->setting("commitment_bump_unit") );
			}

			#adjust for event
			if ($event_by_id{$event_id}->setting("commitment_adj") != 0 ) {
				$judge_burden += ( $event_by_id{$event_id}->setting("commitment_adj") * $entries_in_event{$event_id} );
			}
			
		}
				
		$judge_burden = $judge_burden - $category->setting("free") if @entries;

		$judge_burden = $category->setting("min_burden") 
			if $category->setting("min_burden") 
			&& $category->setting("min_burden") > $judge_burden 
			&& @entries;
	
		$judge_burden = $category->setting("max_burden") 
			if $category->setting("max_burden") 
			&& $category->setting("max_burden") < $judge_burden 
			&& @entries;
			
		return $judge_burden;

	}

</%init>

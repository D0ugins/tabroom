<%args>
	$category
	$category_settings => undef
	$event_settings    => undef
	$tourn_settings    => undef
	$school            => undef
	$region            => undef
	$confirmed         => undef
	$waitlist          => undef
	$bulk              => undef
	$judges            => undef
	$hires            => undef
</%args>
<%perl>

	use POSIX;

	unless ($category_settings) { 
		$category_settings = { $category->all_settings() };
	}

	my $no_free = $category_settings->{"free_strikes_dont_count"};

	if ($category_settings->{"rounds_per"}) { 

		# Function to tell whether a school has met its judging obligation in a
		# given judge category.  Returns the number of rounds owed

		my @judges;
		my @requests;

		if ($bulk) { 

			@judges = @{$judges} if $judges;
			@requests = @{$hires} if $hires;

		} else { 
	
			@judges = $m->comp("judges_by_category.mas",
				category          => $category,
				category_settings => $category_settings,
				school            => $school,
				region            => $region,
			);

			if ($school) { 
				@requests = Tab::JudgeHire->search( 
					school   => $school->id,
					category => $category->id
				);

			} elsif ($region) { 

				@requests = Tab::JudgeHire->search( 
					region   => $region->id,
					category => $category->id
				);

			}
		}

		my $rounds;

		foreach my $judge (@judges) { 
			$rounds += $judge->obligation 
				unless ($no_free && $judge->setting('free_strike')); 
		}

		my $rounds_to_cover = $m->comp(
			"judges_needed_by_category.mas",
			category_settings => $category_settings,
			event_settings    => $event_settings,
			tourn_settings    => $tourn_settings,
			category          => $category,
			school            => $school,
			region            => $region,
			confirmed         => $confirmed,
			waitlist          => $waitlist,
			bulk              => $bulk,
			judges            => \@judges,
		);

		$rounds_to_cover -= $rounds;

		foreach my $request (@requests) { 
			$rounds_to_cover -= $request->rounds_accepted;
		}

	
		my $overage; 

		if ($rounds_to_cover < 0) {
			$overage = abs($rounds_to_cover);
			$rounds_to_cover = 0;
		}
	
		return $rounds_to_cover, $overage;

	} else { 

		my @judges;
		my @requests;
		my $slots_to_cover;

		if ($bulk) { 

			@judges = @{$judges} if $judges;
			@requests = @{$hires} if $hires;

		} elsif ($school) { 

			@judges = $m->comp(
				"judges_by_category.mas",
				category          => $category,
				category_settings => $category_settings,
				school            => $school
			);

			@requests = Tab::JudgeHire->search( 
				school   => $school->id,
				category => $category->id 
			);

			$slots_to_cover = $m->comp(
				"slots_needed_by_category.mas",
				category_settings => $category_settings,
				event_settings    => $event_settings,
				tourn_settings    => $tourn_settings,
				category          => $category,
				school            => $school,
				region            => $region,
				confirmed         => $confirmed,
				waitlist          => $waitlist,
				bulk              => $bulk,
				judges            => \@judges,
			);

		} elsif ($region) { 

			@judges = $m->comp(
				"judges_by_category.mas",
				category_settings => $category_settings,
				category          => $category,
				region            => $region
			);

			@requests = Tab::JudgeHire->search( 
				region   => $region->id,
				category => $category->id 
			);

			$slots_to_cover = $m->comp(
				"slots_needed_by_category.mas",
				category_settings => $category_settings,
				event_settings    => $event_settings,
				tourn_settings    => $tourn_settings,
				category          => $category,
				school            => $school,
				region            => $region,
				confirmed         => $confirmed,
				waitlist          => $waitlist,
				bulk              => $bulk,
				judges            => \@judges,
			);

		}

		my $count;
			
		if ($no_free) { 

			foreach my $judge (@judges) { 
				$count++ unless $judge->setting('free_strike'); 
			}

		} else {

			$count = scalar @judges;

		}

		$slots_to_cover -= $count * $category_settings->{"judge_per"};

		foreach my $request (@requests) { 
			$slots_to_cover -= $request->entries_accepted;
		}

		my $overage; 

		if ($slots_to_cover < 0) {
			$overage = $slots_to_cover * -1;
			$slots_to_cover = 0;
		}

		$overage = 0 if $overage < $category_settings->{"judge_per"} 
			&& $category_settings->{"hired_fee"};

		return $slots_to_cover, $overage;

	}

	return 0;

</%perl>

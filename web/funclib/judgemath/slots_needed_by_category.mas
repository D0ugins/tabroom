<%args>	
	$category
	$category_settings
	$school => undef
	$region => undef
</%args>
<%init>

	use POSIX;

	my $slots;
	my @entries;

	my $drop_limit = " and entry.dropped != 1 " if $category_settings->{"drops_no_burden"};
	my $waitlist_limit = " and entry.waitlist != 1 " unless $category->tourn->setting("judges_waitlist");

	Tab::Entry->columns(TEMP => "eventid");

	if ($school) { 

		Tab::Entry->set_sql(by_category_school=> "
			select distinct entry.*, event.id as eventid
			   from entry,event
			   where entry.school = ?
			   
			   and entry.event = event.id
			   ".$waitlist_limit."
			   ".$drop_limit."
			   and entry.unconfirmed = 0
			   and event.category = ?
				and not exists (
					select id from event_setting
					where event_setting.event = event.id
					and event_setting.tag = 'no_judge_burden'
					and event_setting.value = 1 )
				order by entry.code
		");

		@entries = Tab::Entry->search_by_category_school($school->id, $category->id);

	} elsif ($region) { 

		Tab::Entry->set_sql(by_category_region=> "
			select distinct entry.*, event.id as eventid
			   from entry,event,school
			   where entry.school = school.id
			   and school.region = ?
			   and entry.event = event.id
			   ".$waitlist_limit."
			   ".$drop_limit."
			   and entry.unconfirmed = 0
			   and event.category = ?
				and not exists (
					select id from event_setting
					where event_setting.event = event.id
					and event_setting.tag = 'no_judge_burden'
					and event_setting.value = 1 )
				order by entry.code
		");

		@entries = Tab::Entry->search_by_category_region($region->id, $category->id);

	}

	$slots = scalar @entries;
	$slots -= $category_settings->{"free"} * $category_settings->{"judge_per"} if @entries;

	my %entries_in_event;
		
	foreach my $entry (@entries) { 
		$entries_in_event{$entry->eventid}++;
	}

	my %event_by_id = map {$_->id => $_} $category->events;

	# "Large school" tax for large entries:

	if ($category_settings->{"commitment_bump_after"}) { 
		
		my $bump_after = $category_settings->{"commitment_bump_after"};

		foreach my $event_id (keys %entries_in_event) { 

			#add a rd of commitment if too many entries in event
			if ( $bump_after && $entries_in_event{$event_id} > $bump_after) {
				$slots += ( 
					($entries_in_event{$event_id} - $bump_after) 
					* $category_settings->{"commitment_bump_unit"} 
					* $category_settings->{"judge_per"}
				);
			}

		}
	}

	# Event specific event adjustments

	foreach my $event_id (keys %entries_in_event) { 

		if ($category_settings->{"rounds_per"}) { 

			if ($event_by_id{$event_id} && $event_by_id{$event_id}->setting("adjust_judge_rounds_owed")) {
				$slots += ( 
					$event_by_id{$event_id}->setting("adjust_judge_rounds_owed") 
					* $entries_in_event{$event_id} 
					* $category_settings->{"judge_per"}
				);
			}

		} else { 

			if ($event_by_id{$event_id} && $event_by_id{$event_id}->setting("adjust_judges_owed")) {

				$slots += ( 
					$event_by_id{$event_id}->setting("adjust_judges_owed") 
					* $entries_in_event{$event_id} 
					* $category_settings->{"judge_per"}
				);

			}

		}

	}
			

	if ($category_settings->{"min_burden"} && @entries && $category_settings->{"judge_per"}) { 

		$slots = 
				$category_settings->{"min_burden"} 
				* $category_settings->{"judge_per"} 
			if (
				$category_settings->{"min_burden"} 
				* $category_settings->{"judge_per"}
			) > $slots;
	}

	if ($category_settings->{"max_burden"} && @entries) { 
		$slots = 
				$category_settings->{"max_burden"} 
				* $category_settings->{"judge_per"} 
			if (
				$category_settings->{"max_burden"} 
				* $category_settings->{"judge_per"}
			) < $slots;
	}


	$slots = 0 if $slots < 0;

	return $slots;


</%init>

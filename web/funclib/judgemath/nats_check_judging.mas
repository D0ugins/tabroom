<%args>
	$school
</%args>
<%init>

	my %reasons;

	foreach my $category (
		$m->comp("/funclib/school_categories.mas", school => $school) 
	) { 

		my %owed;

		if ($category->setting("nats_category")) { 

			my %burden = $m->comp(
				"nats_burden.mas", 
				category => $category,
				school   => $school
			);  

		    my %provided = $m->comp(
				"/funclib/judgemath/nats_judging.mas",
				category => $category,
				school   => $school
			);

			if ($provided{'minimum_unmet'}) {
				$reasons{$category->id} .= "<p>".$provided{"minimum_unmet"}." rounds short of minimum required</p>";
				$reasons{"nope"}++;
			}

			$reasons{"obligation"}{$category->id} = $burden{'total'};
			$owed{$category->id} = $burden{"total"};
			$owed{$category->id} -= $provided{"total"};
			$reasons{"provided"}{$category->id} += $provided{"total"};

			my $judge_hire = Tab::JudgeHire->search(
				category => $category->id,
				school   => $school->id
			)->first;

			if ($judge_hire) { 
				$owed{$category->id} -= $judge_hire->rounds_accepted();
				$reasons{"provided"}{$category->id} += $judge_hire->rounds_accepted();
			}


			if ($owed{$category->id} < 0) { 
				$owed{$category->id} = 0 ;
			} elsif ($owed{$category->id} > 0) { 
				$reasons{$category->id} .= "<p>".$owed{$category->id}." rounds still owed </p>";
				$reasons{"nope"}++;
			}

			my @incomplete_judges = $m->comp("/funclib/nats_incomplete_judges.mas", school => $school);

			foreach my $judge (@incomplete_judges) { 
				$reasons{$category->id} .= "<p>".$judge->first." ".$judge->last." incomplete: ".$judge->reason."</p>";
				$reasons{"nope"}++;
			}

		} else { 

			my ($uncovered, $overage, $response) = $m->comp(
				"/funclib/judgemath/uncovered_burden_by_category.mas", 
				category          => $category,
				school            => $school
			);
			
			$reasons{"provided"}{$category->id} = $response->{"provided"};
			$reasons{"obligation"}{$category->id} = $response->{"burden"};

			if ($uncovered) { 
				$reasons{$category->id} .= "<p> $uncovered uncovered entries</p>";
				$reasons{"nope"}++;
			}
		}
	}

	return %reasons;

</%init>


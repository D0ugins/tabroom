<%args>
	$category
	$school
</%args>
<%init>

	my %burden = $m->comp("nats_burden.mas", 
		category => $category,
		school   => $school
	);

	my %judges = ();
	my %jpools = ();
	my %provided = ();

	my $limit;

	foreach my $key (keys %burden) { 
		next unless $key eq int($key);
		$provided{$key} = 0;

		$provided{"hire"}{$key} = 0;
		$provided{"hire_price"}{$key} = 0;
	}

	$provided{"total"} = 0;

    my $dbh = Tab::DBI->db_Main(); 

    my $sth = $dbh->prepare("

		select judge.id, jpool.id, judge.obligation, hire.value, jpool.name

		from (judge, jpool, jpool_judge)

		left join jpool_setting hire
			on hire.jpool = jpool.id
			and hire.tag = 'hire'

		where judge.school = ? 
		and judge.category = ? 

		and judge.id = jpool_judge.judge
		and jpool.id = jpool_judge.jpool

		order by hire.id, judge.id, jpool.id

	");

	$sth->execute($school->id, $category->id);

	my %used; 

	while(
		my ($judge_id, $jpool_id, $judge_obligation, $hire_value, $name)
		= $sth->fetchrow_array()
	) {

		$jpools{$jpool_id}{"ici"}++;
		$jpools{$jpool_id}{"name"} = $name;
		$jpools{$jpool_id}{"hire"} = $hire_value;
		$judges{$judge_id}{"obligation"} = $judge_obligation;
		$judges{$judge_id}{"jpool"}{$jpool_id}++;

		$provided{"count"}++;
		$provided{"total"} += $judge_obligation unless $used{$judge_id}++;

		unless ($hire_value) { 
			$provided{"canhire"}{"total"} += $judge_obligation;
			$provided{"hire"}{$jpool_id} += $judge_obligation;
		}
	}

	Tab::Judge->set_sql( other_judges => "
		select judge.* from judge 
			where judge.school = ? 
			and judge.category != ? 
	");

	Tab::Judge->set_sql( more_other_judges => "
		select judge.* from judge, judge_setting
			where judge.id = judge_setting.judge
			and judge_setting.tag = 'original_school'
			and judge_setting.value = ? 
			and judge.category != ? 
	");

	if ($category->setting('minimum_supplied') && $burden{"total"} > 0 ) { 

		unless (
			Tab::Judge->search_other_judges($school->id, $category->id),
			Tab::Judge->search_more_other_judges($school->id, $category->id)
		) { 
			my $unmet;
			$unmet++ unless $provided{"count"};
			$unmet++ if $provided{"total"} < $category->setting('minimum_supplied');
			$provided{'minimum_unmet'} = ($category->setting('minimum_supplied') - $provided{"total"}) if $unmet;
		}
	}

	#Sorting is essential so the first 

	my %taken;

	foreach my $jpool_id ( sort keys %jpools) { 
		
		next if $jpools{$jpool_id}{"hire"};
		next if $burden{$jpool_id} < 0;

		foreach my $judge_id (keys %judges) { 

			if ($judges{$judge_id}{"jpool"}{$jpool_id}) { 

				my $available = $judges{$judge_id}{"obligation"} - $taken{$judge_id};

				my $provide_me;

				if ($burden{$jpool_id} >= $available) { 
					$provide_me = $available;
				} else { 
					$provide_me = $burden{$jpool_id};
				} 

				$burden{$jpool_id} -= $provide_me;
				$provided{$jpool_id} += $provide_me;
				$taken{$judge_id} += $provide_me;

				$burden{"subtotal"} -= $provide_me;
				$provided{"subtotal"} += $provide_me;
			}
		}
	}

	foreach my $jpool_id (
		sort {$jpools{$a}{"hire"} <=> $jpools{$b}{"hire"} }
		keys %jpools
	) { 

		next if $burden{$jpool_id} < 0;
		next unless $jpools{$jpool_id}{"hire"};

		foreach my $judge_id (keys %judges) { 

			if ($judges{$judge_id}{"jpool"}{$jpool_id}) { 

				my $available = $judges{$judge_id}{"obligation"} - $taken{$judge_id};

				my $provide_me = $available;

				$burden{$jpool_id} -= $provide_me;
				$provided{$jpool_id} += $provide_me;

				$burden{"subtotal"} -= $provide_me;
				$provided{"subtotal"} += $provide_me;
			}
		}
	}

	foreach my $jpool_id (
		sort {$jpools{$a}{"hire"} <=> $jpools{$b}{"hire"} }
		keys %burden
	) { 
		
		next unless $jpool_id eq int($jpool_id);
				
		$provided{"hire"}{"total"} = 0
			unless $provided{"hire"}{"total"};
		
		if ($burden{$jpool_id} > 0) { 

			unless ($burden{"hire"}{$jpool_id}) { 
				$provided{"hire"}{$jpool_id} = "X";
			} else { 

				$provided{"hire"}{$jpool_id} = $burden{$jpool_id};
				$provided{"hire"}{"total"} += $burden{$jpool_id};

				$provided{"hire_cost"}{$jpool_id} 
					= $burden{$jpool_id} * $burden{"hire_price"}{$jpool_id}
					if $burden{"hire_price"}{$jpool_id};

				$provided{"hire_cost"}{"total"} 
					+= $provided{"hire_cost"}{$jpool_id} ;
			}
		}
	}

	return %provided;

</%init>

<%args>
	$entry
	$style => undef
	$full  => undef
</%args>
<%init>

	my $code;
	my $event = $entry->event;
	my $tourn = $event->tourn;

	if ($tourn->setting("nsda_nats")) { 

		my $eventcode = $entry->event->setting('nsda_event_code');
		my @entries = $event->entries(unconfirmed => 0); 

		my $max_code = 100; 

        foreach my $oentry (List::Util::shuffle @entries) { 

			next if $oentry->id == $entry->id;

			my $code = $oentry->code; 
			$code =~ s/^[^$eventcode]*$eventcode//g;

			$code++;
            $code++ if $code == 169;
            $code++ if $code == 269;
            $code++ if $code == 420;
            $code++ if $code == 666;

			$max_code = $code if $code > $max_code; 
        }

		my $new_code = $eventcode.$max_code; 
		return $new_code;

	}

	my $setting = $event->setting("code_style");
	my $enable_hybrids++ if $event->setting("hybrids");

	my $separate_codes = $event->setting("separate_codes");

	my $hybrid = Tab::Strike->search( 
		entry => $entry->id,
		type  => "hybrid"
	)->first if $enable_hybrids;


	my $school_code = $entry->school->code;

	my $hybrid_school_code;
	if ($hybrid) { 
		$hybrid_school_code = $hybrid->school->code;
	}

	if ($separate_codes) { 

		my $congress_code = $entry->school->setting("congress_code");
		$school_code = $congress_code if $congress_code;
	
		if ($hybrid) { 
			my $hybrid_congress_code = $hybrid->school->setting("congress_code");
			$hybrid_school_code = $hybrid->school->code if $hybrid_congress_code;
		}
	}

	if (
		$setting eq "names" 
		|| $setting eq "school_names" 
		|| $setting eq "school_first_names" 
		|| $setting eq "school_last_names" 
		|| $setting eq "last_names" 
		|| $setting eq "names_lastfirst" 
		|| $setting eq "school_name_only" 	) { 

		my @students = $entry->students;

		my $full_name;
		my $first_name;
		my $last_name;

		foreach my $student (@students) { 

			$full_name .= " & " if $full_name;
			$full_name .= $student->first." ".$student->last;

			$first_name .= " & " if $first_name;
			$first_name .= $student->first;

			$last_name .= " & " if $last_name;
			$last_name .= $student->last;
		}

		my $name;

		if ($full) { 

			$name = $entry->school->name 
				if $setting eq "school_names" 
				|| $setting eq "school_first_names" 
				|| $setting eq "school_last_names" 
				|| $setting eq "school_name_only";

		} else {

			$name = $entry->school->short_name 
				if $setting eq "school_names" 
				|| $setting eq "school_first_names" 
				|| $setting eq "school_last_names" 
				|| $setting eq "school_name_only";
		}

		unless ($setting eq "school_name_only") { 

			if ($full && $hybrid) { 

				$name .= "/".$hybrid->school->name." " 
					if $setting eq "school_names";

				$name .= "/".$hybrid->school->name." " 
					if $setting eq "school_first_names";

				$name .= "/".$hybrid->school->name." " 
					if $setting eq "school_last_names";

			} elsif ($hybrid) { 

				$name .= "/".$hybrid->school->short_name." " 
					if $setting eq "school_names";

				$name .= "/".$hybrid->school->short_name." " 
					if $setting eq "school_first_names";

				$name .= "/".$hybrid->school->short_name." " 
					if $setting eq "school_last_names";

			} else { 

				$name .= " ";

			}

			$name .= $full_name
				if $setting eq "names" 
				|| $setting eq "school_names";

			$name .= $first_name
				if $setting eq "school_first_names";

			$name .= $last_name
				if $setting eq "school_last_names"
				|| $setting eq "last_names";

			$name .= $last_name.", ".$first_name 
				if $setting eq "names_lastfirst";


			chomp $name;

		}

		$name =~ s/^\s+//;
		$name =~ s/\s+$//;

		return $name;

	} elsif ( $setting eq "numbers" 
		|| $setting eq "school_number" 
		|| $setting eq "schoolname_code" 
	) { 

		my @entries = $m->comp(
			"/funclib/tourn_entries.mas", 
			tourn => $tourn,
			all   => "yes" 
		);

		my %entry_code;

		foreach my $other (@entries) { 
			next if $other->id == $entry->id;
			my $code = $other->code;
			my $number_only = ( split ' ', $code )[ -1 ];

			$entry_code{$code}++;
			$entry_code{$number_only}++;
		}

		# If I have a code already, and it's not taken just keep it. 
		if ($setting eq "numbers" 
			&& $entry->code > 0 
			&& $entry->code == int($entry->code) 
			&& (not defined $entry_code{$entry->code}) 
		) { 

			return $entry->code;
		}

		my $code_start = $event->setting("code_start");
		$code_start = 100 unless $code_start;

		my $school_name = $entry->school->short_name;
		$school_name = $entry->school->name if $full;

		while ($entry_code{$code_start} ) { 
			$code_start++;
			$code_start++ if $code_start eq 69;
			$code_start++ if $code_start eq 666;
			$code_start++ if $code_start eq 420;
		}

		while ($entry_code{$school_name." ".$code_start} ) { 
			$code_start++;
			$code_start++ if $code_start eq 69;
			$code_start++ if $code_start eq 666;
			$code_start++ if $code_start eq 420;
		}

		while ($entry_code{$school_code." ".$code_start} ) { 
			$code_start++;
			$code_start++ if $code_start eq 69;
			$code_start++ if $code_start eq 666;
			$code_start++ if $code_start eq 420;
		}

		my $code;
		$code = $school_code." " if $setting eq "school_number";
		$code = $school_name." " if $setting eq "schoolname_code";

		if ($setting eq "school_number" && $hybrid) { 
			$code .= "/".$hybrid_school_code;
			$code .= "/".$hybrid->school->name;
		}

		$code .= $code_start;
		$code =~ s/^\s+//;
		$code =~ s/\s+$//;

		return $code;

	} else { 

		my @entries = $event->entries(unconfirmed => 0);
		my %entry_code = map { $_->code => $_->id } @entries;

		if ($setting eq "full_initials" || $setting eq "register") { 

			if ($full) { 
				$school_code = $entry->school->name;
				$school_code .= "/".$hybrid->school->name if $hybrid;
			} else {
				$school_code = $entry->school->short_name;
				$school_code .= "/".$hybrid->school->short_name if $hybrid;
			}
		}

		if ($setting eq "initials") { 
			$school_code = $school_code;
			$school_code .= "/".$hybrid_school_code if $hybrid;
		}

		if ($setting eq "code_name") { 
			$school_code .= "/".$hybrid_school_code if $hybrid;
		}

		return $school_code." TBA" if $entry->tba;

		my @students = $entry->students;

		if ($setting eq "code_name") { 

			if (scalar @students == 1) { 
				$code = $students[0]->first." ".$students[0]->last;
			} else { 
				foreach my $student (@students) { 
					$code .= " & " if $code;
					$code .= $student->last;
				}
			}

		} else { 

			if (scalar @students == 1) { 
				$code .= ucfirst(substr($students[0]->first,0,1)).ucfirst(substr($students[0]->last,0,1));
			} else { 
				foreach my $student (@students) { 
					$code .= ucfirst(substr($student->last,0,1));
				}
			}

			if ($entry_code{$school_code." ".$code} 
				&& $entry_code{$school_code." ".$code} != $entry->id 
			) { 

				undef $code;

				if (scalar @students == 1) { 
					$code .= ucfirst(substr($students[0]->first,0,1)).ucfirst(substr($students[0]->last,0,2));
				} else { 
					foreach my $student (@students) { 
						$code .= ucfirst(substr($student->last,0,2));
					}
				}
			}
		
			if ($entry_code{$school_code." ".$code} 
				&& $entry_code{$school_code." ".$code} != $entry->id 
			) { 

				undef $code;

				if (scalar @students == 1) { 
					$code = ucfirst(substr($students[0]->first,0,2)).ucfirst(substr($students[0]->last,0,2));
				} else { 
					foreach my $student (@students) { 
						$code .= ucfirst(substr($student->last,0,3));
					}
				}
			}

			$code = "XX" if $entry_code{$school_code." ".$code} 
					&& $entry_code{$school_code." ".$code} != $entry->id;

			while ($entry_code{$school_code." ".$code} 
				&& $entry_code{$school_code." ".$code} != $entry->id
			) { 
				$code++;
			}

		}

		my $full_code = $school_code." ".$code;

		$full_code =~ s/^\s+//;
		$full_code =~ s/\s+$//;

		return $full_code;
	
	}

</%init>

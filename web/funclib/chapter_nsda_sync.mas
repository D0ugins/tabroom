<%args>
	$chapter => undef
	$target_id => undef
</%args>
<%init>

	$chapter = Tab::Chapter->retrieve($target_id) if $target_id;

	unless ($chapter) { 
		$m->print('{ "error": true, "message": "No school sent"}');
		$m->abort();
	}
	
	Tab::Chapter->set_sql(update_degrees => "
		update tabroom.chapter_setting cs,
			tabroom.chapter chapter,
			points.NEW_SCHOOLS school
			set cs.value = school.school_total_deg

			where cs.chapter = chapter.id
			and chapter.id = ? 
			and cs.tag = 'nsda_degrees'
			and chapter.nsda = school.school_id
			and chapter.nsda > 0
	");

	Tab::Chapter->sql_update_degrees->execute($chapter->id);

	Tab::Chapter->set_sql(update_paid => "
		update tabroom.chapter_setting cs,
			tabroom.chapter chapter,
			points.NEW_SCHOOLS school
			set cs.value = school.school_paid_status

			where cs.chapter = chapter.id
			and chapter.id = ? 
			and cs.tag = 'nsda_paid'
			and chapter.nsda = school.school_id
			and chapter.nsda > 0
	");

	Tab::Chapter->sql_update_paid->execute($chapter->id);

	Tab::Chapter->set_sql(update_charter => "
		update tabroom.chapter_setting cs,
			tabroom.chapter chapter,
			points.NEW_SCHOOLS school
			set cs.value = school.school_charter_status

			where cs.chapter = chapter.id
			and chapter.id = ? 
			and cs.tag = 'nsda_charter'
			and chapter.nsda = school.school_id
			and chapter.nsda > 0
	");

	Tab::Chapter->sql_update_charter->execute($chapter->id);

	Tab::Student->set_sql(update_email=> "

		update tabroom.student_setting ss,
			tabroom.student student,
			tabroom.chapter chapter, 
			points.NEW_USERS person,
			points.DEMOGRAPHICS demo

			set ss.value = demo.student_email

			where ss.student = student.id
			and student.nsda = person.user_id
			and person.user_id = demo.person_id
			and ss.tag = 'student_email'

			and student.chapter = chapter.id 
			and chapter.id = ? 
			and chapter.nsda > 0
	");

	Tab::Student->sql_update_email->execute($chapter->id);

	Tab::Student->set_sql(update_link => "

		update tabroom.student student,
			tabroom.chapter chapter, 
			tabroom.person person,
			points.NEW_USERS user,
			points.DEMOGRAPHICS demo

			set student.person = person.id

			where (student.person is null or student.person = 0)
			and student.nsda = user.user_id
			and user.user_id = demo.person_id
			and demo.student_email = person.email

			and student.chapter = chapter.id 
			and chapter.id = ? 
			and chapter.nsda > 0
	");

	Tab::Student->sql_update_link->execute($chapter->id);

	Tab::Student->set_sql(update_paid => "

		update tabroom.student_setting ss,
			tabroom.student student,
			tabroom.chapter chapter, 
			points.NEW_USERS person

			set ss.value = 1

			where ss.student = student.id
			and student.nsda = person.user_id
			and person.paid_status = 1
			and ss.tag = 'nsda_paid'

			and student.chapter = chapter.id 
			and chapter.id = ? 
			and chapter.nsda > 0
	");

	Tab::Student->sql_update_paid->execute($chapter->id);

	Tab::Student->set_sql(update_points => "

		update tabroom.student_setting ss,
			tabroom.student student,
			tabroom.chapter chapter, 
			points.NEW_USERS person

			set ss.value = person.total_pts

			where ss.student = student.id
			and student.nsda = person.user_id
			and ss.tag = 'nsda_points'

			and student.chapter = chapter.id 
			and chapter.id = ? 
			and chapter.nsda > 0
	");

	Tab::Student->sql_update_points->execute($chapter->id);


	Tab::Student->set_sql(update_joined=> "

		update tabroom.student_setting ss,
			tabroom.student student,
			tabroom.chapter chapter, 
			points.NEW_USERS_TO_DEGREES degree

			set ss.value_date = degree.dateacquired

			where ss.student = student.id
			and student.ualt_id = degree.ualt_id
			and degree.degree_id = 51
			and ss.tag = 'nsda_joined'

			and student.chapter = chapter.id 
			and chapter.id = ? 
			and chapter.nsda > 0
	");

	Tab::Student->sql_update_joined->execute($chapter->id);

	Tab::Student->set_sql(update_joined_date => "

		update tabroom.student_setting ss,
			tabroom.student student,
			tabroom.chapter chapter, 
			points.NEW_USERS_TO_DEGREES degree

			set ss.value = 'date'

			where ss.student = student.id
			and student.ualt_id = degree.ualt_id
			and degree.degree_id = 51
			and ss.tag = 'nsda_joined'

			and student.chapter = chapter.id 
			and chapter.id = ? 
			and chapter.nsda > 0
	");

	Tab::Student->sql_update_joined_date->execute($chapter->id);

	$m->clear_buffer();
	$r->content_type('application/json');

	my $msg = $chapter->name." has been synced with their NSDA records";

	$m->print('{ "error": false, "message": "'.$msg.'"}');

	$m->abort();

</%init>


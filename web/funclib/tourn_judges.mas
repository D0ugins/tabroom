<%args>
	$tourn
	$code      => undef
	$by_region => undef
	$hires     => undef
</%args>
<%perl>

	my $limit;

	$limit .= " and judge.school = 0 " if $hires;

	if ($code) { 

		if ($ARGS{'nats'}) { 

			$code = "%".$code;

			Tab::Judge->set_sql( by_tourn => "
				select distinct judge.*,
					judge.school as schoolid, school.name as schoolname
				from (judge, category)
					left join school on school.id = judge.school
				where judge.category = category.id
					and category.tourn = ? 
					and judge.code like ? 
					$limit
				order by judge.school, judge.last, judge.code");
			
			return Tab::Judge->search_by_tourn($tourn->id, $code);

		} 

		Tab::Judge->set_sql( by_tourn => "
			select distinct judge.*,
				judge.school as schoolid, school.name as schoolname
			from (judge, category)
				left join school on school.id = judge.school
			where judge.category = category.id
				and category.tourn = ? 
				and judge.code = ? 
				$limit
			order by judge.school, judge.last, judge.code");
		
		return Tab::Judge->search_by_tourn($tourn->id, $code);

	} elsif ($by_region) { 

		Tab::Judge->set_sql( region_by_tourn => "
			select distinct judge.*, region.code as regcode, region.name as regname, 
				school.name as schoolname, region.id as region
			from judge, category, school, region
			where judge.category = category.id
				and category.tourn = ? 
				and judge.school = school.id
				and school.region = region.id
			order by length(region.code), region.code, 
				judge.code, judge.school, judge.last
			");

		return Tab::Judge->search_region_by_tourn($tourn->id);

	} else { 

		Tab::Judge->set_sql( by_tourn => "
			select distinct judge.*, category.id as categoryid, 
				judge.school as schoolid, school.name as schoolname
			from (judge, category)
			left join school on school.id = judge.school
			where judge.category = category.id
				$limit
				and category.tourn = ? 
			order by judge.last, judge.code");
		
		return Tab::Judge->search_by_tourn($tourn->id);

	}

</%perl>


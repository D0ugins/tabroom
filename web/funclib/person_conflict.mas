<%args>
	$tourn
	$person
	$test_mode => undef
</%args>
<%init>

	return unless $person > 0;

	Tab::Entry->set_sql( for_moi => "
		select distinct entry.*
		from event, entry, entry_student, student
		where event.tourn = ? 
		and entry.event = event.id
		and entry_student.entry = entry.id
		and entry_student.student = student.id
		and student.person = ? 
	");

	Tab::Judge->set_sql( for_moi => "
		select distinct judge.* 
		from category, judge
		where category.tourn = ?
		and category.id = judge.category
		and judge.person = ?
	");

	my @entries =  Tab::Entry->search_for_moi( $tourn->id, $person->id );
	my @judges = Tab::Judge->search_for_moi( $tourn->id, $person->id );

	return unless @entries || @judges;

	Tab::School->set_sql( conflicteds => "
		select distinct school.*
		from school, conflict
		where school.tourn = ? 
		and school.chapter = conflict.chapter
		and conflict.person > 0
		and conflict.person = ? 
	");

	foreach my $school (Tab::School->search_conflicteds($tourn->id, $person->id)) { 

		foreach my $judge (@judges) { 

			Tab::Strike->create({ 
				tourn      => $tourn->id,
				judge      => $judge->id,
				type       => "school",
				school     => $school->id,
				registrant => 1
			});

		}

	}

	foreach my $judge (@judges) { 

		Tab::Entry->set_sql( conflicteds => "
			select distinct entry.id
			from event, entry, entry_student, student, conflict
			where event.tourn = ?
			and event.id = entry.event
			and entry.id = entry_student.entry
			and entry_student.student = student.id
			and student.person = conflict.conflicted
			and conflict.conflicted > 0
			and conflict.person = ? 
		");

		Tab::Entry->set_sql( conflictees => "
			select distinct entry.id
			from event, entry, entry_student, student, conflict
			where event.tourn = ?
			and event.id = entry.event
			and entry.id = entry_student.entry
			and entry_student.student = student.id
			and student.person > 0
			and student.person = conflict.person
			and conflict.conflicted = ? 
		");

		my @conflicteds = Tab::Entry->search_conflicteds( $tourn->id, $person->id );
		my @conflictees = Tab::Entry->search_conflictees( $tourn->id, $person->id );

		foreach my $entry (@conflicteds, @conflictees) { 

			Tab::Strike->create({ 
				tourn      => $tourn->id,
				type       => "conflict",
				entry      => $entry->id,
				judge      => $judge->id,
				registrant => 1
			});

		}

	}

	foreach my $entry (@entries) { 

		Tab::Judge->set_sql( conflicteds => "
			select distinct judge.id
			from category, judge, conflict
			where category.tourn = ? 
			and category.id = judge.category
			and judge.person = conflict.conflicted
			and judge.person > 0
			and conflict.conflicted > 0
			and conflict.person = ? 
		");

		Tab::Judge->set_sql( conflictees => "
			select distinct judge.id
			from category, judge, conflict
			where category.tourn = ? 
			and category.id = judge.category
			and judge.person = conflict.person
			and judge.person > 0
			and conflict.conflicted > 0
			and conflict.conflicted = ? 
		");

		foreach my $judge ( 
			Tab::Judge->search_conflicteds( $tourn->id, $person->id), 
			Tab::Judge->search_conflictees( $tourn->id, $person->id)
		) { 

			Tab::Strike->create({
				tourn      => $tourn->id,
				type       => "conflict",
				entry      => $entry->id,
				judge      => $judge->id,
				registrant => 1
			});

		}

	}

	return;

</%init>

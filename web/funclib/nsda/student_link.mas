<%args>
	$student    => undef
	$student_id => undef
	$nsda       => undef
	$person_id  => undef
	$person     => undef
</%args>
<%init>

	unless ($student) {
		$student = Tab::Student->retrieve($student_id);
	}

	return unless $student;

	if ($person_id) {
		$person = Tab::Person->retrieve($person_id);
	}

	unless ($person) {
		$person = $student->person;
	}

	if ($nsda > 0 && $nsda != $student->nsda) {
		$student->nsda($nsda);
		$student->update();

		if ($person && (not defined $person->nsda)) {
			$person->nsda($nsda);
			$person->update();
		}
	}

	unless ($person) {
		$person = Tab::Person->search(nsda => $nsda)->first;
	}


	my $membership;

	if ($person > 0 && $person != $student->person) {
		$student->person($person);
		$student->update;
		$membership = $m->comp("/funclib/nsda/membership.mas", person => $person, silent => $ARGS{"silent"});
	} elsif ($student->nsda) {
		$membership = $m->comp("/funclib/nsda/membership.mas", student => $student, silent => $ARGS{"silent"});
	}

	unless ($person) {
		if ($student->nsda > 0) {
			if ($membership->{'email'}) {
				$person = Tab::Person->search(email => $membership->{"email"})->first;
				if ($person) {
					$student->person($person->id);
					$student->update();
				}
			}
		}
	}

	my $now = DateTime->now();
	if (
		$membership->{"grad_year"} > $now->year
		&& $membership->{"grad_year"} > $student->grad_year
	) {
		$student->grad_year($membership->{"grad_year"});
		$student->update();
	}

	return $student;

</%init>

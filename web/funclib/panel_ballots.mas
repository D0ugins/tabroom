<%args>
	$panel
</%args>
<%init>

	return unless $panel && $panel->id;

	my $order;
	$order = "student.last, " if $ARGS{"sort_by"} eq "lastname";
	$order = "student.last, entry.code, " if $ARGS{"sort_by"} eq "codeandlastname";

	my $limit;

	if ($ARGS{"judge"}) { 
		$limit = "and ballot.judge = ".$ARGS{'judge'};
	}

	Tab::Ballot->columns(TEMP => "seat");
	Tab::Ballot->columns(TEMP => "schoolid");
	Tab::Ballot->columns(TEMP => "schoolname");
	Tab::Ballot->columns(TEMP => "schoolcode");
	Tab::Ballot->columns(TEMP => "regionname");
	Tab::Ballot->columns(TEMP => "regioncode");
	Tab::Ballot->columns(TEMP => "districtname");
	Tab::Ballot->columns(TEMP => "districtcode");
	Tab::Ballot->columns(TEMP => "districtid");
	Tab::Ballot->columns(TEMP => "state");
	Tab::Ballot->columns(TEMP => "speaks");
	Tab::Ballot->columns(TEMP => "lastname");

	Tab::Ballot->set_sql( by_panel => "
		select distinct ballot.*, 
			ballot.speakerorder as speaks, ballot.side as side, ballot.id as ballot,
			ballot.seat as seat,
			student.last as lastname,
			school.id as schoolid,
			school.name as schoolname,
			school.code as schoolcode,
			region.name as regionname, region.code as regioncode,
			district.id as districtid, district.name as districtname, district.code as districtcode,
			chapter.state as state

		from (entry, ballot, panel, round, school)
		left join region on region.id = school.region
		left join district on district.id = school.district
		left join chapter on school.chapter = chapter.id
		left join entry_student on entry_student.entry = entry.id
		left join student on entry_student.student = student.id
		where ballot.entry = entry.id
		and ballot.panel = ?
		and ballot.panel = panel.id
		and panel.round = round.id
		and entry.school = school.id
		$limit
		order by $order ballot.speakerorder, ballot.side, entry.code
	");

	my %seen = (); 

	return 
		grep { ! $seen{$_->id} ++ } 
		Tab::Ballot->search_by_panel( $panel->id );

</%init>


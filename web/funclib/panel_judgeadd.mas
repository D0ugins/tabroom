<%args>
	$panel    => undef
	$panel_id => undef
	$judge    => undef
	$judge_id => undef
	$chair    => 0
	$done     => 0
</%args>
<%init>

	return unless ($judge || $judge_id) && ($panel || $panel_id);

	$judge_id = $judge->id if $judge && (not defined $judge_id);
	$panel_id = $panel->id if $panel && (not defined $panel_id);

	# If I ever figure out what is sending a fucking "4" as a chair flag I'm
	# going to murder it.

	$chair = 1 if $chair > 0;
	$chair = 0 if $chair < 1;

	my @ballots = Tab::Ballot->search(panel => $panel_id);
	my %existing_judges;
	my $sample_judge;

	foreach my $ballot (@ballots) {

		if ($ballot->judge->id == $judge_id) {
			return;
		}

		push @{$existing_judges{$ballot->judge->id}}, $ballot;

		unless ($sample_judge) {
			$sample_judge = $ballot->judge->id;
		}
	}

	return if $existing_judges{$judge_id};

	if ($ARGS{"wudc"}) {
		$done = 1 unless $chair == 1;
	}

	my $i_can_haz_entries;
	my $created;

	Tab::Ballot->set_sql( null_start => "update ballot set judge_started = NULL where id = ? ");

	foreach my $ballot (@{$existing_judges{$sample_judge}}) {

		$done = 0 unless $done;
		$i_can_haz_entries++ if $ballot->entry > 0;

		my $copy = $ballot->copy({
			judge         => $judge_id,
			chair         => $chair,
			collected_by  => "",
			collected     => "",
			tv            => 0,
			hangout_admin => 0,
			pullup        => 0,
			audit         => $done
		});

		Tab::Ballot->sql_null_start->execute($copy->id) if $copy;
		$created++;
	}

	unless ($created) {

		Tab::Ballot->create({
			judge => $judge_id,
			panel => $panel_id,
			chair => $chair
		});
	}

	my $limit;
	if ($i_can_haz_entries) {
		$limit = " or ballot.entry = 0 ";
	}

	Tab::Ballot->set_sql( delete_empties => "
		delete ballot.*
		from ballot
		where ballot.panel = ?
		and (ballot.judge = 0 or ballot.judge is null $limit )
	");

	Tab::Ballot->sql_delete_empties->execute($panel_id);

	return;

</%init>

<%args>
	$event
</%args>
<%init>
	
	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare(" 
		select judge.id, school.id, region.id,
			count(distinct entry.id), 
			count(distinct struckentry.id), 
			count(distinct schoolstruckentry.id),
			count(distinct ballot.panel)
		from (judge, event, round, category)

		left join school on judge.school = school.id
		left join region on school.region = region.id

		left join entry on entry.school = judge.school
			and entry.event = event.id

		left join strike entrystrike 
			on entrystrike.judge = judge.id 
			and entrystrike.entry > 0

		left join entry struckentry
			on struckentry.id = entrystrike.entry
			and struckentry.event = event.id

		left join strike schoolstrike 
			on schoolstrike.judge = judge.id 
			and schoolstrike.school > 0

		left join entry schoolstruckentry
			on schoolstruckentry.school = schoolstrike.school
			and schoolstruckentry.event = event.id

		left join ballot on ballot.judge = judge.id

		where event.id = ? 
			and round.event = event.id
            and event.tourn = category.tourn
            and category.id = judge.category

			and (
				judge.category = event.category
				or judge.alt_category = event.category
				or exists ( select jpool_judge.id
					from jpool_judge, jpool_round
					where jpool_judge.judge = judge.id
						and jpool_judge.jpool = jpool_round.jpool
						and jpool_round.round = round.id
				)
			)

			group by judge.id
	");

	$sth->execute($event);

	my %judges;

	while (
		my (
			$judge_id, $school_id, $region_id, 
			$own_count, $struck_entries, $struck_entries_two, $ballots
		) = $sth->fetchrow_array()
	) {

		$judges{$judge_id}{"own"} = $own_count;
		$judges{$judge_id}{"strikes"} += $struck_entries;
		$judges{$judge_id}{"strikes"} += $struck_entries_two;
		$judges{$judge_id}{"ballots"} += $ballots;
		$judges{$judge_id}{"school"} += $school_id;
		$judges{$judge_id}{"region"} += $region_id;
	}

	return %judges;

</%init>

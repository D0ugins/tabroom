<%args> 
	$round => undef
</%args>
<%init>

	return unless $round;

    my $dbh = Tab::DBI->db_Main();
    
    my $sth = $dbh->prepare("
		select judge.id, panel.id, panel.bracket, ballot.id, rating.percentile, rating_tier.name

			from (judge, panel, entry, ballot)

			left join rating 
				on rating.judge = judge.id
				and rating.entry = entry.id

			left join rating_tier 
				on rating.rating_tier = rating_tier.id

			where panel.round = ? 
			and panel.id = ballot.panel
			and ballot.judge = judge.id
			and ballot.entry = entry.id

			group by entry.id, judge.id
	");

    $sth->execute($round->id);

	my $matter_threshold = $round->event->setting("break_point");
	my $bracket_cutoff = $round->name - $matter_threshold - 1;

	my %judge_data;

	while (
		my ($judge_id, $panel_id, $panel_bracket, $ballot_id, $rating_percentile, $rating_tier_value)
		= $sth->fetchrow_array()
	) { 

		$judge_data{"count"}++ 
			unless $judge_data{"judges"}{$judge_id}++;

		my $rating = $rating_percentile;
		$rating = $rating_tier_value unless $rating;
		
		$judge_data{"best_pref"} = 1;
		$judge_data{"best_mut"} = 1;

		if ($rating) { 

			$judge_data{"pref_count"}++;
			$judge_data{"total_prefs"} += $rating;

			$judge_data{"worst_pref"} = $rating
				if $rating > $judge_data{"worst_pref"};

			$judge_data{"best_pref"} = $rating
				if ($rating < $judge_data{"best_pref"}) 
				|| (not defined $rating);

			if ($judge_data{$judge_id}{$panel_id}{"pref"}) { 

				my $mutuality = abs($judge_data{$judge_id}{$panel_id}{"pref"} - $rating);

				$judge_data{"mut_count"}++;
				$judge_data{"total_muts"} += $mutuality;

				$judge_data{"worst_mut"} = sprintf ("%.2f", $mutuality )
					if $mutuality > $judge_data{"worst_mut"};

				$judge_data{"best_mut"} = sprintf ("%.2f", $mutuality )
					if ($mutuality < $judge_data{"best_mut"}) 
					|| (not defined $mutuality);

			} else { 

				$judge_data{$judge_id}{$panel_id}{"pref"}
					= $rating;
			}

			if ($panel_bracket > $bracket_cutoff) { 

				$judge_data{"matters_pref_count"}++;
				$judge_data{"matters_total_prefs"} += $rating;

				$judge_data{"matters_worst_pref"} = $rating
					if $rating > $judge_data{"matters_worst_pref"};

				$judge_data{"matters_best_pref"} = $rating
					if ($rating < $judge_data{"matters_best_pref"}) 
					|| (not defined $rating);

				if ($judge_data{$judge_id}{$panel_id}{"matters_pref"}) { 

					my $mutuality = abs($judge_data{$judge_id}{$panel_id}{"matters_pref"} - $rating);

					$judge_data{"matters_mut_count"}++;
					$judge_data{"matters_total_muts"} += $mutuality;

					$judge_data{"matters_worst_mut"} = sprintf ("%.2f", $mutuality )
						if $mutuality > $judge_data{"matters_worst_mut"};

					$judge_data{"matters_best_mut"} = sprintf ("%.2f", $mutuality )
						if ($mutuality < $judge_data{"matters_best_mut"}) 
						|| (not defined $mutuality);

				} else { 

					$judge_data{$judge_id}{$panel_id}{"matters_pref"}
						= $rating;
				}

			}

		}

	}

	$judge_data{"average_pref"} = 
		sprintf ("%.2f", ($judge_data{"total_prefs"} / $judge_data{"pref_count"}))
		if $judge_data{"pref_count"};

	$judge_data{"average_mut"} = 
		sprintf ("%.2f", ($judge_data{"total_muts"} / $judge_data{"mut_count"}))
		if $judge_data{"mut_count"};

	$judge_data{"matters_average_pref"} = 
		sprintf ("%.2f", ($judge_data{"matters_total_prefs"} / $judge_data{"matters_pref_count"}))
		if $judge_data{"matters_pref_count"};

	$judge_data{"matters_average_mut"} = 
		sprintf ("%.2f", ($judge_data{"matters_total_muts"} / $judge_data{"matters_mut_count"}))
		if $judge_data{"matters_mut_count"};

	return %judge_data;

</%init>

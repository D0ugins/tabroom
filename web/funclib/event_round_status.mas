<%args>
	$event
</%args>
<%init>

    my $dbh = Tab::DBI->db_Main();

	my $limit;

	if ($ARGS{"tag"}) {
		$limit = "and round.post_results < ".$ARGS{"tag"};
	}

	my $sth = $dbh->prepare("
		select round.id, round.name, round.post_results,
			(select count(distinct panel.id)
				from panel
				where panel.round = round.id
			) as allcount,

			(select count(distinct unstarted.id)
				from panel unstarted, ballot unstarted_ballot
				where unstarted.round = round.id
				and (
					unstarted.bye = 0
					or unstarted.bye = NULL
				)
				and unstarted_ballot.panel = unstarted.id
				and (
					unstarted_ballot.bye = 0
					or unstarted_ballot.bye = NULL
				)
				and (
					unstarted_ballot.forfeit = 0
					or
					unstarted_ballot.forfeit = NULL
				)
				and (
					unstarted_ballot.judge_started = '0000-00-00 00:00:00'
					or unstarted_ballot.judge_started is NULL
				)
			) as unstartedcount,

			(select count(distinct undone.id)
				from panel undone
				where undone.round = round.id
				and (
					undone.bye = 0
					or undone.bye = NULL
				)
				and exists
				( select unaudited.id
					from ballot unaudited
					where unaudited.panel = undone.id
					and (
						unaudited.audit = 0
						or unaudited.audit =  NULL
					)
				)
			) as undonecount,

			(select count(distinct halfdone.id)
				from panel halfdone, ballot half_audited
				where halfdone.round = round.id
				and (
					halfdone.bye = 0
					or halfdone.bye = NULL
				)
				and half_audited.panel = halfdone.id
				and (
					half_audited.audit = 0
					or half_audited.audit = NULL
				)
				and exists (
					select score.id
					from score
					where score.tag in ('rank', 'point', 'winloss')
					and score.ballot = half_audited.id
				)
			) as halfdonecount,

			( select count(distinct done.id)
				from panel done
				where done.round = round.id
				and (
					done.bye = 1
					or not exists
					( select unaudited.id
						from ballot unaudited
						where unaudited.panel = done.id
						and (
							unaudited.audit = 0
							or unaudited.audit = NULL
						)
					)
				)
			) as donecount
			from round
			where round.event = ?
			$limit
	");

    $sth->execute($event->id);

	my %status;

	while (
		my (
			$round_id, $round_name, $round_post_results,
			$allcount, $unstartedcount, $undonecount,
			$halfdonecount, $donecount
		) = $sth->fetchrow_array()
	) {

		$status{$round_id}{"name"}         = $round_name;
		$status{$round_id}{"undone"}       = $undonecount;
		$status{$round_id}{"done"}         = $donecount;
		$status{$round_id}{"all"}          = $allcount;
		$status{$round_id}{"post_results"} = $round_post_results;
		$status{$round_id}{"halfdone"}     = $halfdonecount;
	}

	return %status;

</%init>


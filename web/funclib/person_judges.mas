<%args>
	$person
	$all          => undef
	$future       => undef
	$conflictable => undef
	$current      => undef
	$tourn        => undef
	$ballot       => undef
</%args>
<%init>

	my $now = DateTime->now;
	my $grace = $now->clone;
	$grace->subtract(days => 1);

	my $limit;

	if ($ARGS{"nationals"}) { 

		Tab::Judge->set_sql( nats_by_person => "
			select judge.*, tourn.id as tourn
			from judge, category, tourn, tourn_setting
			where judge.person = ?
			and judge.category = category.id
			and category.tourn = tourn.id
			and tourn.end > ? 
			and tourn_setting.tourn = tourn.id
			and tourn_setting.tag = 'nsda_nats'
			order by tourn.start desc
		");

		return Tab::Judge->search_nats_by_person($person->id, 
			DateTime::Format::MySQL->format_datetime($grace)
		);

	} elsif ($all) { 

		Tab::Judge->set_sql( by_person => "
			select judge.*, tourn.id as tourn
			from judge, category, tourn
			where judge.person = ?
			and judge.category = category.id
			and category.tourn = tourn.id
			order by tourn.start desc
		");

		return Tab::Judge->search_by_person($person->id);

	} elsif ($current) { 

		Tab::Judge->set_sql( now_by_person => "
			select judge.*, tourn.id as tourn
			from judge, category, tourn
			where judge.person = ?
			and judge.category = category.id
			and category.tourn = tourn.id
			and tourn.start < ?
			and tourn.end > ? 
			order by tourn.start desc
		");

		return Tab::Judge->search_now_by_person($person->id, 
			DateTime::Format::MySQL->format_datetime($now), 
			DateTime::Format::MySQL->format_datetime($grace)
		);


	} elsif ($future) { 

		my $conflict = ' and exists (select jgs.id from category_setting jgs 
			where jgs.category = category.id 
			and jgs.tag = "conflicts" 
			and jgs.value > 0
		) ' if $conflictable;

		Tab::Judge->set_sql( later_by_person => "
			select judge.*, tourn.id as tourn
			from judge, category, tourn
			where judge.person = ?
			and judge.category = category.id
			and category.tourn = tourn.id
			and tourn.end > ?
			$conflict
			order by tourn.start desc
		");

		return Tab::Judge->search_later_by_person($person->id, 
			DateTime::Format::MySQL->format_datetime($grace)
		);

	} elsif ($tourn && $ballot) { 

		Tab::Judge->set_sql( by_ballot_person_tourn => "
			select judge.*, tourn.id as tourn
			from judge, category, tourn, ballot, panel, round, event_setting
			where judge.person = ?
			and judge.category = category.id
			and category.tourn = tourn.id
			and tourn.id = ? 
			and ballot.judge = judge.id
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.event = event_setting.event
			and event_setting.tag = \"online_ballots\"
			and event_setting.value = 1
			order by tourn.start desc
		");

		return Tab::Judge->search_by_ballot_person_tourn($person->id, $tourn->id);

	} elsif ($tourn) {

		Tab::Judge->set_sql( by_person_tourn => "
			select judge.*, tourn.id as tourn
			from judge, category, tourn
			where judge.person = ?
			and judge.category = category.id
			and category.tourn = tourn.id
			and tourn.id = ? 
			order by tourn.start desc
		");

		return Tab::Judge->search_by_person_tourn($person->id, $tourn->id);

	} else { 

		Tab::Judge->set_sql( future_by_person => "
			select judge.*, tourn.id as tourn 	
			from judge, category, tourn
			where judge.person = ?
			and judge.category = category.id
			and category.tourn = tourn.id
			and tourn.end > ?
			order by tourn.start
		");

		return Tab::Judge->search_future_by_person($person->id, 
			DateTime::Format::MySQL->format_datetime($grace)
		);

	} 

</%init>

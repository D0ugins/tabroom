<%args>
	$session
</%args>
<%init>

	return if $session->ip =~ m/^127/;
	return if $session->ip =~ m/^10\./;
	return if $session->ip =~ m/^192\.168\./;

	use GeoIP2::Database::Reader;

	my $reader = GeoIP2::Database::Reader->new(
		file    => $Tab::geoip,
		locales => [ 'en' ]
	);

	my $record = eval {
		#STFU pls
		return $reader->city( ip => $session->ip);
	};

	my %result;

	if ($record) {

		%result = (
			city        => $record->city->name(),
			zip         => $record->postal->code,
			tz          => $record->location->time_zone,
			state       => $record->most_specific_subdivision->name,
			country     => $record->registered_country->name(),
			countrycode => $record->registered_country->iso_code(),
			eu          => $record->registered_country->is_in_european_union,
			statecode   => $record->most_specific_subdivision->iso_code,
			metrocode   => $record->location->metro_code,
		);

		my $ip = $session->ip;
		$result{isp} = `/usr/bin/whois $ip | grep Organization | head -1`;
		$result{isp} =~ s/Organization: //g;
		$result{isp} =~ s/\(.*$//g;
		$result{isp} =~ s/, Inc,\.//g;
		$result{isp} =~ s/, Inc\.//g;
		$result{isp} =~ s/, Inc//g;
		$result{isp} =~ s/ Inc//g;
		$result{isp} =~ s/, LLC,\.//g;
		$result{isp} =~ s/, LLC\.//g;
		$result{isp} =~ s/, LLC//g;
		$result{isp} =~ s/ LLC//g;
		$result{isp} =~ s/,.$//g;

		$result{isp_location} .= `/usr/bin/whois $ip | grep Customer | head -1`;
		$result{isp_location} =~ s/Customer: //g;
		$result{isp_location} =~ s/\(.*$//g;
		$result{isp_location} =~ s/, Inc,\.//g;
		$result{isp_location} =~ s/, Inc\.//g;
		$result{isp_location} =~ s/, Inc//g;
		$result{isp_location} =~ s/ Inc//g;
		$result{isp_location} =~ s/, LLC,\.//g;
		$result{isp_location} =~ s/, LLC\.//g;
		$result{isp_location} =~ s/, LLC//g;
		$result{isp_location} =~ s/ LLC//g;
		$result{isp_location} =~ s/,.$//g;
	}

	$session->location(\%result);
	$session->update();

	return \%result;

</%init>


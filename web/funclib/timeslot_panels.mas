<%args>
	$timeslot
	$closeout    => undef
	$event       => undef
	$category       => undef
	$unstarted   => undef
	$started     => undef
	$unconfirmed => undef
	$confirmed   => undef
	$status      => undef
</%args>
<%init>

	if ($closeout && $category) { 

		my $event_limit = "and round.event = ".$event->id if $event;

		my $status_limit = "and ballot.audit != 1 " if $status eq "undone";
		$status_limit = "and ballot.audit = 1 " if $status eq "done";

		Tab::Panel->set_sql( closeouts => "
			select distinct panel.id, entry.code as entryid, room.name as roomname
			from (panel, ballot, round, entry, event)
			left join room on panel.room = room.id
			where panel.id = ballot.panel
			and panel.round = round.id
			and round.timeslot = ? 
			and round.event = event.id
			and event.category = ? 
			and panel.bye = 1
			and ballot.entry = entry.id
			$status_limit
			$event_limit
			group by panel.id
			order by panel.letter
		");

		return Tab::Panel->search_closeouts($timeslot->id, $category->id);

	} elsif ($unstarted) { 

		my $category_limit = "and event.category = ".$category->id." " if $category;

		Tab::Panel->set_sql( unstarted_by_timeslot => "
			select distinct panel.*, event.abbr as eventname, room.name as roomname
			from (panel, round, event)
			left join room on room.id = panel.room
			where panel.round = round.id
			and round.event = event.id
			and round.timeslot = ? 
			and panel.started is null
			". $category_limit ." 
			and panel.bye != 1
			and exists ( 
				select ballot.id from ballot 
				where ballot.panel = panel.id
				and ballot.audit = 0
				and ballot.bye != 1 
				and ballot.forfeit != 1 
			)
			order by event.name, panel.flight
		");

		return Tab::Panel->search_unstarted_by_timeslot($timeslot->id);
		
	} elsif ($started) { 

		my $category_limit = "and event.category = ".$category->id." " if $category;

		Tab::Panel->set_sql( started_by_timeslot => "
			select distinct panel.*, room.name as roomname
			from (panel, round,event)
			left join room on room.id = panel.room
			where panel.round = round.id
			and round.timeslot = ? 
			and round.event = event.id
			and panel.started is not null
			". $category_limit ." 
			and panel.bye != 1
			and exists ( 
				select ballot.id from ballot, entry
				where ballot.panel = panel.id
				and ballot.audit = 0
				and ballot.entry = entry.id
				and entry.dropped != 1
				and ballot.bye != 1 
				and ballot.forfeit != 1 
			)
			order by panel.started desc
		");

		return Tab::Panel->search_started_by_timeslot($timeslot->id);

	} elsif ($unconfirmed) { 

		my $category_limit = "and event.category = ".$category->id." " if $category;

		Tab::Panel->set_sql( unconfirmed_by_timeslot => "
			select distinct panel.*, event.abbr as eventname, room.name as roomname
			from (panel, round, event)
			left join room on room.id = panel.room
			where panel.round = round.id
			and round.event = event.id
			and round.timeslot = ? 
			". $category_limit ." 
			and panel.confirmed is null
			and panel.bye != 1
			and exists ( 
				select ballot.id from ballot, entry
				where ballot.panel = panel.id
				and ballot.entry = entry.id
				and entry.dropped != 1
				and ballot.bye != 1 
				and ballot.forfeit != 1 
				and ballot.audit = 0
			)
			order by event.name, panel.letter
		");

		return Tab::Panel->search_unconfirmed_by_timeslot($timeslot->id);
		
	} elsif ($confirmed) { 

		my $category_limit = "and event.category = ".$category->id." " if $category;

		Tab::Panel->set_sql( confirmed_by_timeslot => "
			select distinct panel.*, room.name as roomname
			from (panel, round)
			left join room on room.id = panel.room
			where panel.round = round.id
			and round.timeslot = ? 
			". $category_limit ." 
			and panel.confirmed is not null
			and exists ( 
				select ballot.id from ballot, entry
				where ballot.panel = panel.id
				and ballot.entry = entry.id
				and entry.dropped != 1
				and ballot.audit = 0
				and ballot.bye != 1 
				and ballot.forfeit != 1 
			)
			order by panel.letter
		");

		return Tab::Panel->search_confirmed_by_timeslot($timeslot->id);

	} elsif ($event) { 

		Tab::Panel->set_sql( by_timeslot_event => "
			select distinct panel.*, room.name as roomname
			from (panel, round)
			left join room on room.id = panel.room
			where panel.round = round.id
			and round.timeslot = ? 
			and round.event = ? 
			order by panel.letter
		");

		return Tab::Panel->search_by_timeslot_event($timeslot->id, $event->id);


	} else { 

		Tab::Panel->set_sql( by_timeslot => "
			select distinct panel.*, room.name as roomname
			from (panel, round)
			left join room on panel.room = room.id
			where panel.round = round.id
			and round.timeslot = ? 
			order by panel.letter
		");

		return Tab::Panel->search_by_timeslot($timeslot->id);

	}

</%init>


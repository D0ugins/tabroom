<%args>	
	$school
	$category
</%args>
<%init>

	my $tourn = $category->tourn;

	my %burden = $m->comp(
		"/funclib/judgemath/nats_burden.mas", 
		category => $category,
		school   => $school
	);

	my %provided = $m->comp(
		"/funclib/judgemath/nats_judging.mas", 
		category => $category,
		school   => $school
	);

	return "nope" if $provided{'minimum_unmet'};

	my @jpools = $m->comp(
		"/funclib/category_jpools.mas",
		category => $category,
		limit	=> "registrant"
	);

	my %jpool_settings = $m->comp(
		"/funclib/jpool_settings.mas",
		category => $category
	);

	@jpools = sort {
		$jpool_settings{$a}{"hirable"} 
		<=> $jpool_settings{$b}{"hirable"}
	} @jpools;

	my @judges = $m->comp(
		"/funclib/nationals_judges.mas",
		category => $category,
		school   => $school
	);

	my $judge_hire = Tab::JudgeHire->search(
		category => $category->id,
		school   => $school->id
	)->first;

	$provided{"owed"}{"total"} -= $judge_hire->rounds_accepted()
		if $judge_hire;

	foreach my $jpool (@jpools) { 
		$provided{"total"} 
			+= ($burden{$jpool->id} - $provided{$jpool->id});
	}
	
	my $owed = $burden{"total"} - $provided{"total"};

	return "nope" if $owed > 0;

</%init>


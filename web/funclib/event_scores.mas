<%args>
	$event
	$public => undef
	$prelim => undef
	$elim   => undef
	$round  => undef
</%args>
<%init>

	my $desc = "DESC" if $event->type eq "speech" || $event->type eq "congress";

	if ($round) { 

		if ($event->type eq "speech") { 

			Tab::Score->set_sql(round_by_event => "
				select score.id, score.tag, score.value, 
					ballot.entry as entryid, 
					panel.bye as bye, round.id as roundid, 
					ballot.judge as judgeid

				from score, ballot, panel, round
					where score.ballot = ballot.id
					and ballot.panel = panel.id
					and ballot.forfeit != 1
					and panel.round = round.id
					and round.event = ? 
					and round.name <= ?

				order by ballot.entry, round.name, ballot.judge, 
						CASE score.tag WHEN ".' "ballot" 
						then 1 when "rank" 
						then 2 when "points" 
						then 3 when "rebuttal_points" 
						then 4 end'."
			");

			return Tab::Score->search_round_by_event($event->id, $round->name);

		} elsif ($round->tiebreak_set) { 

			my $tiebreak_set = $round->tiebreak_set;

			my $other;

			foreach my $tb ($tiebreak_set->tiebreaks) {
				$other++ unless $tb->count eq "last_elim" 
					|| $tb->count eq "previous" 
					|| $tb->count eq "last elim";
			}

			if ($other) { 

				Tab::Score->set_sql(round_by_event => "
					select distinct score.id, score.tag, score.student, score.value, 
						ballot.entry as entryid, 
						panel.bye as bye, 
						round.id as roundid, ballot.judge as judgeid

					from panel,ballot,score,round
						where panel.round = round.id
						and round.event = ? 
						and round.name <= ?
						and panel.id = ballot.panel
						and ballot.forfeit != 1
						and ballot.id = score.ballot

					order by ballot.entry, round.name, ballot.judge, 
						CASE score.tag WHEN ".' "ballot" 
						then 1 when "rank" 
						then 2 when "points" 
						then 3 when "rebuttal_points" 
						then 4 end'."  "
				);

				return Tab::Score->search_round_by_event($event->id, $round->name);

			} else { 

				Tab::Score->set_sql(round_by_event => "
					select distinct score.id, score.tag, score.student, score.value, 
						ballot.entry as entryid, 
						panel.bye as bye, 
						round.id as roundid, 
						ballot.judge as judgeid

					from panel,ballot,score,round
						where panel.round = round.id
						and round.event = ? 
						and round.name = ?
						and panel.id = ballot.panel
						and ballot.forfeit != 1
						and ballot.id = score.ballot

					order by ballot.entry, round.name, ballot.judge, 
						CASE score.tag WHEN ".' "ballot" 
						then 1 when "rank" 
						then 2 when "points" 
						then 3 when "rebuttal_points" 
						then 4 end'."  "
				);

				return Tab::Score->search_round_by_event($event->id, $round->name);
		
			}

		}

	} elsif ($public && $prelim) { 

		Tab::Score->set_sql(by_event => "
			select distinct score.id, score.tag, score.student, score.value, 
				ballot.entry as entryid, ballot.panel as panelid, 
				panel.bye as bye, 
				round.id as roundid

			from panel,ballot,score,round
				where panel.round = round.id
				and round.event = ? 
				and round.post_results > 0
				and round.type != \"elim\"
				and round.type != \"final\"
				and panel.id = ballot.panel
				and ballot.forfeit != 1
				and ballot.id = score.ballot

			order by ballot.entry, round.name, ballot.judge, 
				CASE score.tag WHEN ".' "ballot" 
				then 1 when "rank" 
				then 2 when "points" 
				then 3 when "rebuttal_points" 
				then 4 end'."
		");

		return Tab::Score->search_by_event($event->id);

	} elsif ($public) { 

		Tab::Score->set_sql(by_event => "
			select distinct score.id, score.tag, score.student, score.value, 
				ballot.entry as entryid , 
				round.type as roundtype, round.id as roundid, 
				panel.bye as bye, 
				ballot.judge as judgeid, round.id as roundid

			from panel,ballot,score,round
				where panel.round = round.id
				and round.event = ? 
				and round.post_results > 0
				and panel.id = ballot.panel
				and ballot.forfeit != 1
				and ballot.id = score.ballot

			order by ballot.entry, round.name, ballot.judge, 
				CASE score.tag WHEN ".' "ballot" 
				then 1 when "rank" 
				then 2 when "points" 
				then 3 when "rebuttal_points" 
				then 4 end'."
		");

		return Tab::Score->search_by_event($event->id);

	} elsif ($prelim) { 

		Tab::Score->set_sql(prelim_by_event => "
			select distinct score.id, score.tag, score.student, score.value, 
				ballot.entry as entryid, 
				panel.bye as bye, 
				round.id as roundid, 
				ballot.chair as chair, ballot.judge as judgeid

			from panel,ballot,score,round
				where panel.round = round.id
				and round.event = ? 
				and round.type != \"elim\"
				and round.type != \"final\"
				and panel.id = ballot.panel
				and ballot.forfeit != 1
				and ballot.id = score.ballot

			order by ballot.entry, round.name, ballot.judge, 
				CASE score.tag WHEN ".' "ballot" 
				then 1 when "rank" 
				then 2 when "points" 
				then 3 when "rebuttal_points" 
				then 4 end'."
		");

		return Tab::Score->search_prelim_by_event($event->id);

	} elsif ($elim) { 

		Tab::Score->set_sql(elim_by_event => "
			select distinct score.id, score.tag, score.student, score.value, 
				ballot.entry as entryid, 
				panel.bye as bye, 
				round.id as roundid, 
				ballot.judge as judgeid

			from panel,ballot,score,round
				where panel.round = round.id
				and round.event = ? 
				and (round.type = \"elim\" OR round.type = \"final\")
				and panel.id = ballot.panel
				and ballot.forfeit != 1
				and ballot.id = score.ballot
			order by ballot.entry, round.name, ballot.judge, 
				CASE score.tag WHEN ".' "ballot" 
				then 1 when "rank" 
				then 2 when "points" 
				then 3 when "rebuttal_points" 
				then 4 end'."
		");

		return Tab::Score->search_elim_by_event($event->id);

	} else { 

		Tab::Score->set_sql(by_event => "
			select distinct score.id, score.tag, score.student, score.value, 
				ballot.entry as entryid, score.tag as tag, 
				round.type as roundtype, round.id as roundid, 
				panel.bye as bye, 
				ballot.chair as chair, ballot.judge as judgeid

			from panel,ballot,score,round
				where panel.round = round.id
				and round.event = ? 
				and panel.id = ballot.panel
				and ballot.forfeit != 1
				and ballot.id = score.ballot

			order by ballot.entry, round.name, ballot.judge, 
				CASE score.tag WHEN ".' "ballot" 
				then 1 when "rank" 
				then 2 when "points" 
				then 3 when "rebuttal_points" 
				then 4 end'."
		");

		return Tab::Score->search_by_event($event->id);
	}

</%init>

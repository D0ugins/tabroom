<%args>
	$round => undef
</%args>
<%init>

	return unless $round;

	my $event = $round->event;
	my $session_lock = $round->setting("session_lock");

	Tab::debuglog("Session lock is $session_lock");

	if ($session_lock eq "none") {

		return ($round);

	} elsif ($session_lock) {

		my @locks;

		push @locks, Tab::Round->retrieve($session_lock);

		Tab::Round->set_sql(session_lock => "
			select round.*
				from round, round_setting
			where round.event = ?
				and round.id = round_setting.round
				and round_setting.tag = 'session_lock'
				and round_setting.value = ?
		");

		push @locks, Tab::Round->search_session_lock($event->id, $session_lock);

		my @use;
		my %done;

		foreach my $lock (@locks) {
			next unless $lock;
			next unless $lock->id;
			next if $done{$lock->id}++;
			push @use, $lock;
		}

		if (@use) {
			@use = sort {$a->name cmp $b->name} @use;
		}

		return @use;

	} else {

		Tab::Round->set_sql(not_session_locked => "
			select round.* from round
			where round.event = ?
				and round.type = ?
				and not exists (
					select round_setting.id
						from round_setting
					where round_setting.round = round.id
						and round_setting.tag = 'session_lock'
				)
		");

		my @locks = Tab::Round->search_not_session_locked($event->id, $round->type);
		@locks = sort {$a->name cmp $b->name} @locks;

		return @locks;
	}

</%init>

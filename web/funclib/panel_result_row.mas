<%args>
	$panel
	$entry_id  		=> undef
	$hide_judges	=> undef
	$hide_points	=> undef
    $hide_tourn	    => undef
    $html_only  	=> undef
	$class_name  	=> undef
	$default_hide	=> undef
</%args>
<%init>

	use Data::Dumper;

	#my $aff_string = $event->setting("aff_label");
	#my $neg_string = $event->setting("neg_label");

	#$aff_string = "Aff" unless $aff_string;
	#$neg_string = "Neg" unless $neg_string;

	my $aff;
	my $neg;
	my $oppn;

	Tab::Round->columns(TEMP => qw/tourn_name/);
	Tab::Round->columns(TEMP => qw/tourn_start/);

	Tab::Round->set_sql(tourn_info => "
		select round.name, round.label,
		tourn.name as tourn_name,
		tourn.start as tourn_start
		from round, event, tourn, panel
		where panel.id = ?
		and round.id = panel.round
		and event.id = round.event
		and tourn.id = event.tourn
	");

	my @round_info  =  Tab::Round->search_tourn_info($panel->id);

	Tab::Score->columns(TEMP => qw/ballot_entry/);
	Tab::Score->columns(TEMP => qw/ballot_side/);
	Tab::Score->columns(TEMP => qw/ballot_judge/);
	Tab::Score->columns(TEMP => qw/ballot_judge_name/);
	Tab::Score->columns(TEMP => qw/student_name/);
	Tab::Score->columns(TEMP => qw/entry_name/);

	Tab::Score->set_sql(ballot => "
		select score.*,
		ballot.entry as ballot_entry,
		ballot.side as ballot_side,
		ballot.judge as ballot_judge,
		entry.code as entry_name,
		CONCAT(judge.last, ', ', judge.first) as ballot_judge_name,
		CONCAT(student.last, ', ', student.first) as student_name
		from score
		left join ballot on ballot.id=score.ballot
		left join student on student.id = score.student
		left join judge on judge.id = ballot.judge
		left join entry on entry.id = ballot.entry
		where ballot.panel = ?
	");

	my @score_info  =  Tab::Score->search_ballot($panel->id);

	my $str_pts;
	my $str_decision = "";
	my $str_judges;
	my %str_students;
	my $bal_for; my $bal_vs;
	$default_hide = "style='display:none'" if $default_hide;
    my $str_result_row = "<tr class=$class_name $default_hide>";

	unless ($hide_tourn) {
        $str_result_row .= "<td>".$round_info[0]->tourn_name."</td>";
        $str_result_row .= "<td>".substr($round_info[0]->tourn_start, 0, 10)."</td>";
    }
	if ( $round_info[0]->label ) {
		$str_result_row .= "<td>".$round_info[0]->label."</td>";
	} else {
		$str_result_row .= "<td>".$round_info[0]->name."</td>";
	}

	foreach my $score (sort {$a->ballot_side <=> $b->ballot_side} @score_info) {

		if ( index($str_judges, $score->ballot_judge_name) == -1 ) {
			$str_judges .= $score->ballot_judge_name."<br>" ;
		}

		if ( $score->tag eq "winloss" ) {
			if ( $score->ballot_side == 1 ) { $aff = $score->entry_name; } else { $neg = $score->entry_name; }
			if ( $score->value == 1 && $score->ballot_side == 1 ) { $str_decision .= "Aff<br>"; }
			if ( $score->value == 1 && $score->ballot_side == 2 ) { $str_decision .= "Neg<br>"; }
			if ( $score->value == 1 && $score->ballot_entry == $entry_id ) { $bal_for++; }
			if ( $score->value == 0 && $score->ballot_entry == $entry_id ) { $bal_vs++; }
			if ($score->ballot_entry != $entry_id ) { $oppn = $score->ballot_entry; }
		}

		if ( $score->student_name ) {
			$str_students{$score->student_name} .= " " if $str_students{$score->student_name};
			$str_students{$score->student_name} .= $score->value;
		}

	}

	my $student_td = "";
	foreach my $key ( keys %str_students ) {
		$student_td .= $key ." ".$str_students{$key}."<br>";
	}

	$str_result_row .= "<td>".$aff."</td>";
	$str_result_row .= "<td>".$neg."</td>";
	$str_result_row .= "<td>".$str_judges."</td>";
	$str_result_row .= "<td>".$student_td."</td>";
	$str_result_row .= "<td>".$str_decision."</td>";
	my $outcome="Win";
	if ($bal_vs > $bal_for) { $outcome="Loss"; }
	$str_result_row .= "<td>".$outcome."</td>";
	$str_result_row .= "</tr>";

    #print $str_result_row."<br>";
    return $str_result_row, $oppn, $outcome;

</%init>

<%args>
	$login       => undef
	$person      => undef
	$ad_password => undef
	$delete      => undef
	$reset       => undef
</%args>
<%init>

	use Net::LDAP;
	use Text::Undiacritic qw(undiacritic);

	unless ($person) {
		$person = $login->person;
	}

	my @logins;

	if ($delete && $login) {
		push @logins, $login;

	} elsif ($delete) {
		push @logins, $person->logins();

	} else {
		push @logins, $person->logins();
	}

	if ($Tab::ldap_enable eq "yes") {

		my $ldap = Net::LDAP->new( $Tab::ldap_server,
								port    => $Tab::ldap_port,
								version => 3,
								verify  => 'none',
								cafile  => $Tab::ldap_certs
		) or die "$@";


		my $mesg = $ldap->bind( $Tab::ldap_user, password => $Tab::ldap_pw);

		my $basedn = $Tab::ldap_dn;

		# Clear the old and the empties

		if ($reset) {
			foreach my $login (@logins) {
			}
			}

		foreach my $login (@logins) {

			my $dn = "uid=".$login->username.",ou=users,".$basedn;

			if ($delete) {

				$mesg = $ldap->delete( $dn );
				Tab::log("Deleted user ".$login->username." in the LDAP directory.  Result: ".$mesg->code." ".$mesg->error);
				$ldap->unbind;
				return 1;

			} elsif ($reset) {

				my $search = $ldap->search(
					base   => "ou=users,".$basedn,
					filter => 'uidNumber='.$login->id
				);

				$search->code;

				if ($search->error && $search->error ne "Success") {

					Tab::log("Error in LDAP search for ".$person->id.": ".$search->error);

				} else {

					foreach my $entry ($search->entries) {

						$mesg = $ldap->delete($entry->dn);
						Tab::log("Deleting ".$entry->dn." attached to uid ".$person->id." in the LDAP directory.  Result: ".$mesg->code." ".$mesg->error);
					}
				}

				$mesg = $ldap->delete( $dn );
				Tab::log("Deleted user ".$login->username." in the LDAP directory.  Result: ".$mesg->code." ".$mesg->error);
			}

			my $gn = "admins";

			$mesg = $ldap->search( base => $dn, filter => '(objectClass=*)');

			my $shell = "/bin/false";
			$shell = "/bin/bash" if $person->site_admin;
			$shell = "/bin/tcsh" if $person->id == 1;

			my $pass_crypt;

			if ($login->sha512) {
				$pass_crypt = "{crypt}".$login->sha512;
			} else {
				$pass_crypt = "{crypt}".$login->password;
			}

			#Apparently gecos hates utf8
			my $gecos = undiacritic($person->first." ".$person->last);
			$gecos =~ s/[^\w\s]//g;

			if ($mesg->entries) {

				$mesg = $ldap->modify( $dn,

					changes => [
						replace => [uid               => $login->username],
						replace => [mail              => $person->email],
						replace => [userPrincipalName => $login->username],
						replace => [sn                => $person->last],
						replace => [givenName         => $person->first],
						replace => [cn                => $person->first." ".$person->last],
						replace => [displayName       => $person->first." ".$person->last],
						replace => [uidNumber         => $login->id],
						replace => [gidNumber         => 5000],
						replace => [employeeNumber    => $person->id],
						replace => [gecos             => $gecos],
						replace => [loginShell        => $shell ],
						replace => [homeDirectory     => "/tmp"],
						replace => [userPassword      => $pass_crypt],
						replace => [objectclass       => [ 'inetOrgPerson','posixAccount','shadowAccount' ]]
					]
				);

				Tab::log("Modified user ".$login->username." in the LDAP directory.  Result: ".$mesg->code." ".$mesg->error);

			} else {

				$mesg = $ldap->add( $dn,
					attr => [
						uid               => $login->username,
						mail              => $person->email,
						userPrincipalName => $login->username,
						sn                => $person->last,
						givenName         => $person->first,
						cn                => $person->first." ".$person->last,
						displayName       => $person->first." ".$person->last,
						uidNumber         => $login->id,
						gidNumber         => 5000,
						employeeNumber    => $person->id,
						gecos             => $gecos,
						loginShell        => $shell,
						homeDirectory     => "/tmp",
						userPassword      => $pass_crypt,
						objectclass       => [ 'inetOrgPerson','posixAccount','shadowAccount' ]
					]
				);

				Tab::log("Added user ".$login->id." ".$login->username." from person $person $gecos to the LDAP directory.  Result: ".$mesg->code." ".$mesg->error);
			}

			if ($person->site_admin) {

				my $second_result = $ldap->search(base => "ou=groups,$basedn", filter => "(&(objectClass=posixGroup)(cn=$gn))");

				my $entry = $second_result->shift_entry;

				if ($entry) {

					my $already;

					if ($entry->get('memberuid')) {
						foreach (@{$entry->get('memberuid')}) {
							if (lc($_) eq lc($login->username)) {
								$already++;
							}
						}
					}

					unless ($already) {
						$entry->add(memberuid =>  $login->username);
						$entry->add(memberuid =>  $dn);
						my $second_mesg = $entry->update($ldap);
						Tab::log("User ".$login->username." was added to admins group.  Result: ".$second_mesg->code." ".$second_mesg->error);
					}
				}
				Tab::log("User ".$login->username."'s LDAP group memberships updated");
			}
		}

		$ldap->unbind();
	}

	if ($Tab::ad_enable eq "yessir" && $ad_password) {

		my $ad= Net::LDAPS->new( $Tab::ad_server,
			port    => $Tab::ad_port,
			version => 3,
			verify  => 'none',
			cafile  => $Tab::ad_certs
		) or die "$@";

		my $mesg = $ad->bind( $Tab::ad_user, password => $Tab::ad_pw);

		my $basedn = $Tab::ad_dn;

		my $dn = "CN=".$login->username.",CN=Users,".$basedn;

		$mesg = $ad->search( base => $dn, filter => '(objectClass=*)');

		chomp $ad_password;

		my $unicode_pw;
		map { $unicode_pw .= "$_\000" } split(//, "\"$ad_password\"");

		if ($mesg->entries) {

			$mesg = $ad->modify( $dn,
				changes => [
					replace => [uid               => $login->username],
					replace => [mail              => $person->email],
					replace => [userPrincipalName => $login->username],
					replace => [sn                => $person->last],
					replace => [givenName         => $person->first],
					replace => [displayName       => $person->first." ".$person->last],
					replace => [unicodePwd        => $unicode_pw],
				]
			);

			Tab::log("Modified user ".$login->username." in the PADS AD directory.  Result: ".$mesg->code." ".$mesg->error);

		} else {

			$mesg = $ad->add( $dn,
				attr                           => [
					cn                         => $login->username,
					displayName                => $person->first." ".$person->last,
					givenName                  => $person->first,
					sn                         => $person->last,
					mail                       => $person->email,
					uid                        => $login->username,
					userPrincipalName          => $login->username,
					objectclass                => "user",
					unicodePwd                 => $unicode_pw,
					"msDS-UserAccountDisabled" => "FALSE",
					lockoutTime                => 0
				]
			);

			Tab::log("Added user ".$login->username." to the PADS AD directory.  Result: ".$mesg->code." ".$mesg->error);

		}
		$ad->unbind;
	}

	return 1;

</%init>

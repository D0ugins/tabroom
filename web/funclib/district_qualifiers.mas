<%args>
	$event
	$all => undef
</%args>
<%init>

	return if $event->setting('weekend') eq "nope";
	my $tourn = $event->tourn;
	return unless $tourn->setting('nsda_district');

	my ($num_qualifiers, $num_alternates, $num_active) = $m->comp(
		"/funclib/nsda_qualifier_count.mas",
			event => $event
		);  

	my %qualifiers;

	my $final = $event->rounds(
		type => "final"
	)->first;

	if ($event->abbr ne "HOU" || $final)  {   

		my $result_set = Tab::ResultSet->search(
			event => $event->id,
			label => "District Qualifiers"
		)->first;

		return unless $result_set; 

		my $counter;
		my $quantity = 1;
		my $last_rank;

		RESULT:
		foreach my $result (
			sort {$a->rank <=> $b->rank} 
			$result_set->results
		) { 

			$counter++;
            my @values;
			my $place;

            foreach my $value ($result->values) { 

                next if $value->priority < 1;

				if ($value->tag eq "Place") { 
					$place = $value;
				} else { 
                	push @values, $value;
				}
            }

			my $rank;

			if ($place) { 
				$rank = $place->value;
			} else { 
				$rank = $result->rank;
			}

			my $entry = $result->entry();

			my $vacate = $entry->setting('nsda_vacate');

			if ($vacate) { 
				next RESULT if $quantity > $num_qualifiers;
			} elsif ($quantity == $num_qualifiers) { 
				$last_rank = $rank;
			} elsif ($quantity > $num_qualifiers) { 
				if ($last_rank == $rank) { 
					push @{$qualifiers{"ties"}{$rank}}, $entry;
				} else { 
					next RESULT;
				}
			}
			
			$qualifiers{$counter}{"rank"} = $rank;
			$qualifiers{$counter}{"entry"} = $entry;
			$qualifiers{$counter}{"vacated"}++ if $vacate;

            my $tiebreaks;

            foreach my $value (
				sort {$a->priority <=> $b->priority} 
				@values
			) { 
				$qualifiers{$counter}{"tag"}{$value->priority}     = $value->tag;
				$qualifiers{$counter}{"descs"}{$value->priority}   = $value->description;
				$qualifiers{$counter}{"results"}{$value->priority} = $value->value;
			}

			foreach my $student ($entry->students) { 

				push @{$qualifiers{$counter}{"students"}}, $student;

				$qualifiers{$counter}{$student->id}{"ineligible"}++ 
					unless $student->ualt_id;

				$qualifiers{$counter}{"ineligible"}++ 
					unless $student->ualt_id;
			}

			unless (
				$qualifiers{$counter}{"vacated"} 
				|| $qualifiers{$counter}{"ineligible"}
				|| $all
			) { 
				$quantity++;
			}

		}


	} elsif ($event->abbr eq "HOU") { 

		my @rounds = sort {$b->name <=> $a->name} $event->rounds();
		next unless @rounds;

		my $last_round = shift @rounds;

		foreach my $chamber ($last_round->panels) { 

			my $counter;
			my $quantity;

			my $code = "H".$chamber->letter;

			my $result_set  = Tab::ResultSet->search(
				label => "District Qualifiers: $code",
				tourn => $tourn,
				event => $event
			)->first;

			foreach my $result (
				sort {$a->rank <=> $b->rank} 
				$result_set->results
			) { 


				$counter++;		

				my $tag = $code."-".$counter;
				
				my $entry = $result->entry;
				$qualifiers{$tag}{"entry"} = $entry;

				my @values;
				foreach my $value ($result->values) { 
					next if $value->priority < 1;
					push @values, $value;
				}

				my $place = shift @values;

				if ($place->tag ne "Place") { 
					unshift(@values, $place);
					$qualifiers{$tag}{"rank"} = $place->value;
				} else { 
					$qualifiers{$tag}{"rank"} = $result->rank;
				}

				my $tiebreaks;

				foreach my $value (
					sort {$a->priority <=> $b->priority} 
					@values
				) { 
					$qualifiers{$tag}{"tag"}{$value->priority}     = $value->tag;
					$qualifiers{$tag}{"descs"}{$value->priority}   = $value->description;
					$qualifiers{$tag}{"results"}{$value->priority} = $value->value;
				}

				foreach my $student ($entry->students) { 

					push @{$qualifiers{$tag}{"students"}}, $student;

					$qualifiers{$tag}{$student->id}{"ineligible"}++ 
						unless $student->ualt_id;

					$qualifiers{$tag}{"ineligible"}++ 
						unless $student->ualt_id;
				}

				if ($entry->setting('nsda_vacate')) { 
					$qualifiers{$tag}{"vacated"}++;
				} 

				unless (
					$qualifiers{$tag}{"vacated"} 
					|| $qualifiers{$tag}{"ineligible"}
					|| $all
				) { 
					$quantity++;
				}

				last if $quantity;

			}
		}   
	}   

	return %qualifiers;

</%init>

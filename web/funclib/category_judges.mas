<%args>
	$category
	$hires   => undef
	$active  => undef
	$weekend => undef
</%args>
<%init>

	return unless $category;

	my $limits = " and judge.school = 0" if $hires;
	$limits .= " and judge.active = 1" if $active;

	my $prefs = $category->setting("prefs");

	Tab::Judge->columns( TEMP  => qw/cap state 
		districtid distname distcode 
		schname schcode 
		regname regcode 
		perphone peremail
		coach_rating percent
		parli worldstate
	/);

	if ($prefs && $prefs ne "none" && $prefs ne "ordinals") { 

		Tab::Judge->set_sql( prefs_by_category => "
			select distinct judge.*, 
				round(avg(rating_tier.name),2) as avg, 
				coachrating_tier.name as coach_rating,
				tab_rating.value as tab_rating, 
				neutral.value as neutral, 
				diversity.value as diversity, 
				cap.value as cap,
				parli.value as parli,

			person.email as peremail, person.phone as perphone,
			school.id as schoolid, school.code as schcode, school.name as schname, school.name as schoolname, 
			region.id as regionid, region.name as regname, region.code as regcode,
			district.id as districtid, district.name as distname, district.code as distcode,
			chapter.id as chapterid, chapter.state as state,
			school.state as worldstate

			from judge

			left join rating 
				on rating.judge = judge.id 
				and rating.type != 'coach'

			left join rating_tier 
				on rating_tier.id = rating.rating_tier

			left join rating coachrating 
				on coachrating.judge = judge.id 
				and coachrating.type = 'coach'

			left join rating_tier coachrating_tier 
				on coachrating_tier.id = coachrating.rating_tier

			left join judge_setting tab_rating 
				on tab_rating.judge = judge.id and tab_rating.tag = 'tab_rating'
			left join judge_setting diversity 
				on diversity.judge = judge.id and diversity.tag = 'diversity'
			left join judge_setting neutral 
				on neutral.judge = judge.id and neutral.tag = 'neutral'
			left join judge_setting cap 
				on cap.judge = judge.id and cap.tag = 'chief_adjudicator'

			left join judge_setting parli 
				on parli.judge = judge.id and parli.tag = 'parli'

			left join person on person.id = judge.person
			left join school on school.id = judge.school
			left join chapter on chapter.id = school.chapter
			left join region on region.id = school.region
			left join district on district.id = school.district

			where judge.category = ?
			$limits
			group by judge.id
			order by judge.code, judge.last");

		return Tab::Judge->search_prefs_by_category($category->id);

	} elsif ($prefs eq "ordinals") { 

		Tab::Judge->set_sql( ordinals_by_category => "
			select distinct judge.*,
				round(avg(rating.percentile),2) as avg,
				tab_rating.value as tab_rating, 
				neutral.value as neutral, 
				diversity.value as diversity, 
				cap.value as cap,
			person.email as peremail, person.phone as perphone,
			school.id as schoolid, school.code as schcode, school.name as schname, school.name as schoolname,
			region.id as regionid, region.name as regname, region.code as regcode,
			district.id as districtid, district.name as distname, district.code as distcode,
			chapter.id as chapterid, chapter.state as state

			from judge

			left join person on person.id = judge.person
			left join school on school.id = judge.school
			left join chapter on chapter.id = school.chapter
			left join region on region.id = school.region
			left join district on district.id = school.district


			left join rating on rating.judge = judge.id and rating.type != 'coach'

			left join judge_setting tab_rating 
				on tab_rating.judge = judge.id and tab_rating.tag = 'tab_rating'
			left join judge_setting diversity 
				on diversity.judge = judge.id and diversity.tag = 'diversity'
			left join judge_setting neutral 
				on neutral.judge = judge.id and neutral.tag = 'neutral'
			left join judge_setting cap 
				on cap.judge = judge.id and cap.tag = 'chief_adjudicator'
			where judge.category = ?
			$limits
			group by judge.id
			order by judge.code, judge.last");

		return Tab::Judge->search_ordinals_by_category($category->id);

	} else { 

		Tab::Judge->set_sql( by_category => "
			select distinct judge.*, 
				tab_rating.value as tab_rating, 
				neutral.value as neutral, 
				diversity.value as diversity, 
				cap.value as cap,
			person.email as peremail, person.phone as perphone,
			school.id as schoolid, school.code as schcode, school.name as schname, school.name as schoolname,
			region.id as regionid, region.name as regname, region.code as regcode,
			district.id as districtid, district.name as distname, district.code as distcode,
			chapter.id as chapterid, chapter.state as state,
			school.state as worldstate,
			parli.value as parli


			from judge

			left join judge_setting tab_rating 
				on tab_rating.judge = judge.id 
				and tab_rating.tag = 'tab_rating'
			left join judge_setting diversity 
				on diversity.judge = judge.id 
				and diversity.tag = 'diversity'
			left join judge_setting neutral 
				on neutral.judge = judge.id 
				and neutral.tag = 'neutral'
			left join judge_setting cap 
				on cap.judge = judge.id 
				and cap.tag = 'chief_adjudicator'

			left join person on person.id = judge.person
			left join school on school.id = judge.school
			left join chapter on chapter.id = school.chapter
			left join region on region.id = school.region
			left join district on district.id = school.district

			left join judge_setting parli 
				on parli.judge = judge.id and parli.tag = 'parli'

			where judge.category = ?
			$limits
			order by judge.code, judge.last");

		return Tab::Judge->search_by_category($category->id);

	}

</%init>

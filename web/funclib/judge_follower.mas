<%args>
	$judge       => undef
	$category    => undef
	$jpool       => undef
	$emails      => undef
	$person_only => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	my $args;
	my $limit;
	my $fields;

	if ($category) {
		$fields = " from judge ";
		$limit =" where judge.category = ? ";
		$args = $category;
	} elsif ($jpool) {
		$fields = " from (judge, jpool_judge) ";
		$limit = " where judge.id = jpool_judge.judge and jpool_judge.jpool = ? ";
		$args = $jpool;
	} elsif ($judge) {
		$fields = " from judge ";
		$limit = " where judge.id = ? ";
		$args = $judge;
	} else {
		return;
	}

	my $sth = $dbh->prepare("
		select judge.id, js.value,
			person.email, person.phone, person.provider,
			follower.email, follower.cell, follower.domain

		$fields
		left join person on person.id = judge.person and person.no_email != 1
		left join follower on follower.judge = judge.id
		left join judge_setting js
			on js.judge = judge.id
			and js.tag = 'email'
			and js.value != person.email
		$limit

	");

	$sth->execute($args);

	my %has_emails;

	while (
		my ($judge_id, $js_email,
			$person_email, $person_phone, $person_provider,
			$follower_email, $follower_cell, $follower_domain
		) = $sth->fetchrow_array()
	) {

		if ($person_email && (not defined $has_emails{$person_email})) {
			$has_emails{$person_email}++;
		}

		if ($js_email && (not defined $has_emails{$js_email})) {
			$has_emails{$js_email}++;
		}

		unless ($emails) {
			if ($person_phone && $person_provider) {
				$person_phone =~ s/[\D_]//g;
				my $phone_email = $person_phone.'@'.$person_provider;
				Tab::debuglog("Phone email is $phone_email");
				unless ($has_emails{$phone_email}) {
					$has_emails{$phone_email}++;
				}
			}
		}

		unless ($person_only) {

			if ($follower_email && (not defined $has_emails{$follower_email})) {
				$has_emails{$follower_email}++;
			}

			unless ($emails) {
				if ($follower_cell && $follower_domain) {

					$follower_cell =~ s/[\D_]//g;
					my $phone_email = $follower_cell.'@'.$follower_domain;
					unless ($has_emails{$phone_email}) {
						$has_emails{$phone_email}++;
					}
				}
			}
		}
	}

	return sort {$a cmp $b} (keys %has_emails);

</%init>

<%args>
	$student
	$school
	$tourn => undef
</%args>
<%init>

	$tourn = $school->tourn() unless $tourn;
	return unless $school->district;

	my %incomplete;

	#2 Entry Release Forms from the district

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select  school.id, school.chapter, rf.value_text
		from school, school_setting rf
		where school.district = ?
		and school.id = rf.school
		and rf.tag = 'release_forms'
	");

	$sth->execute($school->district->id);

	my %release_forms;

	while (
		my ($school_id, $chapter_id, $rf_json) = $sth->fetchrow_array()
	) {
		my %school_forms = eval {
			return %{JSON::decode_json($rf_json)};
		};
		%release_forms = (%release_forms, %school_forms);
	}

	#4-6 Entry Details

	my %entries = $m->comp(
		"/funclib/nationals_entries.mas",
		student => $student,
		tourn   => $tourn
	);

	my @settings = (
		"coach_points",
		"coach_script",
		"author",
		"title",
		"publisher",
		"topic",
		"publish_isbn",
		"publish_url",
		"publish_date"
	);

	my @date_settings = ("publish_print_date");

	my %used_events;
	my %checked;
	my $reasons;

	foreach my $type ("main", "supp", "conn") {

		next unless $entries{$type};

		foreach my $entry (@{$entries{$type}}) {

			my $event = $entry->event;
			my %entry_settings = $entry->all_settings();
			my %event_settings = $event->all_settings();

			my $abbr = $event->abbr;
			my %local_incomplete;

			foreach my $student ($entry->students) {
				unless ($checked{$student->id}++){
					$local_incomplete{"No release forms uploaded for ".$student->id." ".$student->first." ".$student->last}++
						unless $release_forms{$student->id};
				}
			}

			unless ($event_settings{'usa_wsdc'}) {
				$local_incomplete{"No coach for points listed for ".$abbr}++
					unless $entry_settings{"coach_points"};
			}

			if ($event_settings{"ask_for_titles"}) {
				$local_incomplete{"Piece title missing for ".$abbr}++
					unless $entry_settings{"title"};

				$local_incomplete{"Manuscript/cutting missing for ".$abbr}++
					unless $entry_settings{"script_file"};
			}

			if ($event_settings{"ask_for_topic"}) {
				$local_incomplete{"Oratory topic missing for ".$abbr}++
					unless $entry_settings{"topic"};
			}

			if ($event_settings{'ask_for_bibliography'}) {
				$local_incomplete{"Manuscript or cutting missing for ".$abbr}++
					unless $entry_settings{"script_file"};

				$local_incomplete{"Piece bibliography missing for ".$abbr}++
					unless $entry_settings{"bibliography"};
			}

			if ($event_settings{"ask_for_authors"}) {

				$local_incomplete{"Piece author missing for ".$abbr}++
					unless $entry_settings{"author"};

				unless (
					( $entry_settings{"publisher"}
					  && $entry_settings{"publish_date"}
					  && $entry_settings{"publish_isbn"}
					) || (
					  $entry_settings{"publish_url"}
					  && $entry_settings{"publish_print_date"}
					)
				) {
					$local_incomplete{"Publication date is incomplete for ".$abbr}++;
				}
			}

			if (keys %local_incomplete) {

				$entry->setting("status", "incomplete");

				foreach my $key (keys %local_incomplete) {
					$reasons .= " - " if $reasons;
					$reasons .= $key;
				}

				$entry->setting("incomplete_reasons", "text", $reasons);

			} else {
				$entry->setting("status", "complete");
			}
		}
	}

	return $reasons;

</%init>

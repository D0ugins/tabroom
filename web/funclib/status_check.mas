<%args>
	$student
	$school
	$tourn => undef
</%args>
<%init>

	unless ($tourn) {
		if ($school) {
			$tourn = $school->tourn();
		}
	}

	return unless $school;
	return unless $school->district;

	my $sth;

	my %incomplete;

	#2 Entry Release Forms from the district

	# Marked as no longer necessary as of 2/23/21 but since I have trust issues
	# about this type of thing I am keeping the code -- CLP

#	my $dbh = Tab::DBI->db_Main();
#	$sth = $dbh->prepare("
#		select  school.id, school.chapter, rf.value_text, rf.id
#			from school, school_setting rf
#		where school.district = ?
#			and school.id = rf.school
#			and school.tourn = ?
#			and rf.tag = 'release_forms'
#	");

#	$sth->execute($school->district->id, $tourn->id);

#	my %release_forms;
#
#	while (
#		my ($school_id, $chapter_id, $rf_json, $rf_id) = $sth->fetchrow_array()
#	) {
#
#		my %school_forms = eval {
#			return %{JSON::decode_json($rf_json)};
#		};
#		%release_forms = (%release_forms, %school_forms);
#	}

	#4-6 Entry Details

	my %entries = $m->comp(
		"/funclib/nationals_entries.mas",
		student => $student,
		tourn   => $tourn
	);

	my @settings = (
		"coach_points",
		"coach_script",
		"author",
		"title",
		"publisher",
		"topic",
		"publish_isbn",
		"publish_url",
		"publish_date"
	);

	my @date_settings = ("publish_print_date");

	my %used_events;
	my %checked;
	my $reasons;

	foreach my $type ("main", "supp", "conn") {

		next unless $entries{$type};

		foreach my $entry (@{$entries{$type}}) {

			my $event = $entry->event;
			my %entry_settings = $entry->all_settings();
			my %event_settings = $event->all_settings();

			next if $entry_settings{"rejected_by"};

			my $abbr = $event->abbr;
			my %local_incomplete = ();
			my $local_reasons;

#			foreach my $student ($entry->students) {
#				unless ($checked{$student->id}++){
#					$local_incomplete{"No release forms uploaded for ".$student->first." ".$student->last}++
#						unless $release_forms{$student->id};
#				}
#			}

			unless ($event_settings{'usa_wsdc'}) {
				$local_incomplete{"No coach for points listed for ".$abbr}++
					unless $entry_settings{"coach_points"};
			}

			if ($event_settings{"ask_for_videos"} && (not defined $event_settings{"video_link_optional"})) {
				$local_incomplete{"Video link was not tested for ".$abbr}++
					unless $entry_settings{"video_link_tested"};

			}

			if ($event_settings{"ask_for_titles"}) {
				$local_incomplete{"Piece title missing for ".$abbr}++
					unless $entry_settings{"title"};

				$local_incomplete{"Manuscript/cutting missing for ".$abbr}++
					unless $entry_settings{"script_file"};
			}

			if ($event_settings{"ask_for_topic"}) {
				$local_incomplete{"Speech topic missing for ".$abbr}++
					unless $entry_settings{"topic"};
			}

			if ($event_settings{'ask_for_bibliography'}) {
				$local_incomplete{"Manuscript or cutting missing for ".$abbr}++
					unless $entry_settings{"script_file"};

				$local_incomplete{"Piece bibliography missing for ".$abbr}++
					unless $entry_settings{"bibliography"};
			}

			if ($event_settings{"ask_for_authors"}) {

				$local_incomplete{"Piece author missing for ".$abbr}++
					unless $entry_settings{"author"};

				unless (
					( $entry_settings{"publisher"}
					  && $entry_settings{"publish_date"}
					  && $entry_settings{"publish_isbn"}
					) || (
					  $entry_settings{"publish_url"}
					  && $entry_settings{"publish_print_date"}
					)
				) {
					$local_incomplete{"Publication date is incomplete for ".$abbr}++;
				}
			}

			if (keys %local_incomplete) {

				$entry->setting("status", "incomplete");

				foreach my $key (sort {$a cmp $b} keys %local_incomplete) {
					$local_reasons .= " - " if $local_reasons;
					$local_reasons .= $key;
				}

				$entry->setting("incomplete_reasons", "text", $local_reasons);

				$reasons .= " - " if $reasons;
				$reasons .= $local_reasons;

			} else {
				$entry->setting("status", "complete");
				$entry->setting("incomplete_reasons", 0);
			}
		}
	}

	return $reasons;

</%init>

<%args>
	$event
	$round => undef
</%args>
<%init>

	# Given an event, return how many entries qualify for that event.

	if ($event->abbr eq "BQ") { 

		my @entries = $event->entries(active => 1); 
		my $num_entries = scalar @entries;

		my $alternates = 14;

		my $half_entries = POSIX::ceil($num_entries / 2);
		$alternates = $half_entries 
			if $half_entries < $alternates;

		return (1, $alternates - 1, $num_entries);

	} elsif ($event->abbr eq "SEN") { 
	
		my $alternates = 14;

		my @entries = $event->entries(active => 1); 
		my $num_entries = scalar @entries;

		my %schools;

		foreach my $entry (@entries) { 
			$schools{$entry->school->id}++;
		}

		if ((scalar (keys %schools)) > 7) {

			my $half_entries = POSIX::ceil($num_entries / 2);

			$alternates = $half_entries 
				if $half_entries < $alternates;

			return (2, $alternates - 2, $num_entries);

		} else { 

			return (0, 0, $num_entries);
		}

	} elsif ($event->abbr eq "HOU") { 

		my @entries = $event->entries(active => 1); 
		my $num_entries = scalar @entries;;

		my $alternates = 14;
		my $half_entries = POSIX::ceil($num_entries / 2);

		$alternates = $half_entries 
			if $half_entries < $alternates;
	
		return (2, $alternates - 2, $num_entries) if $num_entries < 30;
		return (4, $alternates - 2, $num_entries) if $num_entries < 59;
		return (6, $alternates - 2, $num_entries) if $num_entries < 88;
		return (7, $alternates - 2, $num_entries) if $num_entries < 117;
		return (8, $alternates - 2, $num_entries) if $num_entries < 146;
		return (9, $alternates - 2, $num_entries);
	}

	my $tourn = $event->tourn;

	my $district_id = $tourn->setting("nsda_district");

	return unless $district_id;

	my $district = Tab::District->retrieve($district_id);

	return unless $district; 

	my $level;
	
	$level = $district->level if $district;

	if ($tourn->setting("nsda_district_level_force")) { 
		$level = $tourn->setting("nsda_district_level_force");
	}

	my $team_event++ if $event->setting('max_entry') > 1;

	Tab::Entry->set_sql(competed_once => "
		select distinct entry.id 
		from entry
		where entry.event = ? 
		and exists (
			select score.id
			from score, ballot
			where ballot.entry = entry.id
			and ballot.id = score.ballot
			and (score.tag = 'rank'
				or score.tag = 'ballot'
			)
		)
	");

	my @live_entries = Tab::Entry->search_competed_once($event->id);


	if ($round && $round->name == 1) { 
		@live_entries = $event->entries( active => 1);
	}

	my $count = scalar @live_entries;

	my $alternates = POSIX::ceil($count / 2);

	$alternates = 14 if $alternates > 14;

	my $qualifiers;

	my $qual_override = $event->setting('nsda_qual_override');

	if ($qual_override) { 

		my ($quals, $count_threshold) = 
			split(/,/, $qual_override);

		if ($count > $count_threshold) { 
			return ($quals, $alternates - $quals, $count) 
		}

	}

	if ($level == 1) { 

		if ($team_event) { 

			return (4, $alternates - 4, $count) if $count > 55;
			return (3, $alternates - 3, $count) if $count > 31;
			return (2, $alternates - 2, $count) if $count > 15;
			return (1, $alternates - 1, $count) if $count > 3;

		} else { 

			return (4, $alternates - 4, $count) if $count > 65;
			return (3, $alternates - 3, $count) if $count > 45;
			return (2, $alternates - 2, $count) if $count > 19;
			return (1, $alternates - 1, $count) if $count > 3;

		}

	} elsif ($level == 2) { 

		if ($team_event) { 

			return (4, $alternates - 4, $count) if $count > 49;
			return (3, $alternates - 3, $count) if $count > 29;
			return (2, $alternates - 2, $count) if $count > 3;

		} else { 

			return (4, $alternates - 4, $count) if $count > 57;
			return (3, $alternates - 3, $count) if $count > 37;
			return (2, $alternates - 2, $count) if $count > 3;

		}

	} elsif ($level == 3) { 

		if ($team_event) { 

			return (4, $alternates - 4, $count) if $count > 49;
			return (3, $alternates - 3, $count) if $count > 9;
			return (2, $alternates - 2, $count) if $count > 3;

		} else { 

			return (4, $alternates - 4, $count) if $count > 57;
			return (3, $alternates - 3, $count) if $count > 11;
			return (2, $alternates - 2, $count) if $count > 3;

		}

	} else { 

		$m->print('<div class="main">');

		$m->print("<h3>There seems to be a problem</h3>");

		$m->print("<p>Your district, ".$district->name." does ");
		$m->print(" not have a valid level: ".$level."</p>");

		$m->print('<p>Please contact us at <a href="mailto:help@tabroom.com">help@tabroom.com</a> for assistance.</p>');

		$m->print('</div>');

		$m->abort;

	}

</%init>

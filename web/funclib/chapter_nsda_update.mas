<%args>
	$chapter
</%args>
<%init>

	Tab::Student->set_sql(nsda => "
		select * from student where ualt_id > 0
		and student.chapter = ? 
		and not exists (
			select student_setting.id
			from student_setting
			where student_setting.student = student.id
			and student_setting.tag = 'nsda_points'
		)
	");

	my $count;

	foreach my $student (Tab::Student->search_nsda($chapter->id)) { 
		$student->setting("nsda_paid", "X");
		$student->setting("nsda_points", "X");
		$student->setting("nsda_joined", "X");
		$student->setting("student_email", "X");
		$count++;
	}

	Tab::Chapter->set_sql(update_degrees => "
		update tabroom.chapter_setting cs,
			tabroom.chapter chapter,
			points.NEW_SCHOOLS school
			set cs.value = school.school_total_deg

			where cs.chapter = chapter.id
			and chapter.id = ? 
			and cs.tag = 'nsda_degrees'
			and chapter.nsda = school.school_id
			and chapter.nsda > 0
	");

	Tab::Chapter->sql_update_degrees->execute($chapter->id);

	Tab::Chapter->set_sql(update_paid => "
		update tabroom.chapter_setting cs,
			tabroom.chapter chapter,
			points.NEW_SCHOOLS school
			set cs.value = school.school_paid_status

			where cs.chapter = chapter.id
			and chapter.id = ? 
			and cs.tag = 'nsda_paid'
			and chapter.nsda = school.school_id
			and chapter.nsda > 0
	");

	Tab::Chapter->sql_update_paid->execute($chapter->id);

	Tab::Chapter->set_sql(update_charter => "
		update tabroom.chapter_setting cs,
			tabroom.chapter chapter,
			points.NEW_SCHOOLS school
			set cs.value = school.school_charter_status

			where cs.chapter = chapter.id
			and chapter.id = ? 
			and cs.tag = 'nsda_charter'
			and chapter.nsda = school.school_id
			and chapter.nsda > 0
	");

	Tab::Chapter->sql_update_charter->execute($chapter->id);

	Tab::Chapter->set_sql(update_paid => "
		update tabroom.chapter_setting cs,
			tabroom.chapter chapter,
			points.NEW_SCHOOLS school
			set cs.value = school.school_paid_status

			where cs.chapter = chapter.id
			and chapter.id = ? 
			and cs.tag = 'nsda_paid'
			and chapter.nsda = school.school_id
			and chapter.nsda > 0
	");

	Tab::Chapter->sql_update_paid->execute($chapter->id);

	Tab::Student->set_sql(update_email=> "

		update tabroom.student_setting ss,
			tabroom.student student,
			tabroom.chapter chapter, 
			points.NEW_USERS person,
			points.DEMOGRAPHICS demo

			set ss.value = demo.student_email

			where ss.student = student.id
			and student.chapter = ? 
			and student.ualt_id = person.ualt_id
			and person.user_id = demo.person_id
			and ss.tag = 'student_email'

			and student.chapter = chapter.id 
			and chapter.nsda > 0
	");

	Tab::Student->sql_update_email->execute($chapter->id);

	Tab::Student->set_sql(update_link => "

		update tabroom.student student,
			tabroom.chapter chapter, 
			tabroom.person person,
			points.NEW_USERS user,
			points.DEMOGRAPHICS demo

			set student.person = person.id

			where (student.person is null or student.person = 0)
			and student.chapter = ? 
			and student.ualt_id = user.ualt_id
			and user.user_id = demo.person_id
			and demo.student_email = person.email

			and student.chapter = chapter.id 
			and chapter.nsda > 0
	");

	Tab::Student->sql_update_link->execute($chapter->id);

	Tab::Student->set_sql(update_paid => "

		update tabroom.student_setting ss,
			tabroom.student student,
			tabroom.chapter chapter, 
			points.NEW_USERS person

			set ss.value = 1

			where ss.student = student.id
			and student.chapter = ? 
			and student.ualt_id = person.ualt_id
			and person.paid_status = 1
			and ss.tag = 'nsda_paid'

			and student.chapter = chapter.id 
			and chapter.nsda > 0
	");

	Tab::Student->sql_update_paid->execute($chapter->id);

	Tab::Student->set_sql(update_points => "

		update tabroom.student_setting ss,
			tabroom.student student,
			tabroom.chapter chapter, 
			points.NEW_USERS person

			set ss.value = person.total_pts

			where ss.student = student.id
			and student.ualt_id = person.ualt_id
			and student.chapter = ? 
			and person.total_pts > 1
			and ss.tag = 'nsda_points'

			and student.chapter = chapter.id 
			and chapter.nsda > 0
	");

	Tab::Student->sql_update_points->execute($chapter->id);


	Tab::Student->set_sql(update_joined=> "

		update tabroom.student_setting ss,
			tabroom.student student,
			tabroom.chapter chapter, 
			points.NEW_USERS_TO_DEGREES degree

			set ss.value_date = degree.dateacquired

			where ss.student = student.id
			and student.chapter = ? 
			and student.ualt_id = degree.ualt_id
			and degree.degree_id = 51
			and ss.tag = 'nsda_joined'

			and student.chapter = chapter.id 
			and chapter.nsda > 0
	");

	Tab::Student->sql_update_joined->execute($chapter->id);

	return;

</%init>

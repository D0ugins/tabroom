<%args>
	$tourn
</%args>
<%doc>

	This function will add tournaments from Tabroom to the NSDA master calendar
	so long as they are not college tournaments or test/hidden tournaments.

</%doc>
<%init>

	return;

	return unless $r->hostname eq "www.tabroom.com";

	my $url = "http://".$tourn->webname.".tabroom.com" if $tourn->webname;
	$url = "https://www.tabroom.com/index/tourn/index.mhtml?tourn_id=".$tourn->id unless $url;

	my $hidden = $tourn->hidden;
	my @approved_circuits = Tab::TournCircuit->search(
		tourn    => $tourn->id,
		approved => 1
	);

	$hidden++ unless @approved_circuits;

	my @contacts = $m->comp("/funclib/tourn_admins.mas",
		tourn   => $tourn,
		contact => 1
	);

	my $contact_string;
	my $contact_email;

	my %used;
	foreach my $contact (@contacts) {
		next unless $contact->email;
		next if $used{$contact->email}++;

		$contact_string .= ", " if $contact_string;
		$contact_string .= $contact->first." ".$contact->last;

		$contact_email .= ", " if $contact_email;
		$contact_email .= $contact->email;
	}

	my $tzname = &Tab::tzname($tourn->tz, $tourn->start);

	my $country = $tourn->country;
	$country = "US" unless $country;

	my $state = $tourn->state;
	$state = "XX" unless $state;

	my $city = $tourn->city;

	my $calendar;

	$calendar->{"start_date"}    = DateTime::Format::MySQL->format_date($tourn->start);
	$calendar->{"end_date"}      = DateTime::Format::MySQL->format_date($tourn->end);
	$calendar->{"name"}          = $tourn->name;
	$calendar->{"reg_start"}     = DateTime::Format::MySQL->format_date($tourn->reg_start);
	$calendar->{"reg_end"}       = DateTime::Format::MySQL->format_date($tourn->reg_end);
	$calendar->{"location"}      = $city;
	$calendar->{"state"}         = $state;
	$calendar->{"country"}       = $country;
	$calendar->{"timezone"}      = $tzname;
	$calendar->{"contact"}       = $contact_string;
	$calendar->{"contact_email"} = $contact_email;
	$calendar->{"url"}           = $url;
	$calendar->{"source"}        = "tabroom";
	$calendar->{"external_id"}   = $tourn->id;

	if ($hidden) {
		$calendar->{"hidden"} = JSON::true;
	} else {
		$calendar->{"hidden"} = JSON::false;
	}

	if (1 == 2) {
		# This has to exist then I'll enable it CLP;
		my ($results_hash, $raw) = $m->comp(
			"api_client.mas",
			path     => "/calendar",
			post_ref => $calendar
		);
	}

	return;

</%init>

<%args>
	$tourn
	$site_id => undef
	$from_id => undef
	$return  => undef
</%args>
<%init>

	my $err;
	my $msg;

	unless ($site_id) {
		$m->print("You must put a site into your tournament");
		$m->abort;
	}

	my $rpool_room;

	ID:
	foreach my $id (1 .. 10) {

		# Only named rooms may be saved
		my $name =  $ARGS{"new_".$id."_name"};
		chomp $name;

		$name =~ s/\s+$//;
		$name =~ s/^\s+//;
		$name =~ s/\"//g;
		$name =~ s/\'//g;

		unless ($name) {
			next ID;
		}

		my $url = $ARGS{$name."_url"};
		$url =~ s/\s+$//;
		$url =~ s/^\s+//;

		# Check for duplicates
		my $already = Tab::Room->search(
			name => $name,
			site => $site_id
		)->first;

		my $ada = 0;
		$ada++ if $ARGS{"new_".$id."_ada"};

		if ($already) {

			$already->deleted(0);
			$already->url($url);
			$already->quality($ARGS{"new_".$id."_quality"});
			$already->capacity($ARGS{"new_".$id."_capacity"});
			$already->notes($ARGS{"new_".$id."_notes"});
			$already->ada($ada);
			$already->update();

			$msg .= "Room $name saved <br />";

		} else {

			my $inactive = 0;
			$inactive = $ARGS{"new_".$id."_inactive"} if $ARGS{"new_".$id."_inactive"};

			Tab::Room->create({
				name     => $name,
				site     => $site_id,
				quality  => $ARGS{"new_".$id."_quality"},
				capacity => $ARGS{"new_".$id."_capacity"},
				notes    => $ARGS{"new_".$id."_notes"},
				ada      => $ada,
				url      => $url,
				inactive => $inactive
			});

			$msg .= "Room $name saved <br />";
		}
	}

	if ($return eq "rpools") {

		my $rpool_id = $ARGS{"rpool_id"};

		if ($rpool_room) {
			Tab::RPoolRoom->create({
				rpool => $rpool_id,
				room  => $rpool_room->id
			});
		}

		$msg .= " and added to room pool ";

		$m->redirect("/panel/room/rpool.mhtml?site_id=$site_id&rpool_id=$rpool_id&err=$err&msg=$msg");

	} else {

		$m->redirect("/setup/rooms/list.mhtml?site_id=$site_id&add=yes&err=$err&msg=$msg#new");

	}


</%init>

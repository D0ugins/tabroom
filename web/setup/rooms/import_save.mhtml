<%args>
	$site_id
	$from_id => undef
	$tourn
	$rooms
</%args>
<%init>

	my $start = $tourn->start;
	my $end   = $tourn->end;

# Get the upload and create the file handle.

   	my $req 	= Apache2::Request->new($r);
	my $upload 	= $req->upload("rooms");
	my $io 		= $upload->io;
	my @rooms;

	# Fix line breaks

	while (<$io>) {
		s/\015\012?|\r\n?|\012|\n|\015/\n/g;
		s/\n\s?\n\s?\n\s?/\n/g;
		push @rooms, $_;  
	}
	
	my $site = Tab::Site->retrieve($site_id);
	my $count;
	my $dup_count = 0;

	foreach my $room (@rooms) { 

		chomp $room;

		my ($room_name, $quality, $capacity, $notes, $ada, $url) = split(/,/,$room);

		next unless ($room_name);

		$room_name =~ s/\s+$//;
		$room_name =~ s/^\s+//;
		$room_name =~ s/\"//g;
		$room_name =~ s/\'//g;

		my $already = Tab::Room->search( 
			site => $site->id, 
			name => $room_name
		)->first;

		$url =~ s/\s+$//;
		$url =~ s/^\s+//;

		$ada = 1 if $ada; 
		$ada = 0 unless $ada; 

		next unless $room_name;
		
		if ($already) { 

			$already->quality($quality);
			$already->capacity($capacity);
			$already->notes($notes);
			$already->ada($ada);
			$already->url($url);
			$already->inactive(0);
			$already->update;

		} else { 

			my @existing_rooms = Tab::Room->search( 
				name => $room_name, 
				site => $site_id
			);

			$dup_count++ if @existing_rooms;
			next if (@existing_rooms);

			$count++;

			my $room = Tab::Room->create({ 
				name     => $room_name,
				quality  => $quality,
				site     => $site_id,
				capacity => $capacity,
				notes    => $notes,
				ada      => $ada,
				url      => $url,
				inactive => 0
			});
		}	
	}	

	my $msg = "$count rooms imported into the site.";
	$msg .= "$dup_count skipped due to duplication." if $dup_count;

	$m->redirect("/setup/rooms/list.mhtml?site_id=$site_id&msg=$msg");


</%init>

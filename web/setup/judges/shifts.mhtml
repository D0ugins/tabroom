<%args>
	$tourn
	$tourn_settings
	$category_id
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $category = Tab::Category->retrieve($category_id);

	my @days = $m->comp(
		"/funclib/tourn_days.mas",
		tourn => $tourn
	);

	my $rounds_per = $category->setting("rounds_per");

</%init>

    <& "menu.mas",
		category_id    => $category_id,
		tourn          => $tourn,
		tourn_settings => $tourn_settings,
		page           => "shifts"
	&>

	<div class="main">

		<h2>
			<% $category->name %>
		</h2>

		<&
			"tabbar.mas",
			tourn          => $tourn,
			tourn_settings => $tourn_settings,
			whoami         => "shifts",
			category       => $category
		&>

		<h4>Part-time judging</h4>

		<p>
			These timeblocks allow registering coaches to mark judges as
			<span class="inline semibold redtext">unavailable</span>
			during the shifts you specify.

%		if ($rounds_per) {

			However, you cannot assess fines for part time judges when doing by
			round committments.  It doesn't make sense to charge someone for a
			part time committment when they're also specifying how many rounds
			they can judge.

%		} else {

			The fees will be charged if a school is under their burden during
			that shift; so if a school owes 2 judges and only 1 judge is
			free on Friday night, the Friday night fine will be charged.
			However, if the school brings 3 judges, of which 2 are always
			available, the fine will not be charged.
%		}

		</p>

		<p>
			You can also use judge shifts to allow those who use the public
			judge signup to declare their own availability, if you are using
			the Public Judge Signup (available under the Hires tab).
		</p>

		<& "/funclib/tablesorter.mas",
			table     => "shifts",
			nobuttons => 'nope'
		&>

		<form action="shifts_save.mhtml" method="post">

		<input
			type  = "hidden"
			name  = "category_id"
			value = "<% $category->id %>"
		>

		<table id="shifts">

			<thead>

			<tr class="yellowrow">

				<th class="smallish">
					Name
				</th>

				<th class="smallish">
					Type
				</th>

%				unless ($rounds_per) {

					<th class="smallish">
						Fee
					</th>

%				}

				<th class="smallish">
				</th>

%				if (scalar @days > 1) {
					<th class="smallish">
						Day
					</th>
%				}

				<th class="smallish">
					Time
				</th>

				<th>
				</th>

			</tr>

			</thead>
			<tbody>
<%perl>

			my @shift_types = ("both", "public", "strike");

			foreach my $shift (
				sort {$a->type <=> $b->type}
				$category->shifts
			) {

				my $shift_start = $shift->start->set_time_zone($tz);
				my $shift_end = $shift->end->set_time_zone($tz);

</%perl>

				 <tr class="row">

					<th>
						<span class="hidden"><% $shift->name %></span>
						<input
							type  = "text"
							name  = "<% $shift->id %>_name"
							value = "<% $shift->name %>"
							size  = "16"
						>
					</th>

					<th>
						<span class="hidden"><% $shift->type %></span>

						<select
							class = "fixedtiny plain"
							name  = "<% $shift->id %>_type"
						>
%							foreach my $type (@shift_types) {
								<option
									value="<% $type %>"
									<% $type eq $shift->type ? 'selected="selected"' : "" %>
								><% ucfirst($type) %></option>
%							}
						</select>
					</th>

%					unless ($rounds_per) {

						<td>
							<input
								type  = "number"
								class = "smaller"
								min   = "0"
								max   = "99999"
								name  = "<% $shift->id %>_fine"
								value = "<% $shift->fine %>"
								size  = "4"
							>
						</td>


%					}

					<td class="nospace">
						<span class="full nospace padless smallish borderbottom padvertmore semibold">
							Start
						</span>
						<span class="full nospace padless smallish padvertmore semibold">
							End
						</span>
					</td>

%					if (scalar @days > 1 ) {

						<td class="smaller nospace">

							<span class="hidden"><% $shift_start->day %></span>

							<span class="full nospace padless borderbottom">

%							foreach my $day (@days) {

								<label for="start_<% $shift->id."-".$day->epoch %>">
									<span class="hover marno nowrap padless
										<% ($shift_start->day == $day->day)
											? "semibold redtext"
											: ""
										%>
									">

										<input
											type  = "radio"
											id    = "start_<% $shift->id."-".$day->epoch %>"
											name  = "<% $shift->id %>_start_day"
											value = "<% Tab::pickerdate($day) %>"
											<% ($shift_start->day == $day->day) ? "checked" : "" %>
										>
											<% substr($day->day_abbr, 0, 1) %>-<% Lingua::EN::Numbers::Ordinate::ordinate($day->day) %>
									</span>
								</label>

%							}
							</span>

							<span class="full nospace padless">
%							foreach my $day (@days) {

								<label for="end_<% $shift->id."-".$day->epoch %>">
									<span class="hover marno nowrap padless
										<% ($shift_end->day == $day->day)
											? "semibold redtext"
											: ""
										%>
									">

										<input
											type  = "radio"
											id    = "end_<% $shift->id."-".$day->epoch %>"
											name  = "<% $shift->id %>_end_day"
											value = "<% Tab::pickerdate($day) %>"
											<% ($shift_end->day == $day->day) ? "checked" : "" %>
										>
											<% substr($day->day_abbr, 0, 1) %>-<% Lingua::EN::Numbers::Ordinate::ordinate($day->day) %>
									</span>
								</label>
%							}
							</span>

						</td>

%					} else {

						<input
							type  = "hidden"
							name  = "<% $shift->id %>_day"
							value = "<% Tab::pickerdate($tourn->start->set_time_zone($tz)) %>"
						>
%					}

					</td>

					<td class="centeralign">
						<span class="full nospace padless borderbottom">
							<& "/funclib/timepicker.mas",
								name => $shift->id."_start",
								time => $shift_start,
								size => "6"
							&>
						</span>
						<span class="full nospace padless">
							<&
								"/funclib/timepicker.mas",
								name => $shift->id."_end",
								time => $shift_end,
								size => "6"
							&>
						</span>
					</td>

					<td class="centeralign padless">
						<a
							class = "buttonwhite redtext hover marno fa fa-sm fa-trash"
							href  = "shift_rm.mhtml?shift_id=<% $shift->id %>"
						>
						</a>
					</td>

				</tr>
% 			}

			</tbody>

			<tr class="row bordertop">

				<td>
					<input
						type        = "text"
						name        = "new_name"
						size        = "16"
						placeholder = "Add new..."
					>
				</td>

				<td>
					<select
						class = "fixedtiny plain"
						name  = "new_type"
					>

%						foreach my $type (@shift_types) {
							<option
								value="<% $type %>"
							><% ucfirst($type) %></option>
%						}

					</select>
				</td>

%				unless ($rounds_per) {
					<td>
						<input
							type  = "number"
							class = "smaller"
							min   = "0"
							max   = "99999"
							name  = "new_fine"
							size  = "4"
						>
					</td>

% 				}

				<td class="nospace">
					<span class="full nospace padless smallish borderbottom padvertmore semibold">
						Start
					</span>
					<span class="full nospace padless smallish padvertmore semibold">
						End
					</span>
				</td>

%				if (scalar @days > 1) {

					<td class="smaller nospace">

						<span class="full nospace padless borderbottom">
%							foreach my $day (@days) {
								<label for="start_<% $day->epoch %>">
									<span class="hover marno nowrap padless">

										<input
											type  = "radio"
											id    = "start_<% $day->epoch %>"
											name  = "new_start_day"
											value = "<% Tab::pickerdate($day) %>"
										>
											<% substr($day->day_abbr, 0, 1) %>-<% Lingua::EN::Numbers::Ordinate::ordinate($day->day) %>
									</span>
								</label>
%							}
						</span>

						<span class="full nospace padless">
%							foreach my $day (@days) {
								<label for="end_<% $day->epoch %>">
									<span class="hover marno nowrap padless">
										<input
											type  = "radio"
											id    = "end_<% $day->epoch %>"
											name  = "new_end_day"
											value = "<% Tab::pickerdate($day) %>"
										>
											<% substr($day->day_abbr, 0, 1) %>-<% Lingua::EN::Numbers::Ordinate::ordinate($day->day) %>
									</span>
								</label>
%							}
						</span>
					</td>

%				} else {

					<input
						type  = "hidden"
						name  = "new_day"
						value = "<% Tab::pickerdate($tourn->start->set_time_zone($tz)) %>"
					>
%				}

				<td class="centeralign">
					<& /funclib/timepicker.mas,
						name => "new_start",
						size => "6" &>
				</td>

				<td class="centeralign">
					<& /funclib/timepicker.mas,
						name => "new_end",
						size => "6" &>
				</td>

				<td>
				</td>

			</tr>

			<tr class="libl">

				<td colspan="8" align="right">
					<input type="submit" value=" Save Shifts">
					</form>
				</td>

			</tr>

		</table>

		<h5>A piece of advice</h5>

		<p>
			There are a lot of people who will mistake these on registration
			for "times the judge IS available" rather than the times the judge
			is NOT available, despite many warnings to the contrary.
		</p>

		<p>

			You'll end up with some schools registering judges who are blocked
			against all time blocks.  It's silly, but it happens.

		</p>

		<p>
			To help prevent that, I've found its best to name the time blocks
			things like "No Sunday Rounds" or "No Saturday Morning".  Putting
			the "No" in there seems to help.
		</p>

		<p>
			People.  Sheesh.
		</p>

	</div>

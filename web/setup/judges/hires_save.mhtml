<%args>
	$person
	$tourn
	$category_id
</%args>
<%init>

	my $category = Tab::Category->retrieve($category_id);

	#Throw an error if both uncovered entry method and missing judge method are set

	if ($ARGS{"uncovered_entry_fee"} && $ARGS{"hired_fee"}) {
		my $err = "You can only use one Hiring Method for judges, not both.";
		$m->redirect("hires.mhtml?category_id=$category_id&err=$err");
	}

	my %existing = $category->all_settings();

	my $msg = "Judge category information saved";
	my $changes;

	foreach my $tag (
		"track_judge_hires",
		"missing_judge_fee_is_hired",
		"exchange",
		"public_signups",
		"hired_jpool",
		"hired_rounds",
		"hired_fee",
		"uncovered_entry_fee",
		"auto_conflict_hires",
		"round_hire_fee",
		"minimum_supplied",
		"min_rounds",
		"min_judges",
		"minimum_supplied_fine",
		"paradigm_form"
	) {

        my $value = $ARGS{$tag};
        $value = 0 unless $value;
        $existing{$tag} = 0 unless $existing{$tag};

        if ($value ne $existing{$tag}) {
            $changes .= $tag." changed to ".$value." <br />";
            eval{ $category->setting($tag, $value); };
        }
	}

	my $err;

	if ($ARGS{"public_signups"}) {

		my $tz = $tourn->tz;
		$tz = "UTC" unless $tz;

		my $public_signupsdt;

		eval {
			$public_signupsdt = Tab::dtme(
				$ARGS{"public_signups_date"},
				$ARGS{"public_signups_time"},
				$tz
			);
		};

		if ($public_signupsdt) {

			$category->setting("public_signups_deadline", "date", $public_signupsdt);

		} else {

			if ($ARGS{"judge_signup_date"}) {
				$err = "Invalid deadline date sent!  Deadline set to registration deadline";
			}

			$category->setting( "public_signups_deadline", "date", $tourn->reg_end);
		}
	}


	if ($ARGS{"hired_date"}) {

		my $tz = $tourn->tz;
		$tz = "UTC" unless $tz;
		my $hireddt;

		eval {
			$hireddt = Tab::dtme(
				$ARGS{"hired_date"},
				$ARGS{"hired_time"},
				"UTC"
			);
		};

		if ($hireddt) {
			$hireddt->set_time_zone($tz);
			$category->setting("hired_deadline", "date", $hireddt);
		} else {
			$category->setting("hired_deadline", 0);
		}
	}

    if ($changes) {

        my $now = DateTime->now();
        $changes = "Changes to judge category ".$category->abbr.": <br />".$changes;

		$m->comp("/funclib/log.mas",
            type        => 'tabbing',
            tourn       => $category->tourn->id,
			category    => $category->id,
            person      => $person->id,
            description => $changes
        );
    }

	$m->redirect("hires.mhtml?category_id=$category_id&msg=$msg&err=$err");

</%init>

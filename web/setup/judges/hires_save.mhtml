<%args>
	$person
	$tourn
	$category_id
</%args>
<%init>

	my $category = Tab::Category->retrieve($category_id);

	#Throw an error if both uncovered entry method and missing judge method are set

	if ($ARGS{"uncovered_entry_fee"} && $ARGS{"hired_fee"}) { 
		my $err = "You can only use one Hiring Method for judges, not both.";
		$m->redirect("hires.mhtml?category_id=$category_id&err=$err");
	}

	my %category_settings = $category->all_settings();

	my @keys = ("track_judge_hires", 
		"exchange", 
		"public_signups", 
		"hired_jpool", 
		"hired_rounds", 
		"hired_fee", 
		"uncovered_entry_fee", 
		"auto_conflict_hires", 
		"round_hire_fee",
		"minimum_supplied",
		"minimum_supplied_fine",
		"paradigm_form"
	);

	my $msg = "Judge category information saved";
	my $err;

	foreach my $key (@keys) { 

		my $value = $ARGS{$key};
		$value = 0 unless $value;

		if ($value ne $category_settings{$key}) { 

			my $msg = "Setting changed on $key from $category_settings{$key} to $value";

			$m->comp("/funclib/log.mas",  
				type        => 'tabbing',
				tourn       => $tourn->id,
				category       => $category->id,
				person      => $person->id,
				description => $msg
			);

			eval { 
				$category->setting($key, $value); 
			};

		}
	}

	if ($ARGS{"public_signups"}) { 

		my $tz = $tourn->tz;
		$tz = "UTC" unless $tz;

		my $public_signupsdt;

		eval { 
			$public_signupsdt = Tab::dtme(
				$ARGS{"public_signups_date"},
				$ARGS{"public_signups_time"}, 
				$tz
			);
		};

		if ($public_signupsdt) { 

			$category->setting("public_signups_deadline", "date", $public_signupsdt);

		} else { 

			if ($ARGS{"judge_singup_date"}) { 
				$err = "Invalid deadline date sent!  Deadline set to registration deadline";
			}

			$category->setting( "public_signups_deadline", "date", $tourn->reg_end);

		}

	}

	$m->redirect("hires.mhtml?category_id=$category_id&msg=$msg&err=$err");

</%init>

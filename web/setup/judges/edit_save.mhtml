<%args>
	$tourn
	$category_id           => 0
	$name                  => 0
	$abbr                  => 0
</%args>
<%init>

	my $msg;
	my $category;

	if ( $ARGS{"rounds_per"} > 0 && $ARGS{"judge_per"} > 0 ) { 

		my $err = "You must EITHER use number of entries per judge, OR number
		of rounds owed.  Both methods don\'t work together";

		$m->redirect("edit.mhtml?category_id=$category_id&err=$err");
	}

	if ($category_id) { 

		$category = Tab::Category->retrieve($category_id);
		$category->name($name);
		$category->abbr($abbr);
		$category->update();

		$msg = "$name judge category changes saved";

	} else { 

        $category = Tab::Category->create({
            tourn => $tourn->id,
            name => $name,
            abbr => $abbr,
        });

		$msg = "$name judge category created";

	}

	$ARGS{"max_rounds"} = 8 if $ARGS{"max_rounds"} < 1;

	my @settings = (
		"no_codes",
		"show_names",
		"code_start",
		"field_report",
		"judge_contacts",
		"judge_cells",
		"judge_quals",
		"first_year_outs",
		"show_judge_contacts",
		"fyo_label",
		"neutrals",
		"double_entry",
		"ask_alts",
		"linked_only",
		"drops_no_burden",
		"tab_room",
		"ask_parli",
		"dio_min",
		"missing_judge_fee",
		"attending_judge_fee",
		"max_rounds",
		"free",
		"min_burden",
		"min_burden_fine",
		"max_burden",
		"alt_max",
		"commitment_bump_after",
		"commitment_bump_unit");

	foreach my $setting (@settings) { 
		if ($ARGS{$setting}) { 
			$category->setting($setting, $ARGS{$setting});
		} else { 
			$category->setting($setting, 0);
		}
	}
	
	if ($ARGS{"weekend"} != $category->setting('weekend')) { 

		$category->setting("weekend", $ARGS{"weekend"});

		foreach my $event ($category->events) {
			$event->setting("weekend", $ARGS{"weekend"});
		}
	}

	if ($ARGS{"nats_category"}) { 

		$category->setting("judge_per", 0);
		$category->setting("hired_rounds", 0);
		$category->setting("round_hire_fee", 0);
		$category->setting("rounds_per", 0);
		$category->setting("judge_per", 0);
		$category->setting("hired_jpool", 0);
		$category->setting("hired_fee", 0);
		$category->setting("uncovered_entry_fee", 0);

		$category->setting("nats_category", 1);

	} elsif ($ARGS{"judge_per"}) { 

		$category->setting("judge_per", $ARGS{"judge_per"});
		$category->setting("hired_rounds", 0);
		$category->setting("round_hire_fee", 0);
		$category->setting("rounds_per", 0);

	} else {

		$category->setting("rounds_per", $ARGS{"rounds_per"});
		$category->setting("judge_per", 0);
		$category->setting("hired_jpool", 0);
		$category->setting("hired_fee", 0);
		$category->setting("uncovered_entry_fee", 0);

		my %customs = {};

		my @keys = keys %customs;
		my $limit = scalar @keys;
		$limit = 5 if $limit < 5;

		foreach my $tick (1 .. $limit) { 

			if ($ARGS{"entries_".$tick} && $ARGS{"rounds_".$tick}) { 
				$customs{$ARGS{"entries_".$tick}} = $ARGS{"rounds_".$tick};
			}
		}

		$category->setting("custom_rounds_per", "text", JSON::encode_json(\%customs));

	}


	$m->redirect("edit.mhtml?category_id=".$category->id."&msg=$msg");

</%init>

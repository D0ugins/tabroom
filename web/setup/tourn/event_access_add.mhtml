<%args>
	$person
	$tourn
	$email    => undef
	$event_id => undef
</%args>
<%init>

	my $msg;

	my $event = Tab::Event->retrieve($event_id);

	if ($email) {

		my $staff = Tab::Person->search(
			email => $email
		)->first;

		unless ($staff) {
			my $err = "That email address you tried to add doesn't have a corresponding Tabroom account. ";
			$err .= "Please try again";

			$m->redirect("access.mhtml?err=$err");
		}

		my $already = Tab::Permission->search(
			tag    => "detailed",
			person => $staff->id,
			tourn  => $tourn->id
		)->first;

		$msg = $staff->first." ".$staff->last." ".$staff->email." granted event access to ".$event->abbr;

		my %details;

		if ($already) {

			%details = eval {
				return %{JSON::decode_json($already->details)};
			};

			if ($details{$event->id}) {

				$msg = $staff->email." already had access to ".$event->abbr;

			} else {

				$details{$event->id} = "entry";
				$already->details(JSON::encode_json(\%details));
				$already->update();

				my $change = $m->comp(
					"/funclib/log.mas",
					tourn       => $tourn->id,
					event       => $event->id,
					type        => "access",
					person      => $person,
					description => $msg
				);

			}

		} else {

			$details{$event->id} = "entry";

			my $access = Tab::Permission->create({
				person  => $staff->id,
				tourn   => $tourn->id,
				tag     => "detailed",
				details => JSON::encode_json(\%details)
			});

			my $change = $m->comp(
				"/funclib/log.mas",
				tourn       => $tourn->id,
				event       => $event->id,
				type        => "access",
				person      => $person,
				description => $msg
			);

		}

	}

	$m->redirect("event_access.mhtml?event_id=".$event->id."&msg=$msg");

</%init>


<%args>
	$person
	$tourn
	$email => undef
</%args>
<%init>

	my $msg;
	my $now = DateTime->now();

	if ($email) {

		my $staff = Tab::Person->search(
			email => $email
		)->first;

		unless ($staff) {
			my $err = "That email address you tried to add doesn't have a corresponding Tabroom account. ";
			$err .= "Please try again";

			$m->redirect("access.mhtml?err=$err");
		}

		my $already = Tab::Permission->search(
			person => $staff->id,
			tourn  => $tourn->id
		)->first;

		unless ($already) {

			my $access = Tab::Permission->create({
				person => $staff->id,
				tourn  => $tourn->id,
				tag    => "checker"
			});

		    $m->comp("/funclib/log.mas",
				person      => $staff->id,
				tourn       => $tourn->id,
				type        => "access",
				description => "Granted checker access by ".$person->email
			);

			$msg = $staff->first." ".$staff->last." has been added to your tournament staff as data entry only";

		} elsif ($already->tag eq "by_event") {

			$already->tag("checker");
			$already->details("0");
			$already->update();

			$m->comp("/funclib/log.mas",
				person      => $staff->id,
				tourn       => $tourn->id,
				type        => "access",
				description => "Granted tournament wide checker access by ".$person->email
			);

			$msg = $staff->first." ".$staff->last." has been added to your tournament staff as data entry only.";
			$msg .= "Their event specific access levels have been removed.";

		}

		$m->comp("/funclib/update_calendar.mas", tourn => $tourn);

	}

	$m->redirect("access.mhtml?msg=$msg");

</%init>


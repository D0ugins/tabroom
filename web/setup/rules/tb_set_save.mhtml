<%args>
	$tourn
	$name                        => undef
	$tiebreak_set_id             => undef
	$equal_elims                 => 0
	$truncate_to_smallest        => 0
	$truncate_to_second_smallest => 0
	$truncate_ranks_to           => 0
	$forfeits_never_break        => 0
	$mfl_time_violation          => 0
	$truncate_prelims            => 0
	$truncate_elims              => 0
	$truncate_finals             => 0
</%args>
<%init>

	my $msg;
	my $tiebreak_set = Tab::TiebreakSet->retrieve($tiebreak_set_id) if $tiebreak_set_id; 

	unless ($name) { 
		$m->print("You cannot have a nameless tiebreaker set.  please use the back button and continue");
		$m->abort();
	}

	if ($tiebreak_set) {  
		$tiebreak_set->name($name) if $name;
		$tiebreak_set->update;
		$msg = "Tiebreak set $name updated";
	} else { 

		$tiebreak_set = Tab::TiebreakSet->create({
			tourn => $tourn->id,
			name => $name
		});

		$msg = "Tiebreak set $name created";

	}

	$tiebreak_set->setting("equal_elims", $equal_elims);
	$tiebreak_set->setting("truncate_to_smallest", $truncate_to_smallest);
	$tiebreak_set->setting("truncate_to_second_smallest", $truncate_to_second_smallest);
	$tiebreak_set->setting("truncate_ranks_to", $truncate_ranks_to);
	$tiebreak_set->setting("forfeits_never_break", $forfeits_never_break);
	$tiebreak_set->setting("mfl_time_violation", $mfl_time_violation);
	$tiebreak_set->setting("truncate_prelims", $truncate_prelims);
	$tiebreak_set->setting("truncate_elims", $truncate_elims);
	$tiebreak_set->setting("truncate_finals", $truncate_finals);

	$m->redirect("tiebreaks.mhtml?tiebreak_set_id=".$tiebreak_set->id."&msg=$msg");

</%init>

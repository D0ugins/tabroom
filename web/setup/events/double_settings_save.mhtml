<%args>
	$tourn
	$double_entry => undef
	$double_max   => undef
</%args>
<%init>

	use Data::Dumper;

	if ($double_entry eq "max_events" && $double_max < 1) { 
		my $err = "You are setting double entry to allow a max of 0 entries.  That means nobody can enter your tournament.  Please try again.";
		$m->redirect("/setup/events/double_entry.mhtml?err=$err");
	} elsif ($double_entry eq "max_events") { 
		$tourn->setting("double_max", $double_max);
		$tourn->setting("double_entry", $double_entry);
	} else { 
		$tourn->setting("double_max", 0);
		$tourn->setting("double_entry", $double_entry);
	}

	foreach my $pattern ($tourn->patterns) { 

		$pattern->name($ARGS{"name_".$pattern->id});
		$pattern->type($ARGS{$pattern->id});
		$pattern->max($ARGS{"max_".$pattern->id});

		if ($ARGS{$pattern->id."_exclude"}) { 

			my $ref;
			
			eval{ $ref = JSON::decode_json($pattern->exclude); }; 

			my %excludeds = ();
			
			%excludeds = %{$ref} if $ref;

			$excludeds{$ARGS{$pattern->id."_exclude"}} = 1;

			$pattern->exclude(JSON::encode_json(\%excludeds));

		} elsif ($ARGS{$pattern->id."_exclude_same_pattern"}) { 

			my %excludeds = %{JSON::decode_json($pattern->exclude) } if $pattern->exclude;

			$excludeds{$ARGS{$pattern->id."_exclude_same_pattern"}} = "same_pattern_only";

			$pattern->exclude(JSON::encode_json(\%excludeds));

		}

		$pattern->update;

	}

	my $msg = "Event double-entry group settings saved";
	$m->redirect("/setup/events/double_entry.mhtml?msg=$msg");

</%init>

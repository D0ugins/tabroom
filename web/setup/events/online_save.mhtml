<%args>
	$person
	$person_settings
	$tourn
	$tourn_settings
	$event_id
	$scope => undef
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id);

	my $now = DateTime->now();

	my %event_settings = $event->all_settings();

	my @settings = (
		"online",
		"online_mode",
		"online_public",
		"online_support",
		"online_prepend_role",
		"online_entry_display",
		"online_judge_display"
	);

	foreach my $setting (@settings) {

		my $value = $ARGS{$setting};

		if ($value eq $event_settings{$setting}) {

		} else {

			$value = 0 if $value eq "none";
			$value = 0 unless $value;

			my $description = "Setting $setting changed to $value";

			if ($scope) {
				$description .= " and events in $scope included";
			}

			Tab::ChangeLog->create({
				type        => 'tabbing',
				event       => $event->id,
				tourn       => $tourn->id,
				person      => $person->id,
				description => $description,
				created     => $now
			});

			$event->setting($setting, $value);
		}
	}

	my @text_fields = (
		"online_instructions"
	);

	foreach my $text (@text_fields) {

		$ARGS{$text} = $m->comp(
			"/funclib/save_editor.mas",
			text => $ARGS{$text}
		);

		if ($ARGS{$text} eq $event_settings{$text}) {

		} else {

			if ($ARGS{$text}) {
				$event->setting($text, "text", $ARGS{$text});
			} else {
				$event->setting($text, 0);
			}

			my $description = "Setting $text changed to $ARGS{$text}";

			if ($scope) {
				$description = " and events in $scope included";
			}

			Tab::ChangeLog->create({
				type        => 'tabbing',
				event       => $event->id,
				tourn       => $tourn->id,
				person      => $person->id,
				description => $description,
				created     => $now
			});
		}
	}

	if ($scope eq "cat") {

		foreach my $other (Tab::Event->search(category => $event->category->id)) {
			next if $other == $event;
			$other->setting('online_instructions', 'text', $ARGS{"online_instructions"});
			$other->setting('online_support', $ARGS{"online_support"});
		}

	} elsif ($scope eq "type") {

		foreach my $other ($tourn->events(type => $event->type)) {
			next if $other == $event;
			$other->setting('online_instructions', 'text', $ARGS{"online_instructions"});
			$other->setting('online_support', $ARGS{"online_support"});
		}

	} elsif ($scope eq "tourn") {

		foreach my $other ($tourn->events) {
			next if $other == $event;
			$other->setting('online_instructions', 'text', $ARGS{"online_instructions"});
			$other->setting('online_support', $ARGS{"online_support"});
		}
	}

	my $msg = "Settings saved";

	$m->redirect("online.mhtml?event_id=".$event->id."&msg=$msg");

</%init>

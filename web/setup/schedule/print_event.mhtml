<%args>
	$tourn
	$tourn_settings
	$session
	$event_id => undef
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id);
	my $name = $event->abbr;
	$name =~ s/[\W_]//g;

    my $filename = "EventSchedule-".$name."-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;

    $m->comp(
		"/funclib/printout.mas",
			tourn    => $tourn,
			filename => $filename,
			head     => 1,
			array    => 2
	);

    open (TEXOUT, ">>$filepath.tex");


	print TEXOUT "\\hfill \\textbf{\\huge ". Tab::texify($event->name) ." Schedule } \\hfill \n";
	print TEXOUT "\\medskip\n";
	print TEXOUT "\\newline\n";
	print TEXOUT "\\strut \\hfill \\textsb{\\Large Times in ". Tab::tzname($tourn->tz) ."} \\hfill \n";
	print TEXOUT "\\bigskip\n";
	print TEXOUT "\\newline\n";

	print TEXOUT "\\normalsize\n";

	my $tabular = "\\begin{tabular}{p{.5in}p{1in}p{1in}p{1.75in}p{1.75in}}\n";
	my $switch;

	print TEXOUT $tabular;
	print TEXOUT "\\rowcolor[rgb]{1,.95,.72}\[5.5pt\]\[5.5pt\]\n";
	print TEXOUT "Rnd & Label & Type & Timeslot Start & Round Start";
	print TEXOUT "\\end{tabular}\n";
	print TEXOUT "\\newline\n";

	foreach my $round (sort {$a->name <=> $b->name} $event->rounds) {

		 print TEXOUT $tabular;
		 print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n" unless ($switch++ % 2);

		 print TEXOUT "{\\large ".$round->name." } & ";
		 print TEXOUT Tab::texify($round->label)." & ";
		 print TEXOUT Tab::texify(ucfirst($round->type))." & ";

		 print TEXOUT "\\hspace{1mm} ";

		 print TEXOUT $m->comp("/funclib/showtime.mas",
		 		dt     => $round->timeslot->start,
				return => "yes",
				length => 'day',
				tz     => $tourn->tz)." & ";

		 print TEXOUT "\\hspace{1mm} ";

		 print TEXOUT $m->comp("/funclib/showtime.mas",
		 		dt     => $round->start_time,
				return => "yes",
				length => 'day',
				tz     => $tourn->tz);

		 print TEXOUT "\\end{tabular}\n";
		 print TEXOUT "\\newline\n";
	}

    $m->comp(
		"/funclib/printout.mas",
			tourn    => $tourn,
			filename => $filename,
			tail     => 1
	);

</%init>

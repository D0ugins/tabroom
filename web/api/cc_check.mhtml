<%args>
	$room_id   => undef
	$person_id => undef
	$tourn_id  => undef
</%args>
<%init>

    $m->clear_buffer();
    $r->content_type('application/json');

	my %sections;
	my $done;

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select permission.tag, person.first, person.last
			from permission, person
		where permission.person = ?
			and permission.person = person.id
			and permission.tourn = ?
	");

	$sth->execute($person_id, $tourn_id);

	my ($permission, $first, $last) = $sth->fetchrow_array();

	$sth->finish();

	if ($permission) {

		my %output = (
			allowed  => JSON::true,
			type     => "admin",
			level    => $permission,
			name     => "Tab ".$first." ".$last,
			fullname => $first." ".$last
		);

		$m->print(JSON::encode_json(\%output));
		$m->abort();
	}

	$sth = $dbh->prepare("
		select
			judge.id, judge.first, judge.last, event.abbr, ballot.chair, panel.id, room.name

		from panel, ballot, round, judge, event, room

		where room.api = ?
			and room.id         = panel.room
			and panel.round     = round.id
			and round.event     = event.id
			and round.published = 1
			and panel.id        = ballot.panel
			and ballot.audit   != 1
			and ballot.judge    = judge.id
			and judge.person    = ?
	");

	$sth->execute($room_id, $person_id);

	my (
		$judge_id, $judge_first, $judge_last, $event_abbr, $chair, $panel_id, $room_name
	) = $sth->fetchrow_array();

	if ($judge_id) {

		if ($chair) {
			$chair = JSON::true;
		} else {
			$chair = JSON::false;
		}

		unless ($done++) {
			my %output = (
				allowed   => JSON::true,
				event     => $event_abbr,
				type      => "judge",
				judge_id  => $judge_id,
				chair     => $chair,
				name      => "Judge ".$judge_last,
				fullname  => $judge_first." ".$judge_last
			);

			$m->print(JSON::encode_json(\%output));
		}

		$sections{$panel_id}{"tag"} = "judge";
		$sections{$panel_id}{"judge"} = $judge_id;
		$sections{$panel_id}{"desc"} = "Entered $room_name";
	}

	$sth->finish();

	$sth = $dbh->prepare("
		select
			entry.id, entry.code, event.abbr, student.first, student.last, panel.id, room.name

		from panel, ballot, round, entry, entry_student es, student, event, room

		where room.api = ?

			and room.id         = panel.room
			and panel.round     = round.id
			and round.published = 1
			and round.event     = event.id
			and panel.id        = ballot.panel
			and ballot.audit    != 1
			and ballot.entry    = entry.id
			and entry.id        = es.entry
			and es.student      = student.id
			and student.person  = ?
	");

	$sth->execute($room_id, $person_id);

	my (
		$entry_id, $entry_code, $event, $student_first, $student_last, $epanel_id, $eroom_name
	) = $sth->fetchrow_array();

	$sth->finish();

	if ($entry_id) {

		unless ($done++) {

			my %output = (
				allowed   => JSON::true,
				event     => $event,
				person_id => $person_id,
				type      => "entry",
				entry_id  => $entry_id,
				name      => "Entry ".$entry_code." ".$student_first,
				fullname  => $student_first." ".$student_last
			);

			$m->print(JSON::encode_json(\%output));

		}

		$sections{$epanel_id}{"tag"} = "entry";
		$sections{$epanel_id}{"entry"} = $entry_id;
		$sections{$epanel_id}{"desc"} = "Entered $eroom_name";
	}

	if (keys %sections) {

		foreach my $id (sort keys %sections) {

			my $tag = $sections{$id}{"tag"};

			my $log = Tab::CampusLog->create({
				person      => $person_id,
				tag         => "panel",
				tourn       => $tourn_id,
				panel       => $id,
				$tag        => $sections{$id}{$tag},
				description => " Entered ".$sections{$id}{"desc"}
			});
		}
	}

	$dbh->disconnect();

	unless ($done) {
		my %output = (
			allowed  => JSON::false,
			fullname => "No soup for you!"
		);

		$m->print(JSON::encode_json(\%output));
	}

</%init>

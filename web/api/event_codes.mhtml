<%init>

    use feature qw(switch);

    #friggin Perl
    no warnings 'experimental::smartmatch';
    no warnings 'uninitialized';
    use Tab::NSDACategory;

    my @speech_categories =
        sort {$a->name cmp $b->name}
        Tab::NSDACategory->search( type => 's');

    my @debate_categories =
        sort {$a->id cmp $b->id}
        Tab::NSDACategory->search( type => 'd');

	my $dbh = Tab::DBI->db_Main();

	my ($new_events, $quoi)  = $m->comp(
		"/funclib/nsda/api_client.mas",
		path => "/points/categories"
	);

	my %translation;
	my %style;

	foreach my $nsda_cat (Tab::NSDACategory->retrieve_all) {

		if ($nsda_cat->type eq "s") {

			given ($nsda_cat->code) {

				when (1)  { $translation{$nsda_cat} = 202; }	# Extemporaneous
				when (2)  { $translation{$nsda_cat} = 208; }	# Informative
				when (7)  { $translation{$nsda_cat} = 203; } 	# Original Oratory
				when (11) { $translation{$nsda_cat} = 209; }	# Declamation
				when (21) { $translation{$nsda_cat} = 206; }	# Duo Interp
				when (23) { $translation{$nsda_cat} = 205; }	# Humorous Interp
				when (38) { $translation{$nsda_cat} = 210; }	# Commentary
				when (66) { $translation{$nsda_cat} = 211; }	# Impromptu
				when (81) { $translation{$nsda_cat} = 212; }	# Storytelling
				when (86) { $translation{$nsda_cat} = 213; }	# Expository
				when (87) { $translation{$nsda_cat} = 204; }	# Dramatic Interp
				when (89) { $translation{$nsda_cat} = 214; }	# Prose
				when (90) { $translation{$nsda_cat} = 215; }	# Poetry
				when (91) { $translation{$nsda_cat} = 207; }	# Program Interp/POI
				when (28) { $translation{$nsda_cat} = 207; }	# Program Interp/POI
				default   { $translation{$nsda_cat} = 201; }	# Other Speech
			}

			$style{$nsda_cat} = "speech";

		} elsif ($nsda_cat->type eq "d") {

			given ($nsda_cat->code) {
                when (1)	{ $translation{$nsda_cat} = 102;}		# Lincoln-Douglas Debate
                when (2)	{ $translation{$nsda_cat} = 103;}		# Policy Debate
                when (3)	{ $translation{$nsda_cat} = 104;}		# Public Forum Debate
                when (4)	{ $translation{$nsda_cat} = 109;}		# Mock Trial
                when (5)	{ $translation{$nsda_cat} = 107;}		# Parliamentary Debate
                when (6)	{ $translation{$nsda_cat} = 106;}		# Extemporaneous Debate
                when (11)	{ $translation{$nsda_cat} = 105;}		# World Schools Debate
                when (15)	{ $translation{$nsda_cat} = 108;}		# Big Questions Debate
				default     { $translation{$nsda_cat} = 101;}   	# Other Debate
			}

			$style{$nsda_cat} = "debate";
		}
	}

	my $delete_sth = $dbh->prepare("
		delete from nsda_event_category
	");

	$delete_sth->execute();

	my $insert_sth = $dbh->prepare("
		insert into nsda_event_category (id,name,type,code,national) values (?, ?, ?, ?, ?)
	");

	foreach my $event (@{$new_events}) {

		next if $event->{type} eq "service";
		next if $event->{type} eq "other";

		$insert_sth->execute(
			$event->{id},
			$event->{description},
			substr($event->{type}, 0, 1),
			$event->{id},
			$event->{main}
		);

		$m->print("<p>Created category ".$event->{description}."</p>");
		$m->flush_buffer();
	}

	my $sth = $dbh->prepare("
		update event, event_setting set event_setting.value = ?
			where event_setting.value = ?
			and event_setting.tag = 'nsda_event_category'
			and event_setting.event = event.id
			and event.type = ?
	");

	foreach my $key (keys %translation) {
		$m->print("<p>Translating event $key to ".$translation{$key}."</p>");
		$m->flush_buffer();
		$sth->execute($translation{$key}, $key, $style{$key});
	}


</%init>

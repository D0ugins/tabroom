<%args>

</%args>
<%init>

	$m->clear_buffer();

	my $counter;
	my $thousands;

	my @persons = Tab::Person->retrieve_all();

	my %emails = map {$_->email => $_} @persons; 

	foreach my $person (@persons) { 

		if ($counter++ > 1000) { 
			$thousands++;
			undef $counter;
			$m->print("<p>".($thousands * 1000)." accounts complete Doing person $person now</p>");
			$m->flush_buffer();
		}

		my $change; 

		my $phone = $person->phone; 
		$phone =~ s/[\D_]//g;
		$person->phone($phone);

		my $email = $person->email;
		$email =~ s/.co$/.com/;
		$email =~ s/.con$/.com/;
		$email =~ s/.comm$/.com/;
		$email =~ s/.or$/.org/;
		$email =~ s/.orh$/.org/;
		$email =~ s/.og$/.org/;
		$email =~ s/.ede$/.edu/;
		$email =~ s/.edi$/.edu/;
		$email =~ s/.sdu$/.edu/;
		$email =~ s/gnail.com$/gmail.com/;

		#begone, whitespace!
		$email =~ s/\s+//g;

		if ( ($person->email ne $email) && $emails{$email}) { 

			my $merge_id = $emails{$email}->id;

			$m->print("<p style='padding-left:16px;'>MERGER CANDIDATE: Target $merge_id $email, mergee $person ".$person->email."</p>");
			$m->flush_buffer();

			$m->comp("/user/admin/person_merge_save.mhtml", 
				person    => $emails{'palmer@tabroom.com'},
				prefer_id => $merge_id,
				merge_id  => $person,
				return    => "yasqueen"
			);

			$m->print("<p style='padding-left:16px;'>MERGER COMPLETE. GO VOLTRON!</p>");
			$m->flush_buffer();

		} else { 
			$person->email($email);
			$person->update();
		}

	}

	$m->print("<h5>Yeah I'm done with this bullshit</h5>");
	$m->flush_buffer();

</%init>

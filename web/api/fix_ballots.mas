<%args>
	$tourn_id => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	$m->clear_buffer();
	$m->print("<h3>It begins</h3>");
	$m->print("<pre>");
	$m->flush_buffer();

	my $limit = " where tourn.id = $tourn_id " if $tourn_id && $tourn_id == int($tourn_id);

	my $tourn_sth =  $dbh->prepare("
		select tourn.id, tourn.name
		from tourn
		$limit
		order by tourn.id desc
	");

	my $debate_sth = $dbh->prepare("
		select event.id, event.abbr, round.id, round.name, panel.id, panel.timestamp,
			b1.id, b1.side, b1.entry,
			b2.id, b2.side, b2.entry

		from event, round, panel, ballot b1, ballot b2

		where event.tourn = ? 
			and event.type = 'debate'
			and event.id = round.event
			and round.id = panel.round
			and panel.id = b1.panel
			and panel.id = b2.panel
			and b2.judge = b1.judge
			and b2.side = b1.side
			and b2.speakerorder = b1.speakerorder
			and b1.entry != b2.entry
			and b1.id < b2.id

		group by panel.id
	");

	my $speech_sth = $dbh->prepare("
		select event.id, event.abbr, round.id, round.name, panel.id, panel.timestamp,
			b1.id, b1.speakerorder, b1.entry,
			b2.id, b2.speakerorder, b2.entry

		from event, round, panel, ballot b1, ballot b2

		where event.tourn = ? 
			and (event.type = 'speech' or event.type = 'congress')
			and event.id = round.event
			and round.id = panel.round
			and panel.id = b1.panel
			and panel.id = b2.panel
			and b2.judge = b1.judge
			and b2.speakerorder = b1.speakerorder
			and b1.entry != b2.entry
			and b1.id < b2.id

		group by panel.id
	");

	$tourn_sth->execute();

	$m->print("\t event \t \t EA \t rid \t\t rd \t panid \t\t panel_timestamp \t ");
	$m->print("b1_id - sd - b1_entry   \t\t ");
	$m->print("b2_id - sd - b2_entry   \t\t ");
	$m->print("\n");

	while (my ($tourn_id, $tourn_name) = $tourn_sth->fetchrow_array()) { 

		Tab::debuglog("Doing $tourn_id");

		my $done;
		$debate_sth->execute($tourn_id);

		while ( 
			my ( $event_id, $event_abbr,
				$round_id, $round_name, $panel_id, $panel_timestamp,
				$b1_id, $b1_side, $b1_entry, $b2_id, $b2_side, $b2_entry
			) = $debate_sth->fetchrow_array()
		) { 

			$m->print("TOURNAMENT $tourn_id $tourn_name\n") unless $done++;

			$m->comp("/panel/manipulate/zero_sides.mas", panel_id => $panel_id);

			$m->print("$event_id   \t $event_abbr \t $round_id  \t $round_name \t $panel_id \t $panel_timestamp \t ");
			$m->print("$b1_id - $b1_side - $b1_entry  \t ");
			$m->print("$b2_id - $b2_side - $b2_entry  \t ");
			$m->print("$tourn_name");
			$m->print("\n");
		}

		$debate_sth->finish();
		$speech_sth->execute($tourn_id);

		while ( 
			my ($event_id, $event_abbr, 
				$round_id, $round_name, $panel_id, $panel_timestamp,
				$b1_id, $b1_side, $b1_entry, $b2_id, $b2_side, $b2_entry
			) = $speech_sth->fetchrow_array()
		) { 

			$m->print("TOURNAMENT $tourn_id $tourn_name\n") unless $done++;
			$m->comp("/panel/manipulate/zero_order.mas", panel_id => $panel_id);

			$m->print("$event_id   \t $event_abbr \t $round_id  \t $round_name \t $panel_id \t $panel_timestamp \t ");
			$m->print("$b1_id - $b1_side - $b1_entry \t ");
			$m->print("$b2_id - $b2_side - $b2_entry \t ");
			$m->print("\n");
		}

		$speech_sth->finish();
			$m->flush_buffer();

	}

	$tourn_sth->finish();

	$dbh->disconnect();

</%init>

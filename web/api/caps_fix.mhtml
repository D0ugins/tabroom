<%args>


</%args>
<%init>

	use utf8;

	$m->clear_buffer;

	use Encode qw(decode encode);
	use Data::Dumper;

	$m->print("<h4>Checking chapters</h4>");
	$m->flush_buffer();

	my $counter;

	foreach my $chapter (Tab::Chapter->retrieve_all) { 

		my $chapter_name = $chapter->name;

		my $name = $chapter_name;
		$name =~ s/^\s+//;
		$name =~ s/\s+$//;
		
		next if $chapter_name eq $name;

		$m->print("Fixing $chapter $chapter_name to now be $name");
		$m->print("<br />");

		$chapter->name($name);
		$chapter->update();
	}

	$m->print("<h4>Checking students</h4>");
	$m->flush_buffer();

	foreach my $object ( 
		Tab::Student->retrieve_all() 
	) { 
		fix_shit($object);
	}

	$m->print("<h4>Checking judges</h4>");

	foreach my $object ( 
		Tab::Judge->retrieve_all()
	) { 
		fix_shit($object);
	}

	$m->print("<h4>Checking chapter judges</h4>");

	foreach my $object ( 
		Tab::ChapterJudge->retrieve_all()
	) { 
		fix_shit($object);
	}

	sub fix_shit {

		my $object = shift;

		my $object_first = $object->first;
		my $object_last = $object->last;

		my $first = $object_first;
		$first =~ s/^\s+//;
		$first =~ s/\s+$//;
		
		my $last = $object_last;
		$last =~ s/^\s+//;
		$last =~ s/\s+$//;

		if ($first eq uc($first) 
			&& length($first) > 1
			&& ($first !~ /\./)
		)  { 
			$first = ucfirst(lc($first));
		}

		if ($last eq uc($last)) { 
			$last = ucfirst(lc($last));
		}

		unless ($object_first eq $first && $object_last eq $last) { 
			$m->print("Fixing $object_first $object_last to now be $first $last");
			$m->print("<br />");

			$object->first($first);
			$object->first($last);
			$object->update();
		}

		return

	}

</%init>

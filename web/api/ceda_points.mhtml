<%args>
</%args>
<%init>

    my $now = DateTime->now();
    my $year = $now->year;

    if ($now->month > 6)  {
        $year++;
    }

    my $begin = DateTime->new(
        year  => ($year - 1),
        month => 7,
        day   => 1
    );

    my $stop = $now->clone;
	$stop->subtract(days => 1);

    my $dbh = Tab::DBI->db_Main();

    my $sth = $dbh->prepare("
        select tourn.id, tourn.name,
            CONVERT_TZ(tourn.start, '+00:00', tourn.tz) start,
            CONVERT_TZ(tourn.end, '+00:00', tourn.tz) end,
            event.id, event.name, event.level,
            count(distinct entry.id),
            ada.id, ceda.id

        from (tourn, event, entry, tourn_circuit)

            left join tourn_circuit ada
                on ada.tourn = tourn.id
                and ada.circuit = 103

            left join tourn_circuit ceda
                on ceda.tourn = tourn.id
                and ceda.circuit = 43

		where tourn.id = tourn_circuit.tourn
            and tourn_circuit.circuit in (103, 43)
            and tourn.start > ?
            and tourn.end < ?
            and tourn.hidden != 1
            and tourn.id = event.tourn
            and event.id = entry.event
            and entry.active = 1
			and not exists (
            	select result_set.id
				from result_set
				where result_set.label = 'CEDA Points'
				and result_set.event = event.id
			)
        group by event.id
    ");

    $sth->execute(
        DateTime::Format::MySQL->format_datetime($begin),
        DateTime::Format::MySQL->format_datetime($stop)
    );

	$m->clear_buffer();
	$m->print("<code>");

	while (
		my (
			$tourn_id, $tourn_name, $tourn_start, $tourn_end,
			$event_id, $event_name, $event_level,
			$entry_count, $ada, $ceda
		) = $sth->fetchrow_array()
	) {

		my $ada_status = "false";
		if ($ada) {
			$ada_status = "true";
		}

		$m->comp("/user/circuit/ndt_ceda_generator.mhtml",
			event_id   => $event_id,
			circuit_id => '43',
			came_from  => "return",
			ada        => $ada_status
		);

		$m->print("Generated results for $tourn_name event $event_name level $event_level <br />");
		$m->flush_buffer();
	}

	$m->abort();

</%init>


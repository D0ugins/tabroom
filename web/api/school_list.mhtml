<%args>
	$api_key        => undef
	$api_id         => undef
	$tourn_id       => undef
</%args>
<%init>

    $m->clear_buffer();
    $r->content_type('application/json');

	my $json = JSON->new->allow_nonref->convert_blessed->utf8->pretty;

	my ($person, $tourn) = $m->comp("login_api.mas",
		method    => "api_key",
		person_id => $api_id,
		api_key   => $api_key,
		tourn_id  => $tourn_id,
	);

	unless ($person && $tourn) {

		my %output = (
			error => "true",
			message => 'No valid API user or key sent'
		);

		$m->print($json->pretty->encode(\%output));
		$m->abort();
	}

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select school.id, school.name, school.state, 
			contact_name.value,
			contact_email.value,
			contact_number.value

		from school
			left join school_setting contact_name on contact_name.school = school.id and contact_name.tag='contact_name'
			left join school_setting contact_email on contact_email.school = school.id and contact_email.tag='contact_email'
			left join school_setting contact_number on contact_number.school = school.id and contact_number.tag='contact_number'

		where school.tourn = ? 

		and exists (
			select entry.id
			from entry
			where entry.school = school.id
		)
	");

	$sth->execute($tourn->id);

	my @output;

	while (
		my (
			$id, $name, $state, $contact, $email, $number
		) = $sth->fetchrow_array()
	) { 

		my %school = (
			"id"    => $id,
			"name"    => $name,
			"state"   => $state,
			"contact" => $contact,
			"email"   => $email,
			"number"  => $number
		);

		push @output, \%school;
	}

	$m->print($json->convert_blessed->utf8->encode(\@output));
	$m->abort();

</%init>


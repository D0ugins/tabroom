<%args>
	$person
	$panel_id
</%args>
<%init>

	my $panel = Tab::Panel->retrieve($panel_id);
	
	Tab::Judge->set_sql( panel_person => "
		select judge.*
		from judge, ballot
		where ballot.panel = ? 
		and ballot.judge = judge.id
		and judge.person = ?
	");

	my $judge = Tab::Judge->search_panel_person($panel->id, $person->id)->first;

	unless ($judge) { 

		my $msg = "You are not a judge on that section. ";
		$msg .= " If you think this is in error contact ";
		$msg .= " the tournament officials";

		$m->comp("abort.mas", message => $msg);
	}

	my $event = $panel->round->event;

	unless ($event->setting("judge_publish_results")) { 
		my $err = "This tournament is not using the judge publishing system";
		$m->redirect("ballot_confirm.mhtml?panel_id=".$panel->id."&judge_id=".$judge->id."&err=$err");
	}

	if ($panel->ballots( audit => 0 )) { 
		my $err = "There are still oustanding ballots in this section. ";
		$err .= " If you think this is in error please contact the tournament officials";
		$m->redirect("ballot_confirm.mhtml?panel_id=".$panel->id."&judge_id=".$judge->id."&err=$err");
	}

	$panel->publish(1);
	$panel->update();

	$m->comp("/funclib/blast_results.mas", 
		panel  => $panel
	);

	my $total_panels = scalar($panel->round->panels());

	my $published_panels = scalar(
		$panel->round->panels(
			publish => 1,
			bye     => 0
		)
	);

	if ($total_panels <= $published_panels) { 

		my $round = $panel->round;
	
		if ($event->setting("judge_publish_results") eq "all") { 
			$round->post_results(2);
		} else { 
			$round->post_results(1);
		}
		$round->update();
	}

	my $msg = "Panel results have been published";

	$m->redirect("ballot_confirm.mhtml?panel_id=".$panel->id."&judge_id=".$judge->id."&msg=$msg");

</%init>

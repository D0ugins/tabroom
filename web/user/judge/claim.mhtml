<%args>
	$person
	$chapter_judge_id => undef
	$judge_id         => undef
</%args>
<%init>

	if ($chapter_judge_id) {

		my $cj = Tab::ChapterJudge->retrieve($chapter_judge_id);

		my @admins;

		if ($cj > 0) {
			foreach my $admin ($m->comp("/funclib/chapter_admins.mas", chapter => $cj->chapter)) {

				push (@admins, $admin);

				if ($admin->id == $person->id) {

					$cj->person($person->id);
					$cj->update;

					Tab::Judge->set_sql( update_judges =>
						"update judge, school
							set judge.person = ?
							where judge.chapter_judge = ?
							and judge.school = school.id
							and school.chapter = ?
						"
					);

					Tab::Judge->sql_update_judges->execute($person->id, $cj->id, $cj->chapter->id);
					my $msg = "You have claimed this judge record as yours (as you are an admin of that team)";
					$m->redirect("search.mhtml?msg=$msg");
				}
			}
		}

		$cj->person_request($person->id);
		$cj->update;

		my $subject = "[TabRoom] ". $person->email." requests access to judge ".$cj->first." ".$cj->last;

		my $body = "The Tabroom user \n\n".$person->first." ".$person->last." (".$person->email.") \n";
		$body .= "\nhas requested online access to updates, ballots and texts for judge ".$cj->first." ".$cj->last."\n in your team roster.\n";

		$body .= "\n\nIf these are the same people, approve this request by logging into Tabroom and visiting\n\n";

		$body .= $Tab::url_prefix."/user/chapter/judges.mhtml?chapter_id=".$cj->chapter->id."\n" if $cj && $cj->chapter;
		$body .= "\n\nIf this is not authorized, you do not need to do anything.\n\n";

		foreach my $admin (@admins) {
			$m->comp("/funclib/send_email.mas", from => $person, to => $admin, subject => $subject, body => $body);
		}

		my $msg = "You have requested access to the judge ".$cj->first." ".$cj->last." from the team coaches.";

		$m->redirect("search.mhtml?msg=$msg");

	} elsif ($judge_id) {

		my $judge = Tab::Judge->retrieve($judge_id);

		unless ($judge && $judge->category) {
			my $err = "No such judge exists connected to a tournament";
			$m->redirect("search.mhtml?err=$err");
		}

		foreach my $admin ($m->comp("/funclib/tourn_admins.mas",
			admin => 1,
			tourn => $judge->category->tourn)
		) {

			if ($admin->id == $person->id) {

				$judge->person($person->id);
				$judge->update;

				my $msg = "You have claimed this judge record as yours (as you are an admin of that tournament)";
				$m->redirect("search.mhtml?msg=$msg");
			}

		}

		$judge->person_request($person->id);
		$judge->update;

		my $msg = "You have requested access to the judge ".$judge->first." ".$judge->last." from the tournament administrators.";

		$m->redirect("search.mhtml?msg=$msg");

	}


</%init>

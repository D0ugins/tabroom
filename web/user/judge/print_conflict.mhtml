<%args>
	$person
	$judge_id    => undef
</%args>
<%init>

	use POSIX;

	my $judge = Tab::Judge->retrieve($judge_id) if $judge_id;

	$m->abort unless $judge
		&& $judge->person
		&& $judge->person == $person;

	my $category = $judge->category;
	my $tourn = $category->tourn;

    Tab::Entry->columns(TEMP => "full_names");
    Tab::Entry->columns(TEMP => "event_name");
    Tab::Entry->columns(TEMP => "school_name");
    Tab::Entry->columns(TEMP => "school_id");
    Tab::Entry->columns(TEMP => "event_abbr");

    Tab::Entry->set_sql( conflict_list => '
        select entry.*,
            event.name as event_name, event.abbr as event_abbr,
            school.id as school_id, school.name as school_name,
        GROUP_CONCAT(CONCAT(student.first," ",student.last) SEPARATOR ", " )as full_names

        from (entry, event)

        left join entry_student es on es.entry = entry.id
        left join student on es.student = student.id
        left join school on entry.school = school.id

        where entry.event = event.id
        and event.category = ?
        and entry.active = 1
        group by entry.id
        order by school.name, event.name, entry.name
    ');

	my @entries = Tab::Entry->search_conflict_list($category->id);

	my $name = $judge->first."-".$judge->last;

	$name =~ s/[\W_]//g;

	my $filename = "ConflictSheet-".$name;
	my $filepath = $Tab::file_root."/tmp/$filename";

	$m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		head     => 1,
		array    => '1.3',
		taller   => 1
	);

	my %school_name = map {$_->id => $_->name} $tourn->schools();

	my @strikes = $judge->strikes(
		conflict   => 1,
		registrant => 1
	);

	my %entry_strike = map {$_->entry => 1} @strikes;
	my %school_strike = map {$_->school => 1} @strikes;

	open (TEXOUT, ">>$filepath.tex");

		print TEXOUT "\\strut \\hfill {\\large \\centering \\bf Conflict Sheet for ";
		print TEXOUT Tab::texify($judge->first." ".$judge->last);
		print TEXOUT Tab::texify(" (".$judge->school->name.") ") if $judge->school;
		print TEXOUT Tab::texify(" (HIRE) ") unless $judge->school;
		print TEXOUT "} \\hfill \\strut\n";
		print TEXOUT "\\smallskip \\newline \n";

		print TEXOUT "\\strut \\hfill \\textsb{ Conflicts are marked with a strike through } \\hfill \\strut";
		print TEXOUT "\\smallskip \\newline \n";

		my $par = "\\begin{tabular}{|p{1.6in}p{1.6in}|}\n";
		my %done;
		my $count = 0;

		my $judge_school;
		$judge_school = $judge->school if $judge->school;

		while (@entries) {

			my $entry = shift @entries;

			my $format;
			if ($entry_strike{$entry}
				|| $judge_school == $entry->school
				|| $school_strike{$entry->school}
			) {
				$format = "\\sout{ ";
			}

			if ($count == 41) {
				print TEXOUT "\\end{minipage}\n";
				$count = 0;
			}

			if ($count == 0)  {
				print TEXOUT "\\begin{minipage}{3.25in}\n";
			}

			print TEXOUT $par;
			print TEXOUT "\\hline\n";
			print TEXOUT "\\truncate{1.6in}{";
			print TEXOUT $format;
			print TEXOUT Tab::texify(Tab::short_name($entry->school_name));
			print TEXOUT "\\hfill -" if $format;
			print TEXOUT "}";
			print TEXOUT " } " if $format;
			print TEXOUT " & ";
			print TEXOUT "\\truncate{1.6in}{";
			print TEXOUT $format;
			print TEXOUT Tab::texify($entry->name);
			print TEXOUT "\\hfill -" if $format;
			print TEXOUT "}";
			print TEXOUT " } " if $format;
			print TEXOUT "\\\\ \\hline\n";
			print TEXOUT "\\end{tabular}\n";
			print TEXOUT "\\newline\n";
			$count++;
		}

	print TEXOUT "\\end{minipage}\n";
	close TEXOUT;

	$m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		tail     => 1
	);

</%init>


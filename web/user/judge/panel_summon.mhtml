<%args>
	$target_id
	$person
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($target_id) {
		$m->print('{ "error": true, "message": "No Section ID sent"}');
		$m->abort();
	}

	my $panel = Tab::Panel->retrieve($target_id);

	unless ($target_id) {
		$m->print('{ "error": true, "message": "No Section found with the ID '.$target_id.'"}');
		$m->abort();
	}

	Tab::Judge->set_sql( panel_person => "
		select judge.*
		from judge, ballot
		where ballot.panel = ?
		and ballot.judge = judge.id
		and judge.person = ?
	");

	my $judge = Tab::Judge->search_panel_person($panel->id, $person->id)->first;

	unless ($judge) {
		$m->print('{ "error": true, "message": "You are not listed as a judge in that section"}');
		$m->abort();
	}

	Tab::Ballot->set_sql(outstanding => "
		select ballot.*
		from ballot, entry
		where ballot.panel = ?
		and ballot.entry = entry.id
		and entry.active = 1
		and ballot.audit != 1
	");

	if (Tab::Ballot->search_outstanding($panel->id)) {
		$m->print('{ "error": true, "message": "There are still unconfirmed ballots in this section"}');
		$m->abort();
	}

	my @followers;

	foreach my $entry ($m->comp("/funclib/panel_entries.mas", panel => $panel)) {
		push @followers, $m->comp("/funclib/entry_follower.mas", entry => $entry);
	}

	foreach my $judge ($m->comp("/funclib/panel_judges.mas", panel => $panel)) {
		push @followers, $m->comp("/funclib/judge_follower.mas", judge => $judge);
	}

	my %seen;
	@followers = grep { ! $seen{$_} ++ } @followers;

	my $room_name;

	if ($panel->room > 0) {
		$room_name = "Room ".$panel->room->name;
	} else {
		$room_name = "Section ".$panel->letter;
	}

	my $text = "The decision in $room_name is complete.  Return for announcements and feedback.";

    if (@followers) {
        $m->comp( "/funclib/send_notify.mas",
            from    => 'Tabroom.com <live@www.tabroom.com>',
            array   => \@followers,
            subject => $room_name." Result Ready",
            body    => $text
        );
    }

	my $msg = "Entries and judges have been blasted to return.";

	$m->print('{
		"error"   : false,
		"message" : "Entries and judges have been texted to return",
		"destroy" : "summonme",
		"reveal"  : "summoned"
	}');

	$m->abort();

</%init>

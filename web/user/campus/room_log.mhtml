<%args>
	$person
	$tourn_id      => undef
	$target_id     => undef
	$property_name => undef
	$setting_name  => undef
	$related_thing => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($target_id) {
		$m->print('{ "error": true, "message": "No Room ID sent"}');
		$m->abort();
	}

	if ($setting_name eq "test_private") {

		my $now = DateTime->now();
		$person->setting("campus_test_private", 0);
		$person->setting("campus_test_private", "date", $now);
		$m->abort();

	} elsif ($setting_name eq "test_public") {

		my $now = DateTime->now();
		$person->setting("campus_test_public", 0);
		$person->setting("campus_test_public", "date", $now);
		$m->abort();

	} elsif (not defined $setting_name) {
		$m->print('{ "error": true, "message": "No room type or person tag sent"}');
		$m->abort();
	}

	if ($setting_name eq "util") {

		Tab::CampusLog->create({
			person      => $person->id,
			tag         => "campus",
			tourn       => $tourn_id,
			uuid        => $target_id,
			description => " Entered ".$related_thing." from Tabroom"
		});

	} elsif ($setting_name eq "school") {

		Tab::CampusLog->create({
			person      => $person->id,
			tag         => "school",
			tourn       => $tourn_id,
			school      => $target_id,
			description => " Entered ".$related_thing." from Tabroom"
		});

	} elsif ($setting_name eq "panel") {

		my $type;
		my $id;
		my $judge_id;
		my $entry_id;

		if ($property_name) {
			($type, $id) = split(/\-/, $property_name);

			if ($type eq "entry") {
				$entry_id = $id;
			} elsif ($type eq "judge") {
				$judge_id = $id;
			}
		}

		my $log = Tab::CampusLog->create({
			person      => $person->id,
			tag         => "panel",
			tourn       => $tourn_id,
			panel       => $target_id,
			entry       => $entry_id,
			judge       => $judge_id,
			description => " Entered ".$related_thing." from Tabroom"
		});

	}

	$m->abort();

</%init>


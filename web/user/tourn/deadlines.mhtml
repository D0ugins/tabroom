<%args>
	$person
	$name             => undef
	$webname          => undef
	$existing_webname => undef
	$city             => undef
	$state            => undef
	$country          => undef
	$start            => undef
	$starttime        => undef
	$end              => undef
	$endtime          => undef
	$reg_start        => undef
	$reg_end          => undef
	$judge            => undef
	$drops            => undef
	$frozen           => undef
	$fines            => undef
	$error            => undef
	$clone            => undef
	$tz               => "UTC"
	$test             => undef
</%args>
<%init>

	my $return;
	my $return_con;

	$name =~ s/-/ /g;
	$name =~ tr/a-zA-Z0-9 //cd;

	# Yes this is heavy handed but the system puts the year of the tournament
	# in there already and people who put in anyway despite the clear message
	# saying not to RIGHT BELOW THE BOX and thus creating tournaments named
	# things like "The 2014 Wanker Invitational 2014" drive me UP THE DAMN WALL.
	#
	# Screw those people.

	my $now = DateTime->now;
	my $year = $now->year;

	$year = $year - 4;

	foreach (1 .. 8) {
		if (index($name, $year) != -1) {
			$return .= "Please do not include the year in your tournament name <br />";
			$return_con .= "," if $return_con;
			$return_con .= "name";
		}
	}

	unless (defined $test) {

		if (index(lc($name), "test") != -1) {
			$return .= "The tournament name includes the word Test.  Did you mean to mark it as a test tournament? </br>";
			$return_con .= "," if $return_con;
			$return_con .= "test";
		}

	}


    $name =~ s/  / /;
    $name =~ s/^\s+//;
    $name =~ s/\s+$//;

	unless ($name) {
		$return .= "You must choose a tournament name <br />";
		$return_con .= "," if $return_con;
		$return_con .= "name";
	}

	my $startdt;
	my $enddt;

	eval{
		$startdt = Tab::dtme($start, $starttime, $tz);
		$enddt = Tab::dtme($end, $endtime, $tz);
	};

	unless ($startdt && $startdt->year) {
		$return .= "You must enter a valid date for the start of your tournament: $start at $starttime<br />";
		$return_con .= "," if $return_con;
		$return_con .= "date";
	}

	unless ($enddt && $enddt->year) {
		$return .= "You must select a valid end date for your tournament:<br/>(For a one day tournament choose the same date as the start) $end <br />";
		$return_con .= "," if $return_con;
		$return_con .= "date";
	}

	if ($startdt && $startdt->year && $enddt && $enddt->year) {

		if ($startdt->year < 300 || $enddt->year < 300) {

			$return .= "Those tournament start or end dates are set to occur";
			$return .= " during the Roman Empire.  <br /><br />";
			$return .= "I doubt that's what you want.  <br /><br />";
			$return .= "Please use full years (2017 instead of just 17).";

			$return_con .= "," if $return_con;
			$return_con .= "date";

		} elsif ($startdt->year < 2014 || $enddt->year < 2014) {

			$return .= "The year you chose for your start or end date ";
			$return .= "is several years in the past.<br /> <br />";
			$return .= "I doubt that's what you want.  Try again?";

			$return_con .= "," if $return_con;
			$return_con .= "date";

		} elsif ($startdt->year > 2110 || $enddt->year > 2110) {

			$return .= "The year you chose for your start or end date is rather many";
			$return .= "years in the future.<br /> <br />";
			$return .= "I doubt that's what you want.  Try again?";

			$return_con .= "," if $return_con;
			$return_con .= "date";

		}
	}

	$webname = $existing_webname if $existing_webname;

	if ($webname) {

		#Remove all the whitespace
		$webname =~ s/ //g;

		#Remove all non-alphanumeric characters
		$webname =~ s/[^\w]//g;

		#Lowercase the whole thing
		$webname = lc($webname);

		#Remove the friggin year
		my $year = $now->year;
		$webname =~ s/$year++//g;
		$webname =~ s/$year++//g;
		$webname =~ s/$year++//g;

		$webname =~ s/  / /;
		$webname =~ s/^\s+//;
		$webname =~ s/\s+$//;

		if ($webname && $webname eq int($webname)) {
			$return .= "Web names cannot consist only of numbers<br />";
		}

		if ($webname) {

			my @webname_tourns = Tab::Tourn->search(
				webname => $webname
			);

			my $ok;

			if (@webname_tourns) {

				CONFLICT:
				foreach my $wt (@webname_tourns) {

					my @admins = Tab::Permission->search(
						person => $person->id,
						tourn  => $wt->id,
						tag    => "contact"
					);

					push @admins, Tab::Permission->search(
						person => $person->id,
						tourn  => $wt->id,
						tag    => "owner"
					);

					$ok++ if $person->site_admin;
					$ok++ if @admins;
					last CONFLICT if $ok;
				}

				$return .= "The web name ".$webname." is taken by someone else.  You must be listed as the tournament owner to reuse a webname." unless $ok;
				$return_con .= "," if $return_con;
				$return_con .= "webname";
			}

		}

	}

	unless ($city) {
		$return .= "You did not enter a city location for your tournament";
		$return_con .= "," if $return_con;
		$return_con .= "city";
	}

	if ($return) {
		$m->redirect("request.mhtml?name=$name&webname=$webname&city=$city&state=$state&country=$country&start=$start&end=$end&starttime=$starttime&endtime=$endtime&err=$return&tz=$tz&return_con=$return_con");
	}

	#Default DT object for the other deadlines, which therefore must include times.

	my $deadlinedt = $startdt->clone;

	$deadlinedt->set( hour => "17", minute => "00", second => "00") if $deadlinedt;

	if ($clone) {

		$m->comp("clone_tournament.mas",
			person  => $person,
			id      => $ARGS{"id"},
			clone   => $clone,
			name    => $name,
			start   => $startdt,
			end     => $enddt,
			webname => $webname,
			city    => $city,
			state   => $state,
			country => $country,
			tz      => $tz);

	}

	if ($reg_start) {
		$reg_start = Tab::DBI::date_inflate($reg_start);
	} elsif (not defined $error) {
		$reg_start = $deadlinedt->clone;
		$reg_start->subtract( months => 1);
	}

	if ($reg_end) {
		$reg_end = Tab::DBI::date_inflate($reg_end);
	} elsif (not defined $error) {
		$reg_end = $deadlinedt->clone;
		$reg_end->subtract( weeks => 1);
	}

	if ($frozen) {
		$frozen = Tab::DBI::date_inflate($frozen);
	} elsif (not defined $error) {
		$frozen = $deadlinedt->clone;
		$frozen->subtract( days => 3);
	}

	if ($judge) {
		$judge = Tab::DBI::date_inflate($judge);
	} else {
		$judge = $deadlinedt->clone;
		$judge->subtract( days => 3);
	}

	if ($drops) {
		$drops = Tab::DBI::date_inflate($drops);
	} else {
		$drops = $deadlinedt->clone;
		$drops->subtract( days => 3);
	}

	if ($fines) {

		$fines = Tab::DBI::date_inflate($fines);

	} else {

		$fines = $deadlinedt->clone;
		$fines->subtract( days => 3);

	}

	$test = 0 unless $test;


</%init>

	<div class="main">

		<form action="circuit.mhtml" method="post">

		<input type="hidden" name="name"		value="<% $name %>">
		<input type="hidden" name="webname"		value="<% $webname %>">
		<input type="hidden" name="city"		value="<% $city %>">
		<input type="hidden" name="state"		value="<% $state %>">
		<input type="hidden" name="country"		value="<% $country %>">
		<input type="hidden" name="start"		value="<% $start %>">
		<input type="hidden" name="starttime"	value="<% $starttime %>">
		<input type="hidden" name="end"			value="<% $end %>">
		<input type="hidden" name="endtime"		value="<% $endtime %>">
		<input type="hidden" name="tz"			value="<% $tz %>">
		<input type="hidden" name="test"		value="<% $test %>">

		<h2>Set registration deadlines</h2>

%       if ($error) {
			<p class="warning">
				<% $error %>
			</p>
%       }

		<table>

			<& "/funclib/datepicker.mas",
				id  => "reg_start",
				max => $start
			&>

			<tr class="<% ($reg_start || not defined $error) ? "odd" : "lirdrow" %>">

				<th>
					Online registration opens
				</th>

				<td class="rightalign">

					<input
						type  = "text"
						name  = "reg_start"
						id    = "reg_start"
						size  = "10"
						value = "<% ($reg_start) ? $reg_start->mdy('/') : "" %>"
					>
					at
					<& /funclib/timepicker.mas,
						size => 6,
						name => "reg_starttime",
						time => $reg_start
					&>

				</td>

			</tr>

			<& /funclib/datepicker.mas,
				id  => "reg_end",
				max => $start
			&>

			<tr class="<% ($reg_end || not defined $error) ? "row" : "lirdrow" %>">

				<th >
					New entries due by
				</th>

				<td class="rightalign">
					<input
						type  = "text"
						name  = "reg_end"
						id    = "reg_end"
						size  = "10"
						value = "<% ($reg_end) ? $reg_end->mdy('/') : "" %>"
					>

					at
					<& /funclib/timepicker.mas,
						size => 6,
						name => "reg_endtime",
						time => $reg_end
					&>
				</td>

			</tr>

			<tr class="row">

				<td colspan="2" class="explain rightalign">

					You can also later set up per-event deadlines once your
					tournament is approved.  After this date, entries cannot be
					added, but can be dropped, name-changed, or judges added.

				</td>

			</tr>

			<tr>
				<td colspan="2">
					<h5>Optional Deadlines:</h5>
				</td>
			</tr>


			<& /funclib/datepicker.mas, id =>"frozen" , max => $start &>

            <tr class="row">

				<th >
					Fees &amp; judge obligations frozen on
                </th>

                <td class="rightalign">
                    <input
						type  = "text"
						name  = "frozen"
						id    = "frozen"
						size  = "10"
						value = "<% ($frozen) ? $frozen->mdy('/') : "" %>"
					>
					at
					<& /funclib/timepicker.mas,
						size => 6,
						name => "frozentime",
						time => $frozen
					&>
                </td>

            </tr>

            <tr class="row">

				<td colspan="2" class="explain rightalign">
					After this date, drops will not delete the competitor from
					the system, and schools will still be charged entry fees
					and still be on the hook for judging for those entries.
				</td>

			</tr>

			<& /funclib/datepicker.mas, id =>"judge" , max => $start &>

            <tr class="row">

				<th>
					Judge registration deadline
                </th>

                <td class="rightalign">
                    <input
						type  = "text"
						name  = "judge"
						id    = "judge"
						size  = "10"
						value = "<% ($judge) ? $judge->mdy('/') : "" %>"
					>
					at
					<& /funclib/timepicker.mas, size => 6, name => "judgetime", time => $judge &>
                </td>

            </tr>

            <tr class="row">

				<td colspan="2" class="explain rightalign">
					Deadline for judge adds, alterations and drops online.
				</td>

			</tr>

			<& /funclib/datepicker.mas, id =>"drops" , max => $start &>

            <tr class="row">

				<th>
					Registrants can drop & namechange online until
                </th>

                <td class="rightalign">
                    <input
						type  = "text"
						name  = "drops"
						id    = "drops"
						size  = "10"
						value = "<% ($drops) ? $drops->mdy('/') : "" %>"
					>
					at
					<& /funclib/timepicker.mas, size => 6, name => "dropstime", time => $drops &>
                </td>

            </tr>

            <tr class="row">

				<td colspan="2" class="explain rightalign">

					Allow coaches to drop students and change names on their
					own.  I recommend you set this to just before you expect to
					panel or export the data to TRPC.  It'll reduce the hassle
					you have to deal with.

				</td>

			</tr>

			<& /funclib/datepicker.mas, id =>"fines", max => $start &>

            <tr class="row">

				<th>
					Automatically levy drop fines after
                </th>

                <td class="rightalign">

                    <input
						type  = "text"
						name  = "fines"
						id    = "fines"
						size  = "10"
						value = "<% ($fines) ? $fines->mdy('/') : "" %>"
					>
					at
					<& /funclib/timepicker.mas, size => 6, name => "finestime", time => $fines &>

                </td>

            </tr>

            <tr class="row">

				<td colspan="2" class="explain rightalign">
					After this point, additional drop fines (in addition to
					registration fees) apply to dropped students.  You can set
					drop fine amounts once your tournament is approved.
					Recommend you set this for after you'll have paneled, to
					encourage people to report drops early.
				</td>

			</tr>

			<tr class="liblrow">

				<td colspan="2" class="rightalign">
					<input  type="submit" value="  Next: Tournament Circuits">
					</form>
				</td>

			</tr>

		</table>

	</div>

	<div class="menu">

		<div class="sidenote">

			<h4>Tournament Setup</h4>

			<table>

            	<tr class="row">

					<td class="smaller" colspan="2">
						<% $name %>
					</td>
				</tr>

            	<tr class="row">

					<th class="smaller">
						Web Name
					</td>

					<td class="smaller">
						<% $webname %>
					</td>
				</tr>


            	<tr class="row">

					<th class="smaller">
						City/Location
					</td>

					<td class="smaller">
						<% $city %>
					</td>
				</tr>
            	<tr class="row">

					<th class="smaller">
						State/Country
					</td>

					<td class="smaller">
						<% $state ? $state."/" : "" %><% $country %>
					</td>
				</tr>

            	<tr class="row">

					<th class="smaller">
						Start
					</td>

					<td class="smaller">
						<% Tab::niceshortdt($startdt) %>
					</td>
				</tr>

            	<tr class="row">

					<th class="smaller">
						End
					</td>

					<td class="smaller">
						<% Tab::niceshortdt($enddt) %>
					</td>
				</tr>

			</table>

		</div>

	</div>


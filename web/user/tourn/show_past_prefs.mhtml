<%args>
	$person
	$tourn
	$judge_person_id => undef
</%args>
<%init>

	unless ($judge_person_id) {
		$m->comp("/funclib/abort.mas", message => "No valid judge found");
	}

	#find the chapter for this person at this tourney
	$judge_person_id = int($judge_person_id);

	my $chapter;

	#first see if this is an admin account
	my @admin = Tab::Permission->search(
		person => $person->id,
		tag    => "chapter"
	);

	push @admin, Tab::Permission->search(
		person => $person->id,
		tag    => "prefs"
	);

	foreach my $admin (@admin) {
		$chapter = $admin->chapter if $admin->chapter;
	}

	unless ($chapter) {
		$m->print("I could not find a school corresponding to your account.  Are you logged in?");
		$m->abort();
	}

	Tab::Rating->columns(TEMP => qw/entry_name/);
	Tab::Rating->set_sql(pull_ratings => "
		select rating.*, entry.name as entry_name
			from rating, entry, school, judge
		where rating.entry = entry.id
			and entry.school   = school.id
			and school.chapter = ?
			and rating.judge   = judge.id
			and judge.person   = ?
			and (rating.ordinal > 0 OR rating.rating_tier > 0)
	");

	my @ratings = Tab::Rating->search_pull_ratings($chapter, $judge_person_id);

	Tab::Rating->columns(TEMP => qw/entry_name/);
	Tab::Rating->columns(TEMP => qw/rating_tier_name/);

	Tab::Rating->set_sql(pull_tiered_ratings => "
		select rating.*, entry.name as entry_name, rating_tier.name as rating_tier_name
			from rating, entry, school, judge, rating_tier
		where rating.entry = entry.id
			and entry.school   = school.id
			and school.chapter = ?
			and rating.judge   = judge.id
			and judge.person   = ?
			and rating_tier.id = rating.rating_tier
	");

	my @tiered_ratings = Tab::Rating->search_pull_tiered_ratings($chapter, $judge_person_id);

	my $judge_person = Tab::Person->retrieve($judge_person_id);

</%init>

	<div class="main">

		<& "/funclib/tablesorter.mas", table => "ordinals" &>

		<h4>Your past ratings for <% $judge_person->first." ".$judge_person->last %></h4>

		<table id="ordinals">

			<thead>

			<tr class="yellowrow">

				<th>
					Tourney
				</th>
				<th>
					Entry
				</th>
				<th>
					Tier
				</th>
				<th>
					Ordinal
				</th>
				<th>
					Percentile
				</th>

			</tr>

			</thead>

			<tbody>

%			foreach my $rating (@ratings) {

				<tr 'class="ligrnrow"' : $switch++ % 2 >

					<td class="last smallish padless">
						<% $rating->entry->event->tourn->name %>
					</td>
					<td class="last smallish padless">
						<% $rating->entry_name %>
					</td>
					<td class="last smallish padless">
						<% $rating->rating_tier %>
					</td>
					<td class="last smallish padless">
						<% $rating->ordinal %>
					</td>
					<td class="last smallish padless">
						<% $rating->percentile %>
					</td>
				</tr>

%			}

%			foreach my $rating (@tiered_ratings) {

				<tr 'class="ligrnrow"' : $switch++ % 2 >

					<td class="last smallish padless">
						<% $rating->entry->event->tourn->name %>
					</td>
					<td class="last smallish padless">
						<% $rating->entry_name %>
					</td>
					<td class="last smallish padless">
						<% $rating->rating_tier_name %>
					</td>
					<td class="last smallish padless">
						<% $rating->ordinal %>
					</td>
					<td class="last smallish padless">
						<% $rating->percentile %>
					</td>
				</tr>

%			}

		</tbody>

	</table>

	</div>

    <div class="menu">

		<div class="sidenote">

			<h4>Return</h4>

			<a class="blue block" href="/index/paradigm.mhtml?judge_person_id=<% $judge_person_id %>">
				Back to Judge Paradigm
			</a>

		</div>

	</div>

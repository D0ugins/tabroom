<%args>
	$person
	$chapter_id
	$doit => undef
</%args>
<%init>

	my $chapter = Tab::Chapter->retrieve($chapter_id);

	my %students_by_name = ();
	
	foreach my $student ($chapter->students) { 

		$student->first(fixname($student->first));
		$student->middle(fixname($student->middle));
		$student->last(fixname($student->last));

		$student->update;

		unless ($student->first || $student->last || $student->entry_students) { 
			$student->delete;
		} else { 
			push @{$students_by_name{$student->first."-".$student->last}}, $student;
		}

	}

    sub fixname {

        my $string = shift;

        $string = ucfirst(lc($string)) if $string eq uc($string);
        $string = ucfirst(lc($string)) if $string eq lc($string);

        return $string;
    }   



	my $count;

	foreach my $key (keys %students_by_name) { 

		next if scalar @{$students_by_name{$key}} < 2;

		next unless $ARGS{$key} || $doit;

		my $dest = shift @{$students_by_name{$key}};

		foreach my $student (@{$students_by_name{$key}}) { 

			$m->comp("/funclib/student_merge.mas", 
				person      => $person,
				destination => $dest,
				mergee      => $student
			);
			$count++;
		}
	}

	if ($doit) {

		$m->print("Done");

	} else { 
		my $msg = "$count students de-duplicated.";
		$m->redirect("students.mhtml?chapter_id=$chapter_id&msg=$msg");
	}



</%init>

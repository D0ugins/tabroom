<%args>
	$person
	$chapter_id => undef
	$perms
</%args>
<%init>

	my $chapter =  Tab::Chapter->retrieve($chapter_id) if $chapter_id;

	unless ($chapter) { 
		$m->comp("/funclib/abort.mas", message => "No valid school ID number sent.  Go back and try again");
	}
	
	my $tz = $person->tz;
	$tz = "UTC" unless $tz;
	my $now = DateTime->now(time_zone => $tz);


	# Get the upload and create the file handle.
	my $req = Apache2::Request->new($r);

	my @csv_handles = $r->upload; 
	my $csv_file = $req->upload($csv_handles[0]);

	unless ($csv_file->type eq "text/csv" || $csv_file->type eq "application/csv") { 
		my $err = "No students imported.  You must upload a CSV file, not an Excel or other file.  <br /> <br /> Save the file in Excel as Comma-Separated Values and try again.  File type: ".$csv_file->type;
		$m->redirect("students.mhtml?chapter_id=$chapter_id&err=$err");
	}
	
	my $io = $csv_file->io;

	my @lines = <$io>;

	my $has_codes;

	my @students;

	foreach (@lines) { 
		$_ =~ s/[\r]+/\n/g;
		$_ =~ s/[\r\n]+/\n/g;
		$_ =~ s/[\n]+/\n/g;
		push @students, split (/\n/, $_);
	}

	ENTRY:
	foreach my $student (@students) { 

		my ($first_name, $middle_name, $last_name, $gender, $grad_year, $novice, $phonetic, $diet, $parent) 
			= split(/,/, $student);

		($first_name, $middle_name, $last_name, $gender, $grad_year, $novice, $phonetic, $diet, $parent) 
			= split(/;/, $student) unless $last_name;

		next if $first_name eq "First Name";
		next unless $first_name && $last_name;

		$gender = uc($gender);
		undef $gender unless $gender eq "M" || $gender eq "F";

		$grad_year =~ s/[\D_]//g;
		$grad_year = $now->year + 1 unless $grad_year;

		$novice = "1" if $novice && $novice ne "n" && $novice ne "N";
		$novice = "0" unless $novice;

		$student = Tab::Student->create({
			chapter   => $chapter_id,
			first     => $first_name,
			middle    => $middle_name,
			last      => $last_name,
			novice    => $novice,
			gender    => $gender,
			grad_year => $grad_year,
			phonetic  => $phonetic,
			diet      => $diet
		});

		if ($parent) { 
			$m->comp("follow.mhtml", 
				student_id  => $student->id,
				email       => $parent,
				perms       => $perms,
				person      => $person,
				return_only => 1
			);
		}

	}

	my $msg = scalar @students ." students imported into ". $chapter->name;
	$m->redirect("students.mhtml?chapter_id=$chapter_id&msg=$msg");

</%init>

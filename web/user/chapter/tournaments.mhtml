<%args>
	$person
	$person_settings
	$session
	$all        => undef
	$chapter_id => undef
</%args>
<%init>

	my $access = Tab::Permission->search(
		person  => $person,
		chapter => $chapter_id
	)->first;

	unless ($person->site_admin) {
		$m->abort() unless $access;
		$m->abort unless $chapter_id;
		$m->redirect("prefs.mhtml?chapter_id=$chapter_id")
			if $access->tag eq "prefs";
	}

	my $tz = $person->tz;
	$tz = "UTC" unless $tz;

	my $chapter = Tab::Chapter->retrieve($chapter_id);

	$m->abort unless $chapter;

	unless ($chapter && $chapter->level) {
		my $err = "Please fill in your institution's level before continuing";
		$m->redirect("/user/chapter/settings.mhtml?chapter_id=".$chapter->id."&err=$err");
	}

	my $now = DateTime->now;

	my $search_start = $now->clone;
	$search_start->subtract(days => 14);

	my $search_start_string = DateTime::Format::MySQL->format_datetime($search_start);

	my $now_string = DateTime::Format::MySQL->format_datetime($now);

	Tab::Tourn->columns(TEMP => "school_onsite");

	Tab::Tourn->set_sql("by_entered_tourn", "
		select distinct tourn.*, school.id as schoolid, school.onsite as school_onsite
			from (school, tourn)
			where school.chapter = ?
			and school.tourn = tourn.id
			and tourn.end > ?
			and tourn.hidden != 1

			and not exists (
				select tourn_setting.id
				from tourn_setting
				where tourn_setting.tag = 'ncfl'
				and tourn_setting.tourn = tourn.id
			)

			order by tourn.start, tourn.name
		"
	);

	my @existing_tourns = Tab::Tourn->search_by_entered_tourn($chapter->id, $search_start_string);

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select
			tourn.id, tourn.name, tourn.city, tourn.state, tourn.country,
				CONVERT_TZ(tourn.start, '+00:00', tourn.tz),
				CONVERT_TZ(tourn.end, '+00:00', tourn.tz),
				tourn.webname,
				CONVERT_TZ(tourn.reg_start, '+00:00', tourn.tz),
				CONVERT_TZ(tourn.reg_end, '+00:00', tourn.tz),
			group_concat(circuit.abbr SEPARATOR ',') as circuits

			from tourn, tourn_circuit, chapter_circuit, circuit

			where chapter_circuit.chapter = ?
				and chapter_circuit.circuit = tourn_circuit.circuit
				and tourn_circuit.tourn = tourn.id
				and tourn_circuit.circuit = circuit.id
				and tourn.hidden != 1
				and tourn.reg_end > NOW()
				and tourn.reg_start < NOW()

			and not exists (
				select tourn_setting.id
				from tourn_setting
				where tourn_setting.tag = 'closed_entry'
					and tourn_setting.value = 1
					and tourn_setting.tourn = tourn.id
			)

			and not exists (
				select tourn_setting.id
				from tourn_setting
				where tourn_setting.tag = 'nsda_nats'
					and tourn_setting.value = 1
					and tourn_setting.tourn = tourn.id
			)

			and not exists (
				select tourn_setting.id
				from tourn_setting
				where tourn_setting.tag = 'nsda_ms_nats'
					and tourn_setting.value = 1
					and tourn_setting.tourn = tourn.id
			)

			and not exists (
				select tourn_setting.id
				from tourn_setting
				where tourn_setting.tag = 'nsda_district'
					and tourn_setting.tourn = tourn.id
			)

			and not exists (
				select tourn_setting.id
				from tourn_setting
				where tourn_setting.tag = 'ncfl'
				and tourn_setting.tourn = tourn.id
			)

			group by tourn.id
			order by tourn.start, tourn.name
	");

	my %open_tourns;
	$sth->execute($chapter->id);

	while (
		my (
			$tourn_id, $tourn_name, $tourn_city, $tourn_state, $tourn_country,
			$tourn_start, $tourn_end, $tourn_webname,
			$tourn_reg_start, $tourn_reg_end,
			$circuits
		) = $sth->fetchrow_array()
	) {

		$open_tourns{$tourn_id}{"name"}     = $tourn_name;
		$open_tourns{$tourn_id}{"city"}     = $tourn_city;
		$open_tourns{$tourn_id}{"state"}    = $tourn_state;
		$open_tourns{$tourn_id}{"webname"}  = $tourn_webname;
		$open_tourns{$tourn_id}{"circuits"} = $circuits;

		$open_tourns{$tourn_id}{"state"} = $tourn_country
			unless $open_tourns{$tourn_id}{"state"};

		$open_tourns{$tourn_id}{"start_sort"} = $tourn_start;
		$open_tourns{$tourn_id}{"start_sort"} =~ s/[\D_]//g;
		$open_tourns{$tourn_id}{"reg_end_sort"} = $tourn_reg_end;

		$open_tourns{$tourn_id}{"start"} = substr($tourn_start, 5, 2)."/".substr($tourn_start, 8, 2);
		$open_tourns{$tourn_id}{"end"} = substr($tourn_end, 5, 2)."/".substr($tourn_end, 8, 2);

		$open_tourns{$tourn_id}{"reg_start"} = substr($tourn_reg_start, 5, 2)."/".substr($tourn_reg_start, 8, 2);
		$open_tourns{$tourn_id}{"reg_end"} = substr($tourn_reg_end, 5, 2)."/".substr($tourn_reg_end, 8, 2);

		$open_tourns{$tourn_id}{"reg_end"} =~ s/^0//;
		$open_tourns{$tourn_id}{"reg_end"} =~ s/\/0/\//;

		foreach my $tag ("start", "end", "reg_start", "reg_end") {
			$open_tourns{$tourn_id}{$tag} =~ s/^0//g;
			$open_tourns{$tourn_id}{$tag} =~ s/\/0/\//g;
		}

	}

	my $districts;

	if ($chapter->district) {
		($districts) = $m->comp(
			"/funclib/district_tourns.mas",
			district => $chapter->district,
			open     => 1,
			tabroom  => 1
		);

		if ($districts) {

			$open_tourns{$districts->id}{"name"}  = $districts->name;
			$open_tourns{$districts->id}{"start"} = $districts->start->month."/".$districts->start->day;
			$open_tourns{$districts->id}{"end"}   = $districts->end->month."/".$districts->end->day;

			$open_tourns{$districts->id}{"start_sort"} = 1;

			foreach my $weekend ($districts->weekends) {

				unless ($weekend->state eq $open_tourns{$districts->id}{state}) {
					$open_tourns{$districts->id}{state} .= ", " unless
						$open_tourns{$districts->id}{state};

					$open_tourns{$districts->id}{state} .= $weekend->state;
				}

				unless ($weekend->city eq $open_tourns{$districts->id}{city}) {
					$open_tourns{$districts->id}{city} .= ", " unless
						$open_tourns{$districts->id}{city};

					$open_tourns{$districts->id}{city} .= $weekend->city;
				}
			}

			$open_tourns{$districts->id}{circuits} = "NSDA";
		}
	}

</%init>

	<& "/user/menu.mas",
		person          => $person,
		person_settings => $person_settings,
		chapter         => $chapter
	&>

	<div class="main">

		<h2><% $chapter->name %>: Tournaments</h2>

		<&
			"tabbar.mas",
			chapter => $chapter,
			person  => $person,
			session => $session,
			whoami  => "tourn"
		&>

		<& /funclib/tablesorter.mas, table => "moi" &>

<%perl>

			my %used;

			if (@existing_tourns) {

				Tab::Round->columns(TEMP => "strikeschool");

				Tab::Round->set_sql( school_strikes => "
					select round.*, entry.school as strikeschool
						from round, round_setting, panel, ballot, entry, school
					where entry.school = school.id
						and school.chapter = ?
						and entry.id = ballot.entry
						and ballot.panel = panel.id
						and panel.bye != 1
						and panel.round = round.id
						and round.id = round_setting.round
						and round_setting.tag = 'strikes_published'
						and round.published != 1
						and round_setting.value = 1
					order by round.start_time
				");

				my @cards = Tab::Round->search_school_strikes($chapter->id);
				my %strike_cards = map {$_->strikeschool => 1} @cards;
</%perl>

				<span class="twothirds nospace">
					<h4>Existing tournament registrations</h4>
				</span>

				<span
					class="third nospace rightalign"
					id="moi_buttonarea"
				>
				</span>

				<table cellpadding="2" id="moi">

					<thead>

						<tr class="yellowrow">

							<th class="smallish">
								Dates
							</th>

							<th class="smallish">
								Name
							</th>

							<th class="smallish">
								Location
							</th>

							<th class="smallish">
								Due
							</th>

							<th class="nosort">
								Registration
							</th>

							<th class="nosort">
							</th>

						</tr>

					</thead>
					<tbody>
<%perl>

					foreach my $et (@existing_tourns) {

						next if $used{$et->id}++;

						unless ($et->schoolid) {

							my $sch = Tab::School->search(
								tourn   => $et->id,
								chapter => $chapter_id
							)->first;

							$et->schoolid($sch->id);
						}

						my $start = $et->start;
						my $end = $et->end;
						my $reg_end = $et->reg_end;

						$start->set_time_zone($tz);
						$end->set_time_zone($tz);
						$reg_end->set_time_zone($tz);
</%perl>

						<tr>

							<td class="smaller nowrap centeralign">
								<span class="hidden"><% $start->epoch %></span>
								<% Tab::niceshortdate($start) %>
								<% ($start->day != $end->day) ? " - ".Tab::niceshortdate($end) : "" %>
							</td>

							<td class="nospace">
								<a
									class="white padmore padtop padbottom smallish padleft"
									href="/user/enter/entry.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $et->id %>"
								><% $et->name %></a>
							</td>

							<td width="15%" class="smallish leftalign">
								<% $et->city ? $et->city."," : "" %>
								<% $et->state ? $et->state : $et->country %>
							</td>

							<td width="8%" class="centeralign smallish">
								<span class="hidden"><% $reg_end->epoch %></span>
								<% Tab::niceshortdate($reg_end) %>
							</td>

							<td class="centeralign nospace padleft padright">

%								if ($now < $end) {
									<a
										class="smallish buttonwhite bluetext hover invert"
										href="/user/enter/entry.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $et->id %>">
										Entries
									</a>
%								}

							</td>

							<td class="centeralign nospace padleft padright">
%								if ($et->id == $districts ){
									<a
										class	= "smallish buttonwhite greentext hover invert"
										href	= "/user/enter/nsda_roster_check.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $et->id %>">
										NSDA Eligibility
									</a>
									<br />
%								}
%								if ($strike_cards{$et->schoolid}) {

									<a
										href  = "/user/enter/strike_cards.mhtml"
										class = "smallish buttonwhite orangetext invert"
									>Strike Cards</a>

									<br />
<%perl>
								}

								my $onsited;

								if ( $et->school_onsite != 1 && $et->setting("onsite_registration")) {

									my $onsite_starts = $et->setting("onsite_starts");
									$onsite_starts->set_time_zone($tz) if $onsite_starts;

									my $onsite_ends = $et->setting("onsite_ends");
									$onsite_ends->set_time_zone($tz) if $onsite_ends;

									if ($onsite_ends > $now && $now > $onsite_starts && $end > $now) {
</%perl>
										<a
											class="smallish buttonwhite <% $et->school_onsite ? "greentext" : "redtext" %> invert hover"
											href="/user/enter/onsite.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $et->id %>">
											Confirm<% $et->school_onsite ? "ed" : ""%> Onsite
										</a>

										<br />
<%perl>
									}
								}

								unless ($onsited) {

									if ($now > $start && $now < $end) {
</%perl>
										<a
											class="smallish buttonwhite greentext hover invert"
											href="/user/enter/dashboard.mhtml?school_id=<% $et->schoolid %>"
										>
											Dashboard
										</a>
										<br />

%									} elsif ($now > $end) {
										<a
											class="smallish buttonwhite graytext hover invert"
											href="/user/results/report.mhtml?school_id=<% $et->schoolid %>">
											Results
										</a>
%									}
%								}

							</td>

						</tr>
%					}

					</tbody>
				</table>
%			}

%			if (%open_tourns) {

				<div class="full martopmuchmore nospace">

					<span class='twothirds nospace'>
						<h4>
							Tournaments open for registration
						</h4>
					</span>

					<span class="third rightalign nospace" id="open_tourns_buttonarea">
						<a
							onClick = "showIgnores();"
							class   = "buttonwhite bluetext hover fa-sm fa fa-eye"
							id      = "ignoreswitch"
							title   = "Show Hidden"
						>
						</a>

						<a
							onClick = "hideIgnores();"
							class   = "buttonwhite bluetext invert hover hidden fa-sm fa fa-eye-slash"
							id      = "ignorenotswitch"
							title   = "Hide Hidden"
						>
						</a>

					</span>

				</div>

				<& /funclib/tablesorter.mas, table => "open_tourns" &>

				<script>

					function ignoreTourn(clickObject) {
						var targetId  = $("#"+clickObject.id).attr("target_id");
						$("#"+targetId).addClass("hidden");
						$("#"+targetId).addClass("ignored");
						$("#"+targetId+"_ignoreme").addClass("hidden");
						$("#"+targetId+"_ignoremenot").removeClass("hidden");

						$("#open_tourns").trigger("applyWidgets");
						$("#open_tourns").trigger("update");
						$("#open_tourns").trigger('resort');
					}

					function revealTourn(clickObject) {
						var targetId  = $("#"+clickObject.id).attr("target_id");
						$("#"+targetId).removeClass("hidden");
						$("#"+targetId).removeClass("ignored");
						$("#"+targetId+"_ignoreme").removeClass("hidden");
						$("#"+targetId+"_ignoremenot").addClass("hidden");
						$("#open_tourns").trigger("applyWidgets");
						$("#open_tourns").trigger("update");
						$("#open_tourns").trigger('resort');
					}

					function showIgnores() {
						$(".ignored").removeClass("hidden");
						$("#ignoreswitch").addClass("hidden");
						$("#ignorenotswitch").removeClass("hidden");
						$("#open_tourns").trigger("applyWidgets");
					}

					function hideIgnores() {
						$(".ignored").addClass("hidden");
						$("#ignoreswitch").removeClass("hidden");
						$("#ignorenotswitch").addClass("hidden");
						$("#open_tourns").trigger("applyWidgets");
					}

				</script>

				<table id="open_tourns">

					<thead>

						<tr class="yellowrow">

							<th class="smaller nosort">
								Hide
							</th>

							<th class="smallish">
								Dates
							</th>

							<th class="smallish">
								Name
							</th>

							<th class="smallish">
								City
							</th>

							<th class="smallish">
								Location
							</th>
							<th class="smallish">
								Circuits
							</th>

							<th class="smallish">
								Reg Close
							</th>

							<th class="nosort">
							</th>
						</tr>

					</thead>
					<tbody>
<%perl>

					my %ignores = $m->comp("/funclib/tourn_ignores.mas", person => $person);

					foreach my $tourn_id (
						sort {
							$open_tourns{$a}{"start_sort"} <=> $open_tourns{$b}{"start_sort"}
							|| $open_tourns{$a}{"name"} cmp $open_tourns{$b}{"name"}
						} keys %open_tourns
					) {

						next if $used{$tourn_id}++;
</%perl>

						<tr
							id    = "<% $tourn_id %>"
							class = "<% $ignores{$tourn_id} ? "ignored hidden" : "" %>"
						>

							<td class="nospace centeralign">
								<a
									value         = "1"
									id            = "<% $tourn_id %>_ignoreme"
									property_name = "ignore"
									target_type   = "tourn"
									target_id     = "<% $tourn_id %>"
									onClick       = "postSwitch(this, 'ignore_switch.mhtml'); ignoreTourn(this);"
									class         = "<% $ignores{$tourn_id} ? "hidden" : "" %>
													 buttonwhite fa-sm fa fa-eye-slash redtext hover"
									title         = "Conceal this tournament"
								>
								</a>

								<a
									value         = "0"
									id            = "<% $tourn_id %>_ignoremenot"
									property_name = "unignore"
									target_type   = "tourn"
									target_id     = "<% $tourn_id %>"
									onClick       = "postSwitch( this, 'ignore_switch.mhtml'); revealTourn(this);"
									class         = "<% $ignores{$tourn_id} ? "" : "hidden" %>
													 buttonwhite fa-sm fa fa-eye greentext hover"
									title         = "Reveal tournament"
								>
								</a>
							</td>

							<td class="nowrap centeralign smaller">
								<span class="hidden"><% $open_tourns{$tourn_id}{start_sort} %></span>
								<%
									$open_tourns{$tourn_id}{start}
								%><% $open_tourns{$tourn_id}{start} ne $open_tourns{$tourn_id}{end}
									? "-".$open_tourns{$tourn_id}{end}
									: ""
								%>
							</td>

							<td class="smallish nospace">
								<a
									class="white padvert"
									href="/index/tourn/index?tourn_id=<% $tourn_id %>"
								>
									<% $open_tourns{$tourn_id}{name} %>
								</a>
							</td>

							<td class="smallish">
								<% $open_tourns{$tourn_id}{city} %>
							</td>

							<td class="centeralign smallish">
								<% $open_tourns{$tourn_id}{state} %>
							</td>

							<td class="centeralign smallish">
								<span class="limitwrap">
									<% $open_tourns{$tourn_id}{circuits} %>
								</span>
							</td>

							<td width="8%" class="centeralign smallish">
								<span class="hidden"><% $open_tourns{$tourn_id}{reg_end_sort} %></span>
								<%  $open_tourns{$tourn_id}{reg_end} %>
							</td>

							<td class="centeralign marno padless">
								<a
									class="smallish buttonwhite greentext smallish hover invert"
									href="/user/enter/create.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $tourn_id %>">
									Register
								</a>
							</td>

						</tr>
%					}

					</tbody>
				</table>
%			}

%			unless (%open_tourns || @existing_tourns) {

%				if ($m->comp('/funclib/chapter_circuits.mas', chapter => $chapter)) {

					<h4>No tournaments are currently open for registration</h4>

					<p>Your school can see tournaments from the following
					circuits.  If you want to see tournaments from additional
					circuits, sign up under the Circuits tab above.  </p>

					<table>

<%perl>

					foreach my $circuit ($m->comp('/funclib/chapter_circuits.mas', chapter => $chapter)) {

						my $now = DateTime->now(time_zone => $tz);

						my @tourns = $m->comp("/funclib/circuit_tourns.mas", circuit => $circuit, future => 1);

						my $next_tourn = $tourns[0] if @tourns;

</%perl>

						<tr class="row">

							<td>
								<% ($circuit->state) ? $circuit->state."/" : "" %><% $circuit->country  %>
							</td>

							<td>
								<a class="white" href="circuit.mhtml?circuit_id=<% $circuit->id %>">
									<% $circuit->name %>  (<% $circuit->state %> <% $circuit->country %>)
								</a>
							</td>

							<td>
								<% ($next_tourn) ? $next_tourn->name." opens ".Tab::niceshortdate($next_tourn->reg_start) : "" %>
							</td>

						</tr>
%					}

					</table>

%				} else {

					<h4>You must join a circuit</h4>

					<p>There are currently no tournaments open for registration
					because you are not set up to see any circuits at all.</p>

					<p>All tournaments are registered under a particular
					circuit so high schools don't have to see university
					tournaments, or people in Australia aren't cluttered with
					US tournaments, etc.</p>

					<p>Double-check your <a href="circuits.mhtml?chapter_id=<%
					$chapter->id%>">Circuit Memberships</a> by clicking the tab
					above if there are tournaments you believe you should be
					able to register for.</p>

					<p>Remember also to add your students and judges to your
					roster (tabs above) before registering them for
					tournaments!</p>

%				}

%			}

	</div>


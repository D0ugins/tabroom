<%args>
	$person
	$person_settings
	$session
	$all        => undef
	$chapter_id => undef
</%args>
<%init>

	my $access = Tab::Permission->search(
		person  => $person,
		chapter => $chapter_id
	)->first;

	unless ($person->site_admin) {
		$m->abort() unless $access;
		$m->abort unless $chapter_id;
		$m->redirect("prefs.mhtml?chapter_id=$chapter_id")
			if $access->tag eq "prefs";
	}

	my $tz = $person->tz;
	$tz = "UTC" unless $tz;

	my $chapter = Tab::Chapter->retrieve($chapter_id);

	$m->abort unless $chapter;

	unless ($chapter && $chapter->level) {
		my $err = "Please fill in your institution's level before continuing";
		$m->redirect("/user/chapter/settings.mhtml?chapter_id=".$chapter->id."&err=$err");
	}

	my $dbh = Tab::DBI->db_Main();
	my $now = DateTime->now;
	my $nowstring = DateTime::Format::MySQL->format_datetime($now);
	$nowstring =~ s/[\D_]//g;

	my $search_start = $now->clone;
	$search_start->subtract(days => 7);

	my $search_start_string = DateTime::Format::MySQL->format_datetime($search_start);
	my $now_string = DateTime::Format::MySQL->format_datetime($now);

	my $sth = $dbh->prepare("
		select
			tourn.id,
			tourn.name,
				CONVERT_TZ(tourn.start, '+00:00', tourn.tz),
				CONVERT_TZ(tourn.end, '+00:00', tourn.tz),
			tourn.tz,
				CONVERT_TZ(tourn.reg_start, '+00:00', tourn.tz),
				CONVERT_TZ(tourn.reg_end, '+00:00', tourn.tz),
			tourn.city, tourn.state, tourn.country,
			school.id, school.name, school.onsite,
			onsite_registration.value,
				CONVERT_TZ(onsite_starts.value_date, '+00:00', tourn.tz),
				CONVERT_TZ(onsite_ends.value_date, '+00:00', tourn.tz)

		from (tourn, school)

			left join tourn_setting onsite_registration
				on onsite_registration.tag = 'onsite_registration'
				and onsite_registration.tourn = tourn.id

			left join tourn_setting onsite_starts
				on onsite_starts.tag = 'onsite_starts'
				and onsite_starts.tourn = tourn.id

			left join tourn_setting onsite_ends
				on onsite_ends.tag = 'onsite_ends'
				and onsite_ends.tourn = tourn.id

		where tourn.end > ?
			and tourn.hidden != 1
			and tourn.id = school.tourn
			and school.chapter = ?

		and not exists (
			select district.id
				from tourn_setting district
			where district.tourn = tourn.id
				and district.tag = 'nsda_district'
		)

		order by tourn.start, tourn.name
	");

	$sth->execute($search_start_string, $chapter->id);

	my %registered;

	while (
		my (
			$id,
			$tourn_name, $tourn_start, $tourn_end, $tourn_tz,
			$tourn_reg_start, $tourn_reg_end,
			$tourn_city, $tourn_state, $tourn_country,
			$school_id, $school_name, $school_onsite,
			$onsite_reg,
			$onsite_start,
			$onsite_end
		) = $sth->fetchrow_array()
	) {

		$registered{$id}{"name"}         = $tourn_name;
		$registered{$id}{"start"}        = $tourn_start;
		$registered{$id}{"end"}          = $tourn_end;
		$registered{$id}{"tz"}           = $tourn_tz;
		$registered{$id}{"reg_start"}    = $tourn_reg_start;
		$registered{$id}{"reg_end"}      = $tourn_reg_end;
		$registered{$id}{"city"}         = $tourn_city;
		$registered{$id}{"start"}        = $tourn_start;
		$registered{$id}{"country"}      = $tourn_country;
		$registered{$id}{"school"}       = $school_id;
		$registered{$id}{"onsite"}       = $school_onsite;
		$registered{$id}{"onsite_reg"}   = $onsite_reg;
		$registered{$id}{"onsite_start"} = $onsite_start;
		$registered{$id}{"onsite_end"}   = $onsite_end;

		$tourn_start =~ s/[\D_]//g;
		$registered{$id}{"startsort"} = $tourn_start;

		$tourn_end =~ s/[\D_]//g;
		$registered{$id}{"endsort"} = $tourn_end;

		$tourn_reg_end =~ s/[\D_]//g;
		$registered{$id}{"reg_endsort"} = $tourn_reg_end;

		$onsite_end =~ s/[\D_]//g;
		$registered{$id}{"onsite_endsort"} = $onsite_end;

		$onsite_start =~ s/[\D_]//g;
		$registered{$id}{"onsite_startsort"} = $onsite_start;
	}

	$sth->finish();

	$sth = $dbh->prepare("
		select tourn.id, round.id, entry.school as strikeschool
			from round, round_setting, panel, ballot, entry, school, tourn
		where entry.school = school.id
			and school.chapter = ?
			and entry.id = ballot.entry
			and ballot.panel = panel.id
			and panel.bye != 1
			and panel.round = round.id
			and round.id = round_setting.round
			and round_setting.tag = 'strikes_published'
			and round.published != 1
			and round_setting.value = 1
			and tourn.id = school.tourn
			and tourn.start < now()
		order by round.start_time
	");

	$sth->execute($chapter->id);

	while (
		my (
			$tourn_id, $round_id, $school_id
		) =  $sth->fetchrow_array()
	) {
		$registered{$tourn_id}{"strikes"}++;
	}

	$sth = $dbh->prepare("
		select
			tourn.id, tourn.name, tourn.city, tourn.state, tourn.country,
				CONVERT_TZ(tourn.start, '+00:00', tourn.tz),
				CONVERT_TZ(tourn.end, '+00:00', tourn.tz),
				tourn.webname,
				CONVERT_TZ(tourn.reg_start, '+00:00', tourn.tz),
				CONVERT_TZ(tourn.reg_end, '+00:00', tourn.tz),
			group_concat(circuit.abbr SEPARATOR ',') as circuits

			from tourn, tourn_circuit, chapter_circuit, circuit

			where chapter_circuit.chapter = ?
				and chapter_circuit.circuit = tourn_circuit.circuit
				and tourn_circuit.tourn = tourn.id
				and tourn_circuit.circuit = circuit.id
				and tourn.hidden != 1
				and tourn.reg_end > NOW()
				and tourn.reg_start < NOW()

			and not exists (
				select tourn_setting.id
				from tourn_setting
				where tourn_setting.tag = 'closed_entry'
					and tourn_setting.value = 1
					and tourn_setting.tourn = tourn.id
			)

			and not exists (
				select tourn_setting.id
				from tourn_setting
				where tourn_setting.tag = 'nsda_nats'
					and tourn_setting.value = 1
					and tourn_setting.tourn = tourn.id
			)

			and not exists (
				select tourn_setting.id
				from tourn_setting
				where tourn_setting.tag = 'nsda_ms_nats'
					and tourn_setting.value = 1
					and tourn_setting.tourn = tourn.id
			)

			and not exists (
				select tourn_setting.id
				from tourn_setting
				where tourn_setting.tag = 'nsda_district'
					and tourn_setting.tourn = tourn.id
			)

			and not exists (
				select tourn_setting.id
				from tourn_setting
				where tourn_setting.tag = 'ncfl'
				and tourn_setting.tourn = tourn.id
			)

			group by tourn.id
			order by tourn.start, tourn.name
	");

	my %open_tourns;
	$sth->execute($chapter->id);

	while (
		my (
			$tourn_id, $tourn_name, $tourn_city, $tourn_state, $tourn_country,
			$tourn_start, $tourn_end, $tourn_webname,
			$tourn_reg_start, $tourn_reg_end,
			$circuits
		) = $sth->fetchrow_array()
	) {

		$open_tourns{$tourn_id}{"name"}     = $tourn_name;
		$open_tourns{$tourn_id}{"city"}     = $tourn_city;
		$open_tourns{$tourn_id}{"state"}    = $tourn_state;
		$open_tourns{$tourn_id}{"webname"}  = $tourn_webname;
		$open_tourns{$tourn_id}{"circuits"} = $circuits;

		$open_tourns{$tourn_id}{"state"} = $tourn_country
			unless $open_tourns{$tourn_id}{"state"};

		$open_tourns{$tourn_id}{"start_sort"} = $tourn_start;
		$open_tourns{$tourn_id}{"start_sort"} =~ s/[\D_]//g;
		$open_tourns{$tourn_id}{"reg_end_sort"} = $tourn_reg_end;

		$open_tourns{$tourn_id}{"start"} = substr($tourn_start, 5, 2)."/".substr($tourn_start, 8, 2);
		$open_tourns{$tourn_id}{"end"} = substr($tourn_end, 5, 2)."/".substr($tourn_end, 8, 2);

		$open_tourns{$tourn_id}{"reg_start"} = substr($tourn_reg_start, 5, 2)."/".substr($tourn_reg_start, 8, 2);
		$open_tourns{$tourn_id}{"reg_end"} = substr($tourn_reg_end, 5, 2)."/".substr($tourn_reg_end, 8, 2);

		$open_tourns{$tourn_id}{"reg_end"} =~ s/^0//;
		$open_tourns{$tourn_id}{"reg_end"} =~ s/\/0/\//;

		foreach my $tag ("start", "end", "reg_start", "reg_end") {
			$open_tourns{$tourn_id}{$tag} =~ s/^0//g;
			$open_tourns{$tourn_id}{$tag} =~ s/\/0/\//g;
		}
	}

	$sth->finish();

	my %districts;

	if ($chapter->district > 0) {

		my $sth = $dbh->prepare("
			select
				tourn.id, tourn.name, tourn.start, tourn.end,
				weekend.id, weekend.name, weekend.start, weekend.end,
				weekend.reg_start, weekend.reg_end,
				weekend.city, weekend.state,
				school.id

			from (tourn, tourn_setting district, weekend)

				left join school on school.tourn = tourn.id and school.chapter = ?

			where tourn.end > now()
				and tourn.id = district.tourn
				and district.tag = 'nsda_district'
				and district.value = ?
				and weekend.tourn =  tourn.id
		");

		$sth->execute($chapter->id, $chapter->district);

		while (
			my (
				$tid, $name, $start, $end,
				$wid, $w_name, $w_start, $w_end,
				$w_reg_start, $w_reg_end,
				$w_city, $w_state,
				$school
			) = $sth->fetchrow_array()
		) {

			$districts{"id"}     = $tid;
			$districts{"name"}   = $name;
			$districts{"start"}  = $start;
			$districts{"end"}    = $end;
			$districts{"school"} = $school;

			$districts{'weekends'}{$wid}{"name"}      = $w_name;
			$districts{'weekends'}{$wid}{"start"}     = $w_start;
			$districts{'weekends'}{$wid}{"end"}       = $w_end;
			$districts{'weekends'}{$wid}{"reg_end"}   = $w_reg_end;
			$districts{'weekends'}{$wid}{"reg_start"} = $w_reg_start;
			$districts{'weekends'}{$wid}{"city"}      = $w_city;
			$districts{'weekends'}{$wid}{"state"}     = $w_state;

			$districts{"startsort"}                       = $start;
			$districts{"endsort"}                         = $end;
			$districts{'weekends'}{$wid}{"startsort"}     = $w_start;
			$districts{'weekends'}{$wid}{"endsort"}       = $w_end;
			$districts{'weekends'}{$wid}{"reg_endsort"}   = $w_reg_end;
			$districts{'weekends'}{$wid}{"reg_startsort"} = $w_reg_start;

			$districts{"startsort"}                       =~ s/[\D_]//g;
			$districts{"endsort"}                         =~ s/[\D_]//g;
			$districts{'weekends'}{$wid}{"startsort"}     =~ s/[\D_]//g;
			$districts{'weekends'}{$wid}{"endsort"}       =~ s/[\D_]//g;
			$districts{'weekends'}{$wid}{"reg_endsort"}   =~ s/[\D_]//g;
			$districts{'weekends'}{$wid}{"reg_startsort"} =~ s/[\D_]//g;
		}
	}

</%init>

	<& "/user/menu.mas",
		person          => $person,
		person_settings => $person_settings,
		chapter         => $chapter
	&>

	<div class="main">

		<h2><% $chapter->name %>: Tournaments</h2>

		<&
			"tabbar.mas",
			chapter => $chapter,
			person  => $person,
			session => $session,
			whoami  => "tourn"
		&>

		<& /funclib/tablesorter.mas, table => "moi" &>

%		if (keys %registered) {

			<span class="twothirds nospace">
				<h4>Existing tournament registrations</h4>
			</span>

			<span
				class="third nospace rightalign"
				id="moi_buttonarea"
			>
			</span>

			<table id="moi">

				<thead>
					<tr class="yellowrow">
						<th class="smallish">
							Dates
						</th>

						<th class="smallish">
							Name
						</th>

						<th class="smallish">
							Location
						</th>

						<th class="smallish">
							Due
						</th>

						<th class="nosort smallish">
							Registration
						</th>

						<th class="nosort">
						</th>
					</tr>
				</thead>

				<tbody>
<%perl>

					foreach my $tid (
						sort {
							$registered{$a}{"startsort"} <=> $registered{$b}{"startsort"}
							|| $registered{$a}{"name"} cmp $registered{$b}{"name"}
						} keys %registered
					) {

						my $one = substr($registered{$tid}{"start"}, 8, 2);
						my $two = substr($registered{$tid}{"end"}, 8, 2);
</%perl>

						<tr>
							<td class="smaller nowrap centeralign">
								<span class="hidden"><% $registered{$tid}{"startsort"} %></span>
								<& "/funclib/showdate.mas",
									string => $registered{$tid}{"start"},
									length => "shortest"
								&>
%								if ($one ne $two) {
									&ndash;
									<& "/funclib/showdate.mas",
										string => $registered{$tid}{"end"},
										length => "shortest"
									&>
%								}
							</td>

							<td class="nospace">
								<a
									class="white padmore padtop padbottom smallish padleft"
									href="/user/enter/entry.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $tid %>"
								><% $registered{$tid}{"name"} %></a>
							</td>

							<td width="15%" class="smallish leftalign">
								<% $registered{$tid}{"city"} ? $registered{$tid}{"city"}."," : "" %>
								<% $registered{$tid}{"state"} ? $registered{$tid}{"state"} : $registered{$tid}{"country"} %>
							</td>

							<td width="8%" class="centeralign smallish">
								<span class="hidden"><% $registered{$tid}{"reg_endsort"} %></span>
								<& "/funclib/showdate.mas",
									string => $registered{$tid}{"reg_end"},
									length => "shortest"
								&>
							</td>

							<td class="centeralign nospace padleft padright">
%								if ($nowstring < $registered{$tid}{"endsort"}) {
									<a
										class="smallish buttonwhite bluetext hover invert"
										href="/user/enter/entry.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $tid %>"
									>
										Entries
									</a>
%								}

							</td>

							<td class="centeralign nospace padleft padright">
%								if ($registered{$tid}{"strikes"}) {
									<a
										href  = "/user/enter/strike_cards.mhtml"
										class = "smallish buttonwhite orangetext invert"
									>Strike Cards</a>

									<br />
<%perl>
								}

								if (
									$registered{$tid}{"onsite_reg"}
									&& (not defined $registered{$tid}{"onsite"})
									&& ($registered{$tid}{"onsite_startsort"} < $nowstring)
									&& ($registered{$tid}{"onsite_endsort"} > $nowstring)
								) {
</%perl>
									<a
										class="smallish buttonwhite redtext invert hover"
										href="/user/enter/onsite.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $tid %>">
										Confirm Onsite
									</a>
<%perl>
								}

								if (
									($nowstring > $registered{$tid}{"startsort"})
									&& ($nowstring < $registered{$tid}{"endsort"})
								) {
</%perl>
									<a
										class="smallish buttonwhite greentext hover invert"
										href="/user/enter/dashboard.mhtml?school_id=<% $registered{$tid}{"school"} %>"
									>
										Dashboard
									</a>
									<br />

%								} elsif ($nowstring > $registered{$tid}{"endsort"}) {
									<a
										class="smallish buttonwhite graytext hover invert"
										href="/user/results/report.mhtml?school_id=<% $registered{$tid}{"school"} %>">
										Results
									</a>
%								}
							</td>
						</tr>
%					}

				</tbody>
			</table>
%		}

%		if (scalar %districts) {

%			my $tid = $districts{"id"};

			<div class="martopmore">
				<span class="twothirds nospace">
					<h5><% $districts{'name'} %></h5>
				</span>

				<span class="third rightalign">
					<a
						class	= "smallish buttonwhite greentext hover invert"
						href	= "/user/enter/nsda_roster_check.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $tid %>">
						Check Student Eligibility
					</a>
				</span>
			</div>

			<& /funclib/tablesorter.mas, table => "districts", nobuttons => 1 &>

			<table id="districts">
				<thead>
					<tr class="yellowrow">
						<th class="smallish">
							Dates
						</th>

						<th class="smallish">
							Weekend Name
						</th>

						<th class="smallish">
							Location
						</th>

						<th class="smallish">
							Due
						</th>

						<th class="nosort smallish">
							Registration
						</th>

						<th class="nosort">
						</th>
					</tr>
				</thead>

				<tbody>
<%perl>
					foreach my $wid (
						sort {
							$districts{"weekends"}{$a}{"startsort"} <=> $districts{"weekends"}{$b}{"startsort"}
							|| $districts{"weekends"}{$a}{"name"} cmp $districts{"weekends"}{$b}{"name"}
						} keys %{$districts{'weekends'}}
					) {

						my $one = substr($districts{"weekends"}{$wid}{"start"}, 8, 2);
						my $two = substr($districts{"weekends"}{$wid}{"end"}, 8, 2);
</%perl>
						<tr>
							<td class="smaller nowrap centeralign">
								<span class="hidden"><% $districts{"weekends"}{$wid}{"startsort"} %></span>
								<& "/funclib/showdate.mas",
									string => $districts{"weekends"}{$wid}{"start"},
									length => "shortest"
								&>
%								if ($one ne $two) {
									&ndash;
									<& "/funclib/showdate.mas",
										string => $districts{"weekends"}{$wid}{"end"},
										length => "shortest"
									&>
%									}
							</td>

							<td class="nospace">
								<a
									class="white padmore padtop padbottom smallish padleft"
									href="/user/enter/entry.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $tid %>"
								><% $districts{"weekends"}{$wid}{"name"} %></a>
							</td>

							<td width="15%" class="smallish leftalign">
								<% $districts{"weekends"}{$wid}{"city"} ? $districts{"weekends"}{$wid}{"city"}."," : "" %>
								<% $districts{"weekends"}{$wid}{"state"} ? $districts{"weekends"}{$wid}{"state"} : "" %>
							</td>

							<td width="8%" class="centeralign smallish">
								<span class="hidden"><% $districts{"weekends"}{$wid}{"reg_endsort"} %></span>
								<& "/funclib/showdate.mas",
									string => $districts{"weekends"}{$wid}{"reg_end"},
									length => "shortest"
								&>
							</td>

							<td class="centeralign nospace padleft padright">
%								if ($nowstring < $districts{"weekends"}{$wid}{"reg_startsort"}) {
									<div class="smallish centeralign padvertmore marno">
										Opens
										<& "/funclib/showdate.mas",
											string => $districts{"weekends"}{$wid}{"reg_start"},
											length => "shortest"
										&>
									</div>
%								} elsif ($districts{"school"} && $nowstring < $districts{"weekends"}{$wid}{"endsort"}) {
									<a
										class="smallish buttonwhite bluetext hover invert"
										href="/user/enter/entry.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $tid %>"
									>
										Entries
									</a>
%								} elsif ($nowstring < $districts{"weekends"}{$wid}{"endsort"}) {
									<a
										class="smallish buttonwhite greentext smallish hover invert"
										href="/user/enter/create.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $tid %>">
										Register

%								}
							</td>

							<td class="centeralign nospace padleft padright">
<%perl>
								if (
									$districts{"weekends"}{$wid}{"onsite_reg"}
									&& (not defined $districts{"weekends"}{$wid}{"onsite"})
									&& ($districts{"weekends"}{$wid}{"onsite_startsort"} < $nowstring)
									&& ($districts{"weekends"}{$wid}{"onsite_endsort"} > $nowstring)
								) {
</%perl>
									<a
										class="smallish buttonwhite redtext invert hover"
										href="/user/enter/onsite.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $tid %>">
										Confirm Onsite
									</a>
<%perl>
								}

								if (
									($nowstring > $districts{"weekends"}{$wid}{"startsort"})
									&& ($nowstring < $districts{"weekends"}{$wid}{"endsort"})
								) {
</%perl>
									<a
										class="smallish buttonwhite greentext hover invert"
										href="/user/enter/dashboard.mhtml?school_id=<% $districts{"school"} %>"
									>
										Dashboard
									</a>
									<br />

%								} elsif ($nowstring > $districts{"weekends"}{$wid}{"endsort"}) {
									<a
										class="smallish buttonwhite graytext hover invert"
										href="/user/results/report.mhtml?school_id=<% $districts{"school"} %>"
									>
										Results
									</a>
%								}
							</td>
						</tr>
%				}
				</tbody>
			</table>
%		}

%		if (keys %open_tourns) {

			<div class="full martopmuchmore nospace">

				<span class='twothirds nospace'>
					<h4>
						Tournaments open for registration
					</h4>
				</span>

				<span class="third rightalign nospace" id="open_tourns_buttonarea">
					<a
						onClick = "showIgnores();"
						class   = "buttonwhite bluetext hover fa-sm fa fa-eye"
						id      = "ignoreswitch"
						title   = "Show Hidden"
					>
					</a>

					<a
						onClick = "hideIgnores();"
						class   = "buttonwhite bluetext invert hover hidden fa-sm fa fa-eye-slash"
						id      = "ignorenotswitch"
						title   = "Hide Hidden"
					>
					</a>

				</span>

			</div>

			<& /funclib/tablesorter.mas, table => "open_tourns" &>

			<script>

				function ignoreTourn(clickObject) {
					var targetId  = $("#"+clickObject.id).attr("target_id");
					$("#"+targetId).addClass("hidden");
					$("#"+targetId).addClass("ignored");
					$("#"+targetId+"_ignoreme").addClass("hidden");
					$("#"+targetId+"_ignoremenot").removeClass("hidden");

					$("#open_tourns").trigger("applyWidgets");
					$("#open_tourns").trigger("update");
					$("#open_tourns").trigger('resort');
				}

				function revealTourn(clickObject) {
					var targetId  = $("#"+clickObject.id).attr("target_id");
					$("#"+targetId).removeClass("hidden");
					$("#"+targetId).removeClass("ignored");
					$("#"+targetId+"_ignoreme").removeClass("hidden");
					$("#"+targetId+"_ignoremenot").addClass("hidden");
					$("#open_tourns").trigger("applyWidgets");
					$("#open_tourns").trigger("update");
					$("#open_tourns").trigger('resort');
				}

				function showIgnores() {
					$(".ignored").removeClass("hidden");
					$("#ignoreswitch").addClass("hidden");
					$("#ignorenotswitch").removeClass("hidden");
					$("#open_tourns").trigger("applyWidgets");
				}

				function hideIgnores() {
					$(".ignored").addClass("hidden");
					$("#ignoreswitch").removeClass("hidden");
					$("#ignorenotswitch").addClass("hidden");
					$("#open_tourns").trigger("applyWidgets");
				}

			</script>

			<table id="open_tourns">

				<thead>

					<tr class="yellowrow">

						<th class="smallish nosort">
							Hide
						</th>

						<th class="smallish">
							Dates
						</th>

						<th class="smallish">
							Name
						</th>

						<th class="smallish">
							City
						</th>

						<th class="smallish">
							Location
						</th>

						<th class="smallish">
							Circuits
						</th>

						<th class="smallish">
							Due
						</th>

						<th class="nosort">
						</th>
					</tr>

				</thead>
				<tbody>
<%perl>
					my %ignores = $m->comp("/funclib/tourn_ignores.mas", person => $person);

					foreach my $tourn_id (
						sort {
							$open_tourns{$a}{"start_sort"} <=> $open_tourns{$b}{"start_sort"}
							|| $open_tourns{$a}{"name"} cmp $open_tourns{$b}{"name"}
						} keys %open_tourns
					) {

						next if $registered{$tourn_id}++;
</%perl>

						<tr
							id    = "<% $tourn_id %>"
							class = "<% $ignores{$tourn_id} ? "ignored hidden" : "" %>"
						>

							<td class="nospace centeralign">
								<a
									value         = "1"
									id            = "<% $tourn_id %>_ignoreme"
									property_name = "ignore"
									target_type   = "tourn"
									target_id     = "<% $tourn_id %>"
									onClick       = "postSwitch(this, 'ignore_switch.mhtml'); ignoreTourn(this);"
									class         = "<% $ignores{$tourn_id} ? "hidden" : "" %>
													 buttonwhite fa-sm fa fa-eye-slash redtext hover"
									title         = "Conceal this tournament"
								>
								</a>

								<a
									value         = "0"
									id            = "<% $tourn_id %>_ignoremenot"
									property_name = "unignore"
									target_type   = "tourn"
									target_id     = "<% $tourn_id %>"
									onClick       = "postSwitch( this, 'ignore_switch.mhtml'); revealTourn(this);"
									class         = "<% $ignores{$tourn_id} ? "" : "hidden" %>
													 buttonwhite fa-sm fa fa-eye greentext hover"
									title         = "Reveal tournament"
								>
								</a>
							</td>

							<td class="nowrap centeralign smaller">
								<span class="hidden"><% $open_tourns{$tourn_id}{start_sort} %></span>
								<%
									$open_tourns{$tourn_id}{start}
								%><% $open_tourns{$tourn_id}{start} ne $open_tourns{$tourn_id}{end}
									? "-".$open_tourns{$tourn_id}{end}
									: ""
								%>
							</td>

							<td class="smallish nospace">
								<a
									class="white padvert"
									href="/index/tourn/index?tourn_id=<% $tourn_id %>"
								>
									<% $open_tourns{$tourn_id}{name} %>
								</a>
							</td>

							<td class="smallish">
								<% $open_tourns{$tourn_id}{city} %>
							</td>

							<td class="centeralign smallish">
								<% $open_tourns{$tourn_id}{state} %>
							</td>

							<td class="centeralign smallish">
								<span class="limitwrap">
									<% $open_tourns{$tourn_id}{circuits} %>
								</span>
							</td>

							<td width="8%" class="centeralign smallish">
								<span class="hidden"><% $open_tourns{$tourn_id}{reg_end_sort} %></span>
								<%  $open_tourns{$tourn_id}{reg_end} %>
							</td>

							<td class="centeralign marno padless">
								<a
									class="smallish buttonwhite greentext smallish hover invert"
									href="/user/enter/create.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $tourn_id %>">
									Register
								</a>
							</td>

						</tr>
%					}

				</tbody>
			</table>
%		}

%		unless ( (keys %open_tourns) || (keys %registered)) {

%			if ($m->comp('/funclib/chapter_circuits.mas', chapter => $chapter)) {

				<h4>No tournaments are currently open for registration</h4>

				<p>
					Your school can see tournaments from the following
					circuits.  If you want to see tournaments from additional
					circuits, sign up under the Circuits tab above.
				</p>

				<table>
<%perl>
					foreach my $circuit ($m->comp('/funclib/chapter_circuits.mas', chapter => $chapter)) {

						my $now = DateTime->now(time_zone => $tz);

						my @tourns = $m->comp("/funclib/circuit_tourns.mas", circuit => $circuit, future => 1);

						my $next_tourn = $tourns[0] if @tourns;

</%perl>
						<tr class="row">
							<td>
								<% ($circuit->state) ? $circuit->state."/" : "" %><% $circuit->country  %>
							</td>

							<td>
								<a class="white" href="circuit.mhtml?circuit_id=<% $circuit->id %>">
									<% $circuit->name %>  (<% $circuit->state %> <% $circuit->country %>)
								</a>
							</td>

							<td>
								<% ($next_tourn)
									? $next_tourn->name." opens ".Tab::niceshortdate($next_tourn->reg_start)
									: ""
								%>
							</td>
						</tr>
%					}

				</table>

%			} else {

				<h4>You must join a circuit</h4>

				<p>There are currently no tournaments open for registration
				because you are not set up to see any circuits at all.</p>

				<p>All tournaments are registered under a particular
				circuit so high schools don't have to see university
				tournaments, or people in Australia aren't cluttered with
				US tournaments, etc.</p>

				<p>Double-check your <a href="circuits.mhtml?chapter_id=<%
				$chapter->id%>">Circuit Memberships</a> by clicking the tab
				above if there are tournaments you believe you should be
				able to register for.</p>

				<p>Remember also to add your students and judges to your
				roster (tabs above) before registering them for
				tournaments!</p>

%			}

%		}

	</div>

%	$dbh->disconnect();

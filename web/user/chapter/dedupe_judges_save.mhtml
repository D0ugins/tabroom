<%args>
	$person
	$chapter_id
</%args>
<%init>

	my $chapter = Tab::Chapter->retrieve($chapter_id);

	$m->print($person->email." is my email");

	my %judges_by_name = ();

	foreach my $judge ($chapter->chapter_judges) { 
		next unless $judge->last;
		push @{$judges_by_name{$judge->first."-".$judge->last}}, $judge;
	}

	Tab::Judge->set_sql( steal => "
		update judge
		set chapter_judge = ?
		where chapter_judge = ?
	");

	Tab::Conflict->set_sql( steal => "
		update conflict
		set judge = ?
		where judge = ?
	");

	my $count;

	foreach my $key (keys %judges_by_name) { 

		next if scalar @{$judges_by_name{$key}} < 2;
		next unless $ARGS{$key};

		my $dest = shift @{$judges_by_name{$key}};

		my $person_id = $dest->person->id if $dest->person;
		my $retired = $dest->retired;

		foreach my $judge (@{$judges_by_name{$key}}) { 

			Tab::log($person->email." transferring ".$judge->id." records to ".$dest->id);

			$retired = 0 unless $judge->retired;
			$person_id = $judge->person->id if $judge->person && not defined $person_id;
			Tab::Judge->sql_steal->execute($dest->id, $judge->id);
			Tab::Conflict->sql_steal->execute($dest->id, $judge->id);
			$judge->delete;
			$count++;
		}

		$dest->person($person_id);
		$dest->update;

	}

	my $msg = "$count judges de-duplicated.";

	$m->redirect("dedupe_judges.mhtml?chapter_id=$chapter_id&msg=$msg");


</%init>

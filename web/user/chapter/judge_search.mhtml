<%args>
	$person
	$chapter_id       => undef
	$chapter_judge_id => undef
	$email            => undef
</%args>
<%init>

	my $chapter = Tab::Chapter->retrieve($chapter_id);
	my $chapter_judge = Tab::ChapterJudge->retrieve($chapter_judge_id);

	$m->abort unless $chapter;

	unless ($m->comp("/funclib/chapter_admins.mas", chapter => $chapter, admin => $person)) {
		$m->print("<p>You do not have access to that chapter.</p>");
		$m->abort;
	}

	my $judge_acc = Tab::Person->search( email => $email )->first;

	unless ($judge_acc) {
		my $err = "No Tabroom account with the email address <br /><br />".$email." <br /><br />was found.";
		$err .= "Try again, or create a new judge record";
		$m->redirect("judge_edit.mhtml?chapter_id=$chapter_id&err=$err");
	}

	my ($exists) = Tab::ChapterJudge->search(
		chapter => $chapter->id,
		person  => $judge_acc->id
	);

	if ($exists) {

		my $err = $email ." is already on your roster as ".$exists->first." ".$exists->last."<br /><br />";

		$err .= "You can only have one judge per Tabroom account at a time.  Tabroom accounts should be linked to by the individual account holder. Coaches should NOT link themselves to every judge account or otherwise judges will not have access to online ballots.";

		$m->redirect("judge_edit.mhtml?chapter_id=$chapter_id&chapter_judge_id=$chapter_judge_id&err=$err");
	}

	my $msg;

	if ($chapter_judge > 0 ) {

		$chapter_judge->person($judge_acc->id);
		$chapter_judge->first($judge_acc->first);
		$chapter_judge->last($judge_acc->last);
		$chapter_judge->gender($judge_acc->gender) if $judge_acc->gender;
		$chapter_judge->update();

		Tab::Judge->set_sql( update_judges => "
			update judge, chapter_judge
			set judge.person = ?
			where judge.chapter_judge = ?
			and judge.chapter_judge = chapter_judge.id
			and chapter_judge.chapter = ?
		");

		Tab::Judge->sql_update_judges->execute($judge_acc->id, $chapter_judge->id, $chapter->id);

	} else {

		my $now = DateTime->now;

		$chapter_judge = Tab::ChapterJudge->create({
			person  => $judge_acc->id,
			first   => $judge_acc->first,
			last    => $judge_acc->last,
			gender  => $judge_acc->gender,
			nsda    => $judge_acc->nsda,
			chapter => $chapter->id,
			retired => 0
		});

		$msg = "Judge ".$chapter_judge->first." ".$chapter_judge->last." has been added to your roster.";

	}

	if ($chapter_judge->nsda > 0) {
		$m->comp("/funclib/nsda/member_sync.mas", chapter_judge => $chapter_judge);
	}

	# Notify the judge
	$m->redirect("judge_edit.mhtml?chapter_judge_id=".$chapter_judge->id."&chapter_id=$chapter_id&msg=$msg");

</%init>

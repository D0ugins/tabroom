<%args>
	$person
	$other_id       => undef
	$chapter_id     => undef
	$search_email   => undef
	$search_chapter => undef
	$search_last    => undef
	$judge_id       => undef
</%args>
<%init>

	if ($other_id) { 

		my $other = Tab::Person->retrieve($other_id);

		if ($other) { 

			my @already = Tab::Conflict->search( 
				person     => $person->id,
				conflicted => $other_id
			);

			unless (@already) { 

				Tab::Conflict->create({
					person     => $person->id,
					conflicted => $other_id,
					added_by   => $person->id,
				});

			}
			
		} 

	} 

	if ($chapter_id) { 

		my $chapter = Tab::Chapter->retrieve($chapter_id);

		if ($chapter) { 

			my @already = Tab::Conflict->search( 
				person  => $person->id,
				chapter => $chapter_id
			);

			unless (@already) { 

				Tab::Conflict->create({
					person   => $person->id,
					chapter  => $chapter_id,
					added_by => $person->id,
				});

			}
			
		} 

	}
	
	my @chapters;
	my @persons;

	if ($search_email && $search_last) { 

		@persons = Tab::Person->search_where( 
			last => { "like", $search_last."%" }, 
			email => { "like", $search_email."%" } 
		);

	} elsif ($search_email) { 

		@persons = Tab::Person->search_where( 
			email => { "like", $search_email."%" } 
		);

	} elsif ($search_last) { 

		@persons = Tab::Person->search_where( 
			last => { "like", $search_last."%" }
		);

	}

	if ($search_chapter) { 

		@chapters = Tab::Chapter->search_where( 
			name => { "like", $search_chapter."%" } 
		);

	}

	my @existings = Tab::Conflict->search( 
		person => $person->id 
	);

</%init>

	<& "/user/menu.mas", 
		person => $person, 
		whoami => "comp_conflicts"
	&>

	<div class="main">

		<h2>Standing Conflicts</h2>

		<p>

			These conflicts are meant to reflect a personal or professional
			relationship which means it is unfair for you to be judged the
			other person; such as a relative, or a former student.  Do NOT use
			conflicts against judges you simply do not like, or try to gain
			extra strikes, or the tournament directors of tournaments you
			attend will likely get very angry.
		</p>

		<p>

			The conflicted judge must be linked to a Tabroom.com account for a
			standing conflict to work automatically, so be sure to check.
		</p>

		<p> 
			<span class="strong inline redtext">
				Conflicts entered on Tabroom.com are not confidential.
			</span> 

			Any information you enter onto Tabroom is potentially viewable by
			third parties, including the people you are conflicting.  If you
			have a conflict (or for that matter, any other information) you
			wish to keep confidential, you should contact the tournament
			officials directly instead of entering it here.  

		</p>


		<h4>Add Conflict</h4>

		<form action="conflicts.mhtml" method="post">

			<div class="full row padmore centeralign">

				<span class="twofifths">
					<input 
						type        = "text"
						name        = "search_last"
						size        = "32"
						placeholder = "Search by last name"
					>
				</span>
				<span class="twofifths">
					<input 
						type        = "text"
						name        = "search_email"
						size        = "32"
						placeholder = "Search by email"
					>
				</span>

				<span class="fifth">
					<input 
						type  = "submit"
						value = "Search"
					>
				</span>

			</div>
		</form>

%		if (@persons || @chapters) { 

			<h4>Search Results:</h4>

<%perl>
			foreach my $other (@persons) { 

				my @chapters;
				my @students = Tab::Student->search( person => $other->id );
				my @chapter_judges = Tab::ChapterJudge->search( person => $other->id );

				foreach my $person (@chapter_judges, @students) { 
					push @chapters, $person->chapter if $person->chapter;
				}

</%perl>
				<div class="row">

					<span class="third">
						<% $other->first %> <% $other->middle %> <% $other->last %>
					</span>

					<span class="half padless">
%						my $notfirst;
%						foreach my $chapter (@chapters) { 
%							$m->print(", ") if $notfirst++;
%							$m->print($chapter->name);
%						}
					</span>

					<span class="sixth nowrap centeralign">
						<a class="buttonwhite invert bluetext thin" 
							href="conflicts.mhtml?other_id=<% $other->id %>">
							Conflict
						</a>
					</span>

				</div>

%			}

%		}

%		if (@existings) { 
			<h4>Existing Conflicts</h4>
%		}


%		foreach my $existing (@existings) { 

			<div class="row full marno">
	
				<span class="twothirds nowrap">
					<% $existing->conflicted 
						? $existing->conflicted->first." ".$existing->conflicted->last 
						: ""
					%>
				</span>

				<span class="third rightalign">
					<a class="buttonwhite redtext invert fa fa-trash fa-lg" 
						href="conflict_rm.mhtml?conflict_id=<% $existing->id %>">
					</a>
				</span>

			</div>

%		}

	</div>




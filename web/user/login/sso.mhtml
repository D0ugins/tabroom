<%args>
	$sso => undef
	$sig => undef
	$person => undef
</%args>
<%init>

	use URI;
	use URI::Escape;
	use MIME::Base64;
	use Digest::SHA qw(hmac_sha256_hex);

	$m->abort() unless $sso;
	$m->abort() unless $sig;

	my $err;

	# If user isn't already logged in, redirect to the home page
	unless ($person) {
		$err = "You'll have to log in first!";
		$m->redirect("/index/index.mhtml?err=$err");
	}

	# Validate the HMAC SHA-256 of the payload
	my $secret = $Tab::discourse_secret;
	my $digest = hmac_sha256_hex($sso, $secret);

	unless ($digest eq $sig) {
		$err = "Payload signature mismatch!";
		$m->redirect("/index/index.mhtml?err=$err");
	}

	# Decode the nonce from the payload
	my $payload_original = decode_base64(uri_unescape($sso));

	my $uri   = URI->new("https://support.tabroom.com/index.html?" . $payload_original);
	my %query = $uri->query_form;
	my $nonce = $query{nonce};

	# Get the current user info
	my $name = $person->first. " " . $person->last;
	my $email = $person->email;
	my $external_id = $person->id;

	# Assign admins and moderators
	my $admin = 'false';
	my $moderator = 'false';

	# < 10 Tabroom admins, 436 = Lauren Burdt, 1183 = Greg Malis
	if ($external_id < 10 || $external_id == 436 || $external_id == 1183) {
		$admin = 'true';
		$moderator = 'true';
	}

	if ($person->site_admin) {
	    $admin = 'true';
	    $moderator = 'true';
	}

	# Encode and sign the new payload
	my $payload = "nonce=$nonce&name=$name&username=$email&email=$email&external_id=$external_id&admin=$admin&moderator=$moderator";

	my $payload_base64 = encode_base64($payload);
	my $payload_urlencoded = uri_escape($payload_base64);
	my $new_sig = hmac_sha256_hex($payload_base64, $secret);

	# Redirect to Discourse with the signed payload
	my $returnURL = "https://support.tabroom.com/session/sso_login?sso=$payload_urlencoded&sig=$new_sig";
	$m->redirect($returnURL);

</%init>

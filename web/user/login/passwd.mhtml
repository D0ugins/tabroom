<%args>
	$person
	$oldpass    => undef
	$newpass    => undef
	$repeatpass => undef
	$defaults
</%args>
<%init>

	unless ($newpass && $repeatpass) {
		my $err = "You must enter a password to continue";
		$m->redirect("profile.mhtml?err=$err");
	}

	$m->abort unless $person;

	my $token = $defaults->{"token"};

	unless ($token) {

		my $err = "No authentication token sent. Please use only the password change form on Tabroom.";
		$m->redirect("/user/login/profile.mhtml?err=$err");

	} elsif ($token ne $ARGS{"token"}) {

		my $err = "Authentication token mismatch. Please use only the password change form on Tabroom.";
		$m->redirect("/user/login/profile.mhtml?err=$err");
	}

	my $err;
	my $msg;

	if ($oldpass) {

		my $new_salt = $m->comp("/funclib/generate_randomstring.mas");

		unless ($newpass eq $repeatpass) {
			$err = "The two passwords you listed did not match";
		}

		my $change_ok;
		my @logins = $person->logins();

		foreach my $login (@logins) {

			# This gets the salt from the MD5 combined password hash
			my $db_sha2_hash = $login->sha512;

			if ($db_sha2_hash) {

				my $verify_password = crypt($oldpass,$db_sha2_hash);

				if ($db_sha2_hash eq $verify_password) {
					$change_ok++;
				} else {
					$err = "Old password was not correct";
				}
			}

			if ($change_ok) {
				undef $err;
				last;
			}
		}

		unless ($err) {

			foreach my $login (@logins) {

				my $now = DateTime->now;

				my $new_sha2_hash = crypt($newpass, '$6$' . $new_salt);
				$login->pass_timestamp($now);
				$login->pass_changekey("");
				$login->sha512($new_sha2_hash);
				$login->update;

				Tab::log(
					"PASSWORD CHANGE: Login ID ".$login->id." (".$login->username.") for "
					.$person->id." ".$person->first." ".$person->last.
					" password was changed from IP address ".$ENV{REMOTE_ADDR}
				);
			}

			$m->comp("/funclib/ldap_person.mas", person => $person);
			$msg .= "Your password has been changed";

		}
	}

	$m->redirect("/user/login/profile.mhtml?err=$err&msg=$msg");

</%init>



<%args>
	$err      => undef
	$first    => undef
	$last     => undef
	$email    => undef
	$pass1    => undef
	$pass2    => undef
	$phone    => undef
	$domain   => undef
	$state    => undef
	$country  => undef
	$timezone => undef

	$chapter_id => undef;
	$circuit_id => undef;

</%args>

<%init>

	unless ($first && $last && $email && $pass1 && $pass2) { 
		$err = "A required field was missing.  Please make sure all the required fields, marked with a *, are filled in";
		$m->redirect("/user/login/new_user.mhtml?first=$first&last=$last&email=$email&phone=$phone&domain=$domain&err=$err");
	}

	use Email::Valid;

    my $salt = $m->comp("/funclib/generate_randomstring.mas");
	my $sha_crypt = crypt($pass1, '$6$' . $salt);
	my $now = DateTime->now;

	$timezone = "UTC" unless $timezone;

	$phone =~ s/[\D_]//g;


	$email =~tr/[A-Z]/[a-z]/;
	$email =~ s/\s*//g;

	my @existing_person = Tab::Person->search( email => $email );
	my @existing_login = Tab::Login->search( username => $email );

	if (@existing_person) { 

		$err = "An account with that email address already exists on this system.  Please have the system email you your password if you've forgotten it.";

		$m->redirect("/user/login/new_user.mhtml?err=$err&first=$first&last=$last&email=$email&phone=$phone&domain=$domain");

	} elsif (@existing_login) { 

		$err = "A login with that email address already exists on this system.  Please have the system email you your password if you've forgotten it.";

		$m->redirect("/user/login/new_user.mhtml?err=$err&first=$first&last=$last&email=$email&phone=$phone&domain=$domain");

	} else { 

		unless ($pass1 eq $pass2) { 

			$err = "The two passwords supplied did not match.";
			$m->redirect("/user/login/new_user.mhtml?err=$err&first=$first&last=$last&email=$email&phone=$phone&domain=$domain");
		}

		my $emailok = Email::Valid->address( -address => $email, -mxcheck => 0 ) ? 'yes' : 'no';

		if ($emailok ne 'yes') {

    	    $err = "That email address is not valid.  Please enter a valid address. $emailok";

			$m->redirect("/user/login/new_user.mhtml?err=$err&first=$first&last=$last&email=$email&phone=$phone&domain=$domain");

		}

		my $person;
		my $login;

		eval {

			$person = Tab::Person->create({ 
				first              => $first,
				last               => $last,
				email              => $email,
				state              => $state,
				country            => $country,
				tz                 => $timezone,
				phone              => $phone,
				provider           => $domain
			});

			$login = Tab::Login->create({ 
				username => $email,
				sha512   => $sha_crypt,
				source   => "tab",
				person   => $person->id
			}); 

			$m->comp("/funclib/claim_followers.mas", 
				person => $person
			);

		};

		if ($chapter_id || $circuit_id) {
			#got info from _circuit_new_judge.mhtml
			my $chapter = Tab::Chapter->retrieve($chapter_id);

			my $chapter_judge = Tab::ChapterJudge->create({
				first           => $first,
				last            => $last,
				chapter         => $chapter->id,
				retired         => 0,
				person          => $person->id
			});

		}

		unless ($person && $login) { 

			$err = "An account with that email address already exists on this system.  This can happen if you hit submit twice on the account creation form.  Please try logging in, or have the system email you your password if you've forgotten it.";

			$m->redirect("/user/login/new_user.mhtml?err=$err&first=$first&last=$last&email=$email&phone=$phone&domain=$domain");

		} else { 

		Tab::log("NEW ACCCOUNT: $email was created with id ".$person->id." from IP address ".$ENV{REMOTE_ADDR});

		$m->comp("/funclib/ldap_person.mas", login => $login, ad_password => $pass1);

		$m->redirect("/user/login/login_save.mhtml?username=$email&password=$pass1&first=yippee");

		}

	}

</%init>


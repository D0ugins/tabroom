<%args>
	$school
	$person
	$event => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	my $limit;

	if ($event eq "all") {
		$limit = " and event.type IN ('debate', 'speech', 'wsdc') ";
	} elsif ($event eq "debate" || $event eq "speech" || $event eq "wsdc") {
		$limit = " and event.type = '".$event."' ";
	} elsif ($event eq int($event)) {
		$limit = " and event.id = '".$event."' ";
	} else {
		$m->comp("/funclib/abort.mas", message => "No valid event ID sent.");
	}

	my $observer;

	if ($ARGS{"tabroom_id"}) {

		$observer = Tab::Person->retrieve($ARGS{"tabroom_id"});

	} elsif ($ARGS{"tabroom_email"}) {

		$observer = Tab::Person->search( email => $ARGS{"tabroom_email"} )->first;

	} else {

		$m->comp("/funclib/abort.mas", message => "No observer ID or email sent.");
	}

	unless ($observer) {
		my $mess = "No Tabroom account found for email ".$ARGS{'tabroom_email'};
		$m->comp("/funclib/abort.mas", message => $mess);
	}

	my $sth = $dbh->prepare("
		select
			entry.id, entry.code, entry.name, event.id, event.abbr, event.type

		from entry, event, event_setting online, event_setting online_mode

		where entry.school = ?

			and entry.event = event.id
			and event.id = online.event
			and online.tag = 'online'

			and event.id = online_mode.event
			and online_mode.tag = 'online_mode'
			and online_mode.value = 'nsda_campus_observers'

			$limit

		order by event.abbr, entry.code
	");

	$sth->execute($school->id);

	my %people;

	my $obshash = $school->setting("campus_observers");
	my %observers;

	if ($obshash) {
		%observers = %{$obshash};
	}

	my $msg;

	while (
		my (
			$id, $code, $name, $event_id, $event_abbr, $event_type
		) = $sth->fetchrow_array()
	) {

		my $already = scalar ( keys %{$observers{$id}} );

		if ($event_type eq "debate" || $event_type eq "wsdc") {

			if ($already >= 2) {
				$msg .= " Limit reached for $code.  Not added ";
				next;
			}

		} elsif ($event_type eq "speech") {

			if ($already >= 1) {
				$msg .= " Limit reached for $code.  Not added ";
				next;
			}

		} else {

			next;
		}

		$observers{$id}{$observer->id} = $observer->first." ".$observer->last." <".$observer->email.">";
	}

	$school->setting("campus_observers", "json", \%observers);

	$m->redirect("campus_observers.mhtml?school_id=".$school->id."&msg=$msg");

</%init>


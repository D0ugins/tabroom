<%args>
	$judge_id
	$school_id
	$tourn_id
	$day
	$person
</%args>
<%perl>

	my $now = DateTime->now();

	my $judge = Tab::Judge->retrieve($judge_id);
	my $school = Tab::School->retrieve($school_id);
	my $tourn = Tab::Tourn->retrieve($tourn_id);
	my $night = DateTime::Format::MySQL->parse_date($day);

	#Does the judge have gender?
	unless ($judge->setting('gender')) {
		my $err = "You must fill in the judge's gender before you can request housing";
		$m->redirect("housing.mhtml?hijud=$judge_id&err=$err&school_id=$school_id");
	}

	# How many slots do we have tonight?
	my @slots = Tab::HousingSlots->search( night => $night->ymd, tourn => $tourn->id );
	my $num_slots = $slots[0]->slots;

	# Are we over that number of requests already?
	my @requests =  Tab::Housing->search( night => $night->ymd, tourn => $tourn->id );
	my $waitlist = 0;
	$waitlist++ if $num_slots < scalar @requests;

	my $existing_request = $m->comp("/funclib/judge_housing.mas", judge => $judge, day => $night);

	my $housing_request = Tab::Housing->create({
		type      => "judge",
		night     => $night,
		waitlist  => $waitlist,
		requested => $now,
		requestor => $person->id,
		tourn     => $tourn->id,
		judge     => $judge_id,
		school    => $school_id
	}) unless $existing_request;

	if ($tourn->setting("track_reg_changes")) {

		my $description = $person->first." ".$person->last." requested housing for judge ".$judge->first." ".$judge->last;

		$m->comp("/funclib/log.mas",
           tourn       => $tourn->id,
           school      => $school_id,
           type        => "registration",
           description => $description,
		   person      => $person
        );

    }

	my $msg = "Housing for ".$judge->first." ".$judge->last." on ".$night->day_name." confirmed.";
	my $err = "The housing for this tournament is currently full on ".$night->day_name.".  ".$judge->first." ".$judge->last." has been placed on the waitlist on a first-come, first-served basis." if $waitlist;

	$m->redirect("housing.mhtml?school_id=$school_id&msg=$msg&err=$err");

</%perl>

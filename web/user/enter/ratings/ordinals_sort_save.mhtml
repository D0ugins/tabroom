<%args>
	$entry_id => undef
	$sortorder => undef
</%args>
<%init>

	return unless $entry_id && $sortorder;

	my @ordering = split (/&judge\[\]=/, $sortorder);

	my %id_order = ();
	my $ord = 1;

	foreach my $order (@ordering) { 
		$id_order{$order} = $ord;
		$ord++;
	}

	my $now = DateTime->now();
	my $err;

	my $entry = Tab::Entry->retrieve($entry_id);
	my $category = $entry->event->category;
	my $tourn = $category->tourn;

	my $ignore_conflicts++ if $category->setting("conflict_denominator");

	Tab::Entry->set_sql(wipe_prefs => "delete from rating where entry = ?");
	Tab::Entry->sql_wipe_prefs->execute($entry->id);

	my $round_burden++ if $category->setting("rounds_per");

	my %conflicts_by_id = ();

	foreach my $conflict (Tab::Strike->search( entry => $entry->id)) { 
		$conflicts_by_id{$conflict->judge->id}++ if $conflict->judge > 0;
	}

	foreach my $conflict (Tab::Strike->search( school => $entry->school->id)) { 
		$conflicts_by_id{$conflict->judge->id}++ if $conflict->judge > 0;
	}


	my @all_judges = Tab::Judge->search_where({ active => 1, category => $category->id });

	my %rating_by_judge = ();
	my %ordinal_by_judge = ();
	my %judges_at_rating = ();

	my $total_rounds;

	@all_judges = sort {$id_order{$a->id} <=> $id_order{$b->id}} @all_judges;

	my $count = 1;


    JUDGE:
    foreach my $judge (@all_judges) {

        next if $judge->school->id == $entry->school->id;

        unless ($ignore_conflicts) { 
            next JUDGE if $conflicts_by_id{$judge->id};
        }   

		$total_rounds += $judge->obligation;
		$total_rounds += $judge->hired;
		
		next JUDGE if $conflicts_by_id{$judge->id};

		my $rating = Tab::Rating->create({
			type    => "entry",
			tourn   => $tourn->id,
			judge   => $judge->id,
			entry   => $entry->id,
			ordinal => $count++,
			entered => $now
		});

        $rating_by_judge{$judge->id} = $rating;
        $ordinal_by_judge{$judge->id} = $id_order{$judge->id};
        push (@{$judges_at_rating{$id_order{$judge->id}}}, $judge );

    }   

	my $rounds_before;
	$total_rounds = scalar @all_judges unless $round_burden;

	foreach my $ordinal (sort {$a <=> $b} keys %judges_at_rating ) {

		foreach my $judge (@{$judges_at_rating{$ordinal}}) { 
        	
			next if $conflicts_by_id{$judge->id};

			$rounds_before += $judge->obligation;
			$rounds_before += $judge->hired;
			$rounds_before++ unless (defined $round_burden);

		}

		foreach my $judge (@{$judges_at_rating{$ordinal}}) { 

			my $percentile = ( $rounds_before  / $total_rounds) * 100;
			my $rating = $rating_by_judge{$judge->id};
			$rating->percentile($percentile);
			$rating->update;

		}

	}

	my $msg = $entry->code." prefs saved in ".$category->abbr." to $rounds_before rounds";

	$m->redirect("ordinals_prefs_sortable.mhtml?school_id=".$entry->school->id."&entry_id=".$entry_id."&category_id=".$category->id."&style=entry_ratings&msg=".$msg."&err=".$err."#yo");

</%init>


<%args>
	$person
	$school
	$category_id => undef
	$entry_id    => undef
	$clone_id    => undef
</%args>
<%init>

	my $category = Tab::Category->retrieve($category_id) if $category_id;
	my $entry = Tab::Entry->retrieve($entry_id) if $entry_id;

	$m->comp("/funclib/abort.mas",
		message => "No entry found with id $entry_id"
	) unless $entry;

	my @clones;
	my $msg;
	my $dest_id;

	if ($clone_id eq "all") {

		@clones = $school->entries( event => $entry->event, active => 1);
		$msg = "Strikes copied to all";
		$dest_id = $entry->id;

	} else {

		my $clone = Tab::Entry->retrieve($clone_id);

		$m->comp("/funclib/abort.mas",
			message => "No entry found with id $clone_id"
		) unless $clone;

		$m->comp("/funclib/abort.mas",
			message => "School is not yours"
		) unless $school->id == $clone->school->id;

		push @clones, $clone;
		$msg = "Strikes copied to ".$clone->id;
		$dest_id = $clone->id;
	}

	use POSIX;

	my $tourn = $school->tourn();

	my $now = DateTime->now();
	my $strike_end = $category->setting("strike_end");
	my $strike_start = $category->setting("strike_start");

	if ($strike_end < $now || $strike_start > $now) {
		$m->comp("/funclib/abort.mas",
			message => "The strike sheet is not open for changes"
		);
	}

	my @entry_strikes = $m->comp(
		"/funclib/entry_strikes.mas",
		entry    => $entry,
		category => $category
	);

	foreach my $clone (@clones) {

		next if $clone == $entry;

		my @clone_strikes = $m->comp(
			"/funclib/entry_strikes.mas",
			entry    => $clone,
			category => $category
		);

		foreach my $strike (@clone_strikes) {
			$strike->delete();
		}

		foreach my $strike (@entry_strikes) {
			next if $strike->type eq "conflict";
			my $new_strike = $strike->copy({
				entry => $clone->id
			});
		}
	}

	$m->redirect("entry_strikes.mhtml?entry_id=$dest_id&school_id=".$school->id."&category_id=$category_id&msg=$msg");

</%init>

<%args> 
	$school
	$person
	$event_id => undef
	$format   => undef
</%args>
<%init>

	my $tourn = $school->tourn;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
    my $now = DateTime->now;

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("

		select entry_student.id, entry.id, entry.code, entry.name, entry.waitlist, entry.dropped, entry.ada,
				student.id, student.chapter, student.first, student.last, student.ualt_id, chapter.name,
				event.name, event.abbr, event.id

		from (entry_student, entry, student, event)

		left join chapter on chapter.id = student.chapter

		where entry.school = ? 
			and entry.id = entry_student.entry
			and entry_student.student = student.id
			and entry.event = event.id


			group by entry_student.id
			order by student.last, student.first

	");

	$sth->execute($school->id);

	my %students = ();
	my %entries = ();

	my %settings = $m->comp("/funclib/school_entry_settings.mas", school => $school);

	while (my (
		$entry_student_id, 
			$entry_id, $entry_code, $entry_name, $entry_waitlist, $entry_dropped, $entry_ada,
			$student_id, $student_chapter, $student_first, $student_last, $student_nsda, $student_chapter_name,
			$event_name, $event_abbr, $event_id
		)  = $sth->fetchrow_array() ) {


		unless ($students{$student_id}{"name"}) { 
			$students{$student_id}{"name"} = $student_first." ".$student_last;
			$students{$student_id}{"last"} = $student_last;
			$students{$student_id}{"first"} = $student_first;
			$students{$student_id}{"nsda"} = $student_nsda;
			$students{$student_id}{"chapter"} = $student_chapter;

			$students{$student_id}{"hybrid"} = $student_chapter_name 
				if $student_chapter != $school->chapter;

		}

		unless ($entries{$entry_id}{"code"}) { 

			$entries{$entry_id}{"code"} = $entry_code;
			$entries{$entry_id}{"name"} = $entry_name;
			$entries{$entry_id}{"dropped"} = $entry_dropped;
			$entries{$entry_id}{"waitlist"} = $entry_waitlist;
			$entries{$entry_id}{"ada"} = $entry_ada;

			$entries{$entry_id}{"event_id"} = $event_id;
			$entries{$entry_id}{"event_name"} = $event_name;
			$entries{$entry_id}{"event_abbr"} = $event_abbr;

		}

		push @{$entries{$entry_id}{"students"}}, $student_id;
		push @{$students{$student_id}{"entries"}}, $entry_id;

	}

	my $filename = $tourn->name."-".$school->name."-RosterByCompetitor";
	$filename =~ s/[\W_]//g;

	$filename = $filename.".csv";   
	
	$m->clear_buffer;
	$r->content_type('application/csv');
	$r->headers_out->{'Content-Disposition'} = "filename=$filename";

	sub printcsvbox {
		my $input = shift;
		$m->print('"'.$input.'",');
		return;
	}

	my $hide_codes = $tourn->setting("hide_codes");

	$m->print("Lastname,Firstname,Event,");
	$m->print("Entry Code, Entry Name,") unless $hide_codes;
	$m->print("Teammate,Status,");
	$m->print("Other\n");

	foreach my $student_id (sort {$students{$a}{"last"} cmp $students{$b}{"last"} } keys %students) { 

		next if $students{$student_id}{"hybrid"};

		foreach my $entry_id (@{$students{$student_id}{"entries"}}) { 

			printcsvbox($students{$student_id}{"last"});
			printcsvbox($students{$student_id}{"first"});
			printcsvbox($entries{$entry_id}{"event_abbr"});
			printcsvbox($entries{$entry_id}{"code"}) unless $hide_codes;
			printcsvbox($entries{$entry_id}{"name"}) unless $hide_codes;

			my $teamstring;

			foreach my $other_id (@{$entries{$entry_id}{"students"}}) { 

				next if $other_id == $student_id;

				$teamstring .= " & " if $teamstring;
				$teamstring .= $students{$other_id}{"name"};
				$teamstring .= ' Hybrid: '.$students{$other_id}{"hybrid"} if $students{$other_id}{"hybrid"};
			}

			printcsvbox($teamstring);

			my $status;

			if ($entries{$entry_id}{"dropped"}) { 
				$status = "Dropped";
			} elsif ($entries{$entry_id}{"waitlist"}) { 
				$status = "Waitlisted";
			} 

			printcsvbox($status);

			if ($entries{$entry_id}{"ada"}) { 
				printcsvbox("ADA rooms requested");
			} else { 
				printcsvbox();
			}
			
			if ($settings{$entry_id}{"title"}) { 
				printcsvbox($settings{$entry_id}{"title"}); 
				printcsvbox($settings{$entry_id}{"author"}); 
			}

			if ($settings{$entry_id}{"registered_seed"}) { 
				printcsvbox($settings{$entry_id}{"registered_seed"}); 
			}

			$m->print("\n");

		}

	}

	$m->flush_buffer();
	$m->abort();

</%init>

<%args>
	$person
	$school
	$student_id => undef
</%args>
<%init>

	my $now = DateTime->now();

	my $student = Tab::Student->retrieve($student_id) if $student_id;

	unless ($student) { 
		$m->comp('/funclib/abort.mas', 
			message => "No student record found for ID number $student_id"
		);
	}

	unless ($student->chapter->id == $school->chapter->id) {
		$m->comp('/funclib/abort.mas', 
			message => "Student ".$student->first." ".$student->last." does not belong to your school."
		);
	}

	my $tourn = $school->tourn();

	my %entries = $m->comp(
		"/funclib/nationals_entries.mas",
		student => $student,
		tourn => $tourn
	);

	my %events;

	foreach my $event ($tourn->events) {

		if ($event->setting("supp")) { 
			$events{$event->id} = "supp";
			push @{$events{"supp"}}, $event;
		} elsif ($event->setting("conn")) { 
			$events{$event->id} = "conn";
			push @{$events{"conn"}}, $event;
		} elsif ($event->setting("stefan")) { 
			$events{$event->id} = "stefan";
			push @{$events{"stefan"}}, $event;
		} else { 
			$events{$event->id} = "main";
			push @{$events{"main"}}, $event;
		}

	}

	my $counter;

	foreach my $tag ("supp", "conn") { 

		if ($events{$tag}) {

			foreach my $event (@{$events{$tag}}) { 

				my $in = $ARGS{$event->id};

				$counter++ if $in;

				if ($entries{$event->id}) { 

					unless ($in) { 

						my $msg = "Entry ".$entries{$event->id}->name." deleted in ".$entries{$event->id}->event->abbr;
						$m->comp("/funclib/log.mas",
							tourn       => $entries{$event->id}->event->tourn->id,
							event       => $entries{$event->id}->event->id,
							school      => $entries{$event->id}->school->id,
							type        => "registration",
							person      => $person->id,
							description => $msg
						);

						$entries{$event->id}->delete();

					}

				} else { 

					if ($in) { 

						my $entry = Tab::Entry->create({
							event      => $event->id,
							school     => $school->id,
							tourn      => $tourn->id,
							name       => $student->first." ".$student->last,
							dropped    => 0,
							created_at => $now,
						});

						$entry->setting("registered_by", $person->id);

						my $es = Tab::EntryStudent->create({
							entry   => $entry->id,
							student => $student->id
						});

						my $msg = "Entry ".$entry->name." created in ".$entry->event->abbr;

						$m->comp("/funclib/log.mas",
							tourn       => $entry->event->tourn->id,
							event       => $entry->event->id,
							entry       => $entry->id,
							school      => $entry->school->id,
							type        => "registration",
							person      => $person->id,
							description => $msg
						);

					}
				}
			}
		}
	}

	foreach my $tag ("supp", "conn") { 
		foreach my $event (@{$events{$tag}}) { 
			undef $entries{$event->id}; 
		}
	}

	my %used; 

	foreach my $entry (
		$m->comp(
			"/funclib/student_entries.mas", 
			student     => $student,
			tourn       => $tourn,
			entry_check => 1
		)
	) { 

		my $event = $entry->event;
		next if $events{$event->id} eq "main";

		if ($used{$event->id}++) { 
			$entry->delete();
		} else { 
			$entry->unconfirmed(0);
			$entry->update();
		}
		
	}

	my $msg = $student->first." ".$student->last." has been pre-registered into $counter supplementals &amp; consolations";

	$m->redirect("details.mhtml?student_id=".$student->id."&school_id=".$school->id."&msg=$msg");

</%init>

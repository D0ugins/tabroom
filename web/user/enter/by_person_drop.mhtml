<%args> 
	$school
	$person
	$student_id => undef
</%args>
<%init>

	my $tourn = $school->tourn;
	my $student = Tab::Student->retrieve($student_id);

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
    my $now = DateTime->now;

	my @entries = $m->comp(
		"/funclib/student_entries.mas", 
		student => $student,
		tourn   => $tourn
	);

	my $msg;

	foreach my $entry (@entries) { 

		my $event = $entry->event;

		my $drop_deadline = $tourn->setting("drop_deadline");
		my $freeze_deadline;

		$freeze_deadline = $event->setting("freeze_deadline");
		$freeze_deadline = $tourn->setting("freeze_deadline") unless $freeze_deadline;

		$drop_deadline = $tourn->reg_end unless $drop_deadline;
		$freeze_deadline = $tourn->reg_end unless $freeze_deadline;

		my $now = DateTime->now;

		if ($drop_deadline < $now) { 

			my $err = "The online drop deadline for this tournament has passed.  Please contact the tournament directly";
			$m->redirect("by_person.mhtml?student_id=$student_id&school_id=".$school->id."&err=$err");
		}

		if ($tourn->setting("track_reg_changes")) { 
			
			my $description = $person->first." ".$person->last." dropped ".$entry->event->abbr." entry ".$entry->code." ".$entry->name; 
			$description = $person->first." ".$person->last." un-dropped ".$entry->event->abbr." entry ".$entry->code." ".$entry->name if $entry->dropped;
		
			my $change = $m->comp("/funclib/log.mas", 
				tourn       => $tourn->id,
				school      => $school->id,
				type        => "registration",
				description => $description,
				person      => $person->id
			); 
		
		} 

		my $stu_count;

		STUDENT:
		foreach my $student ($entry->students) { 

			$stu_count++;

			foreach my $other ($m->comp("/funclib/student_entries.mas", tourn => $tourn, student => $student)) { 
				next STUDENT if $other->id != $entry->id;
			}

			foreach my $housing ($student->housing($tourn)) { 
				$housing->delete if $housing;
			}

		}

		my $name = $entry->name;
		$name =~ s/\&/and/g;

		$msg .= "Entry ".$name." dropped";

		if ($freeze_deadline > $now) { 

			if ($entry->dropped) { 

				$entry->dropped(0);
				$entry->update;

				$entry->setting("dropped_at", "");

			} else {

				$entry->delete();
				$school->setting("individuals", ( $school->setting("individuals") - $stu_count)) if $school->setting("individuals");

			}

		} else {

			if ($entry->dropped) { 

				$entry->dropped(0);
				$entry->update;
				$entry->setting("dropped_at", "");

			} else {
				$entry->dropped(1);
				$entry->update;
				$entry->setting("dropped_at", "date", $now);
				$entry->setting("dropped_by", $person->id);
			}
			
			my $drop_reason = "Dropped ". $entry->code ." by ".$person->last; 

			if ($tourn->setting("fine_deadline") < $now && $entry->waitlist < 1) { 

				if ($entry->dropped) { 
			
					my $fine = Tab::Fine->create({
						school => $entry->school->id,
						amount => $tourn->setting("drop_fine"),
						reason => $drop_reason,
						levied_at => $now,
						levied_by => $person->id
					}) if $tourn->setting("drop_fine") > 0; 

				} else { 

					my $fine = Tab::Fine->search( school => $entry->school->id, reason => $drop_reason )->first;
					$fine->delete if $fine;

				}
			} 
		}

		$msg .= "<br />";
	}

	$m->redirect("by_person.mhtml?school_id=".$school->id."&msg=$msg");

</%init>

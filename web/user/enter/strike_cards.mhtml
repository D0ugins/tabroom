<%args>
	$person
</%args>
<%init>

	my @rounds;
	my %panels;

	Tab::Round->columns(TEMP => qw/entryid/);
	Tab::Round->columns(TEMP => qw/schoolid/);

	Tab::Round->set_sql( entry_strikes => "

		select round.*, entry.id as entryid
		from round, round_setting, panel, ballot, entry, entry_student, student, chapter_setting

		where student.person = ? 
		and student.id = entry_student.student
		and student.chapter = chapter_setting.chapter
		and chapter_setting.tag = 'self_prefs'
		and chapter_setting.value = 1
		and entry_student.entry = entry.id
		and entry.id = ballot.entry
		and ballot.panel = panel.id
		and panel.bye != 1
		and panel.round = round.id
		and round.id = round_setting.round
		and round_setting.tag = 'strikes_published'
		and round_setting.value = 1
		order by round.start_time

	");

	@rounds = Tab::Round->search_entry_strikes($person->id);

	Tab::Panel->set_sql( entry_sections => "
		select distinct panel.*
		from panel, ballot, entry_student, student, chapter_setting
		where student.person = ? 
		and student.id = entry_student.student
		and student.chapter = chapter_setting.chapter
		and chapter_setting.tag = 'self_prefs'
		and chapter_setting.value = 1
		and entry_student.entry = ballot.entry
		and ballot.panel = panel.id
		and panel.bye != 1
		and panel.round = ? 
	");

	foreach my $round (@rounds) { 
		@{$panels{$round->id}} = Tab::Panel->search_entry_sections($person->id, $round->id);
	}

	Tab::Ballot->columns(TEMP => "scoretag");

	Tab::Ballot->set_sql( entry_struck => "
		select distinct ballot.*, score.tag as scoretag
		from panel, ballot, entry, score, entry_student, student, chapter_setting
		where student.person = ? 
		and student.id = entry_student.student
		and student.chapter = chapter_setting.chapter
		and chapter_setting.tag = 'self_prefs'
		and chapter_setting.value = 1
		and entry_student.entry = entry.id
		and entry.id = ballot.entry
		and ballot.panel = panel.id
		and panel.bye != 1
		and panel.round = ? 
		and score.ballot = ballot.id
		and (score.tag = 'strike' or score.tag = 'no_strike')
		and score.value = 1
	");

	my %strikes;
	my %no_strikes;

	foreach my $round (@rounds) { 
		foreach my $ballot (Tab::Ballot->search_entry_struck($person->id, $round->id)) { 
			if ($ballot->scoretag eq "no_strike") { 
				$no_strikes{$ballot->panel->id}++;
			} else { 
				push @{$strikes{$ballot->panel->id}}, $ballot;
			}
		}
	}

	Tab::Round->set_sql( school_strikes => "

		select round.*, school.id as schoolid
		from round, round_setting, panel, ballot, entry, school, permission

		where permission.person = ? 
		and permission.chapter = school.chapter
		and school.id = entry.school
		and entry.id = ballot.entry
		and ballot.panel = panel.id
		and panel.bye != 1
		and panel.round = round.id
		and round.id = round_setting.round
		and round_setting.tag = 'strikes_published'
		and round_setting.value = 1
		order by round.start_time

	");

	push @rounds, Tab::Round->search_school_strikes($person->id);

	Tab::Panel->set_sql( school_sections => "
		select distinct panel.* 
		from panel, ballot, entry, school, permission
		where permission.person = ? 
		and permission.chapter = school.chapter
		and school.id = entry.school
		and entry.id = ballot.entry
		and ballot.panel = panel.id
		and panel.bye != 1
		and panel.round = ? 

	");

	foreach my $round (@rounds) { 
		push @{$panels{$round->id}}, Tab::Panel->search_school_sections($person->id, $round->id);
	}

	Tab::Ballot->set_sql( school_struck => "
		select distinct ballot.*, score.tag as scoretag
		from panel, ballot, entry, score, school, permission

		where permission.person = ? 
		and permission.chapter = school.chapter
		and school.id = entry.school
		and entry.id = ballot.entry
		and ballot.panel = panel.id
		and panel.bye != 1
		and panel.round = ? 
		and score.ballot = ballot.id
		and (score.tag = 'strike' or score.tag = 'no_strike')
		and score.value = 1
	");

	foreach my $round (@rounds) { 

		foreach my $ballot (Tab::Ballot->search_school_struck($person->id, $round->id)) { 

			if ($ballot->scoretag eq "no_strike") { 
				$no_strikes{$ballot->panel->id}++;
			} else { 
				push @{$strikes{$ballot->panel->id}}, $ballot;
			}
		}
	}

</%init>

	<script>

		function submitConfirm (button, event) { 
					
			alertify.confirm(
				"Last chance!",
				"You will not be able change a strike after saving it.  Are you sure?",
				function (e) {
					button.form.submit(); // submit form skipping jQuery bound handler
				},
				function(e) {
					alertify.error("OK, try again!");
				}
			);
		}

		function checkStrikes(strikeLimit, panelId) { 

			console.log($("."+panelId+"_nope:checked").length);
			console.log(strikeLimit);

			if ( $("."+panelId+"_nope:checked").length) { 

				$("."+panelId+":checkbox:not(:checked)").attr('disabled', true);
				$("."+panelId+"_rows").removeClass("yellowhover");

			} else if ( $("."+panelId+":checked").length >= strikeLimit) { 

				$("."+panelId+":checkbox:not(:checked)").attr('disabled', true);
				$("."+panelId+"_rows").removeClass("yellowhover");

			} else { 

				$("."+panelId+":disabled").removeAttr("disabled", true);
				$("."+panelId+"_rows").addClass("yellowhover");
			}
		}

	</script>

	<div class="main">

		<h4>Open Strike Cards</h4>

<%perl>

		my $now = DateTime->now();
		my %done;

		ROUND:
		foreach my $round (@rounds) { 

			next if $done{$round->id}++;

			my $strikes = $round->setting("strikes");
			my $strikes_due = $round->setting("strikes_due");

			my %struck_panels = eval { 
				return %{JSON::decode_json($round->setting("strike_panels"))};
			};

			next if $strikes_due < $now;

			# When you don't give a shit wrap it in an eval!
			my $tz = eval { return $round->event->tourn->tz; }; 

			$tz = "UTC" unless $tz;

			$strikes_due->set_time_zone($tz) if $strikes_due;

</%perl>

			<div class="ltborderbottom full nospace">

				<span class="half">
					<h5 class="marleftmore bluetext">
						<% $round->realname %> of <% $round->event->abbr %>
					</h5>
				</span>

				<span class="quarter bluetext semibold">
					Strikes: up to <% $strikes %>
				</span>

				<span class="quarter redtext semibold rightalign">
					Deadline: <& "/funclib/showtime.mas", dt => $strikes_due &>
				</span>
			</div>

%			if ($round->published == 1) { 

				<div class="padvertmore full">

					<span class="full bigger semibold redtext centeralign">
						Round has been published!
					</span>

					<span class="full bigger semibold redtext centeralign">
						<a 
							class="buttonwhite bluetext invert"
							href="/index/tourn/postings/round.mhtml?round_id=<% $round->id %>"
						>View Schematic</a>
					</span>

				</div>
<%perl>
				next ROUND;
			}
	
			PANEL:
			foreach my $panel (@{$panels{$round->id}}) { 
		
				next if $done{"panel_".$panel->id}++;
				next if $struck_panels{$panel->id};

				my %struck;
				my $entry;

				my @judges = $m->comp( "/funclib/panel_judges.mas", panel => $panel);

				Tab::debuglog("Judges I have ".scalar @judges." vs $strikes strikes");

				next PANEL if (scalar @judges) <= $strikes;

				if ( $strikes{$panel->id} ) { 

					foreach my $ballot (@{$strikes{$panel->id}}) {
						next if $done{"ballot_".$ballot->id}++;
						$struck{$ballot->judge->id}++;
</%perl>

						<p class="marvert semibold centeralign redtext bigger">
							Struck: <% $ballot->judge->first %> <% $ballot->judge->last %>
						</p>

<%perl>
					} 
				}

				next PANEL if (scalar(keys(%struck))) > $strikes;

</%perl>

				<form 
					action   = "strike_card_save.mhtml"
					method   = "post"
				>

				<input 
					type  = "hidden"
					name  = "panel_id"
					value = "<% $panel->id %>"
				>

				<script>
					$(document).ready(function() {
						checkStrikes('<% $strikes %>', '<% $panel->id %>');
					});
				</script>

				<p class="semibold bluetext centeralign bigger">
<%perl>
					my $notfirst;

					foreach my $bentry (
						$m->comp("/funclib/panel_entries.mas", panel => $panel)
					) { 

						$entry = $bentry if $bentry->id == $round->entryid;
						$entry = $bentry if $bentry->school->id == $round->schoolid;

						$m->print(" vs.") if $notfirst++;
						$m->print($bentry->code);

					}
</%perl>
				</p>

%				if ( $no_strikes{$panel->id} ) { 
					<p class="marvert semibold centeralign greentext bigger">
						Remaining strikes forefeited
					</p>

					</form>

%					next PANEL;
%				}

%				if ($strikes - (scalar(keys %struck)) > 0) { 

				<input 
					type  = "hidden"
					name  = "entry_id"
					value = "<% $entry %>"
				>

				<span class="full nospace centeralign">

					<span class="threequarters nospace leftalign">

%						foreach my $judge (@judges) { 

							<label for="<% $judge->id %>">
							<div class="<% $panel->id %>_rows full row yellowhover marno padless">
								<span class="threequarters semibold">
									<% $judge->first %> <% $judge->last %>
								</span>
								<span class="quarter centeralign">
									<input 
										class    = "<% $panel->id %> larger notfirst"
										type     = "checkbox"
										name     = "<% $judge->id %>"
										id       = "<% $judge->id %>"
										value    = 1
										<% $struck{$judge->id} ? "checked" : "" %>
										onChange = "checkStrikes('<% $strikes %>', '<% $panel->id %>');";
									>
								</span>
							</div>
							</label>
%						}

						<label for="<% $panel->id %>_nope">
							<div class="<% $panel->id %>_rows full row yellowhover marno padless">
								<span class="threequarters semibold">
									No Strikes/Remaining Blank
								</span>
								<span class="quarter centeralign">
									<input 
										class    = "<% $panel->id %>_nope larger notfirst"
										type     = "checkbox"
										name     = "<% $panel->id %>_nope"
										id       = "<% $panel->id %>_nope"
										value    = 1
										<% $no_strikes{$panel->id} ? "checked" : "" %>
										onChange = "checkStrikes('<% $strikes %>', '<% $panel->id %>');";
									>
								</span>
							</div>
						</label>

						<div class="full libl marno">
							<span class="threequarters semibold">
							</span>
							<span class="quarter hover centeralign">
								<button 
									type    = "button"
									class   = "buttonwhite bluetext invert"
									onClick = "submitConfirm(this);";
								>Save Strikes</button>
							</span>
						</div>

					</span>

%					}

					</form>
				</span>
%			}
			</div>
%		}
	</div>

%	undef @rounds;
%	undef %panels;

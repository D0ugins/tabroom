<%args>
	$person
	$chapter_id
	$tourn_id => undef
</%args>
<%init>

	my $chapter = Tab::Chapter->retrieve($chapter_id);

	my $now = DateTime->now;
	my $grad_year_limit = $now->year;
	$grad_year_limit++ if $now->month > 8;

    my @students = Tab::Student->search_where(
		chapter   => $chapter->id,
		retired   => 0,
		grad_year => { ">=", $grad_year_limit}
	);

    @students = sort {$a->last cmp $b->last} @students;

	#These students are already linked
	my %used_students = map {$_->nsda => 1} @students;

	my $nsda_roster_ref = $m->comp("/funclib/nsda/school_roster.mas", chapter => $chapter);
	my @nsda_roster = @{$nsda_roster_ref};

	my %nsda_students = map {$_->{person_id} => $_} @nsda_roster;

	my $linked;
	my $unlinked;

	STUDENT:
	foreach my $student (@students) {

		if ($student->nsda) {

			if ($ARGS{"delink_".$student->id}) {
				$student->nsda("");
				$student->update;
				$unlinked++;

				$student->setting('student_email', 0);
				$student->setting('nsda_paid', 0);
				$student->setting('nsda_points', 0);
				$student->setting('nsda_joined', 0);
			}

		} else {

			if ($ARGS{"confirm_".$student->id}) {

				my $chosen_user_id = $ARGS{"student_".$student->id};

				next STUDENT if $used_students{$chosen_user_id};

				my $user_id = $nsda_students{$chosen_user_id}{"user_id"};

				if ($user_id) {
					# The NSDA's records on this are way better than mine
					$student->nsda($user_id);
					$student->grad_year($nsda_students{$user_id}{"grad_year"});
					$student->update();

					$m->comp("/funclib/nsda_person_link.mas",
						student => $student,
						nsda    => $user_id
					);
				}
			}
		}
	}

	my $msg = "$linked students linked to NSDA memberships with autopointing!"
		if $linked;

	my $err .= "$unlinked students de-linked from NSDA memberships and autopointing.  I hope you know what you are doing..."
		if $unlinked;

	$m->redirect("student_roster.mhtml?chapter_id=$chapter_id&tourn_id=$tourn_id&msg=$msg&err=$err");

</%init>

<%args>
	$person
	$chapter_id
	$tourn_id => undef
</%args>
<%init>

	use Tab::NSDA::MemberSchool;
	use Tab::NSDA::Person;
	use Tab::NSDA::Login;
	use Tab::NSDA::PersonSchool;

	my $chapter = Tab::Chapter->retrieve($chapter_id);

	my $now = DateTime->now;
	my $grad_year_limit = $now->year;
	$grad_year_limit++ if $now->month > 8;

    my @students = Tab::Student->search_where( 
		chapter   => $chapter->id,
		retired   => 0,
		grad_year => { ">=", $grad_year_limit}
	);

    @students = sort {$a->last cmp $b->last} @students;

	#These students are already linked
	my %used_students = map {$_->nsda => 1} @students;

	my $dbh = Tab::NSDA::PointsDBI->db_Main();

	my $sth = $dbh->prepare("

		select distinct NEW_USERS.user_id, NEW_USERS.ualt_id, NEW_USERS.grad_yr, 
			NEW_USERS.total_pts, 
			NEW_USERS.paid_status, 
			DEMOGRAPHICS.student_email, 
			high_joined.dateacquired,
			middle_joined.dateacquired

		from (NEW_USERS, NEW_USERS_TO_SCHOOLS)
		left join DEMOGRAPHICS on DEMOGRAPHICS.person_id = NEW_USERS.user_id

		left join NEW_USERS_TO_DEGREES high_joined 
			on high_joined.ualt_id = NEW_USERS.ualt_id 
			and high_joined.degree_id = 51

		left join NEW_USERS_TO_DEGREES middle_joined 
			on middle_joined.ualt_id = NEW_USERS.ualt_id 
			and middle_joined.degree_id = 21

		where NEW_USERS_TO_SCHOOLS.school_id = ? 
		and NEW_USERS_TO_SCHOOLS.ualt_id = NEW_USERS.ualt_id
		and (
			NEW_USERS.utype = 'Student'
			or 
			NEW_USERS.utype = 'MIDStudent'
			or
			NEW_USERS.utype = 'PKDStudent'
		)
		and NEW_USERS_TO_SCHOOLS.enddate = '0000-00-00 00:00:00'
		and NEW_USERS.grad_yr >= ? 
		order by NEW_USERS.ulname, NEW_USERS.ufname
	");

	$sth->execute($chapter->nsda, $grad_year_limit);

	my %nsda_students = ();

	while ( my ($user_id, $ualt_id, $grad_year, 
			$nsda_points, $nsda_paid, $student_email, 
			$high_join_date, $middle_join_date) 
		= $sth->fetchrow_array() ) 
	{

		$nsda_students{$user_id}{"user_id"} = $user_id;
		$nsda_students{$user_id}{"ualt_id"} = $ualt_id;
		$nsda_students{$user_id}{"grad_year"} = $grad_year;
		$nsda_students{$user_id}{"nsda_points"} = int($nsda_points);
		$nsda_students{$user_id}{"nsda_paid"} = $nsda_paid;
		$nsda_students{$user_id}{"student_email"} = $student_email;

		if ($high_join_date) { 

			my $datetime = DateTime::Format::MySQL->parse_datetime($high_join_date);
			$nsda_students{$user_id}{"nsda_joined"} = $datetime;

		} elsif ($middle_join_date) { 
			my $datetime = DateTime::Format::MySQL->parse_datetime($middle_join_date);
			$nsda_students{$user_id}{"nsda_joined"} = $datetime;
		}

	}

	my $linked;
	my $unlinked;

	Tab::Student->set_sql( update_email => "
		update points.DEMOGRAPHICS demo, points.NEW_USERS person
		set demo.student_email = ? 
		where demo.person_id = person.user_id
		and person.user_id = ? 
	");

	STUDENT:
	foreach my $student (@students) {

		if ($student->nsda) { 

			if ($ARGS{"delink_".$student->id}) { 
				$student->ualt_id("");
				$student->nsda("");
				$student->update;
				$unlinked++;

				$student->setting('student_email', 0);
				$student->setting('nsda_paid', 0);
				$student->setting('nsda_points', 0);
				$student->setting('nsda_joined', 0);
			}

		} else { 

			if ($ARGS{"confirm_".$student->id}) {

				my $chosen_user_id = $ARGS{"student_".$student->id};

				next STUDENT if $used_students{$chosen_user_id};

				my $chosen_user_id = $nsda_students{$chosen_user_id}{"user_id"};

				if ($chosen_user_id) { 
					# The NSDA's records on this are way better than mine
					$student->nsda($chosen_user_id);
					$student->grad_year($nsda_students{$chosen_user_id}{"grad_year"});  
					$student->ualt_id($nsda_students{$chosen_user_id}{"ualt_id"});
					$student->update();

					$m->comp("/funclib/nsda_person_link.mas", 
						student => $student,
						nsda    => $chosen_user_id
					);
				}
			}
		}
	}

	my $msg = "$linked students linked to NSDA autopointing!  YAY! " 
		if $linked;

	my $err .= "$unlinked students de-linked to NSDA autopointing.  I hope you know what you are doing..." 
		if $unlinked;

	$m->redirect("student_roster.mhtml?chapter_id=$chapter_id&tourn_id=$tourn_id&msg=$msg&err=$err");
	
</%init>

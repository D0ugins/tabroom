<%args>
	$person
	$person_settings
	$district_id => undef
	$name        => undef
	$city        => undef
	$state       => undef
</%args>
<%init>

	my $district = Tab::District->retrieve($district_id) 
		if $district_id;

	$m->abort unless $district;

	my $permission = Tab::Permission->search( 
		district => $district->id,
		person   => $person->id 
	)->first;

	$permission++ if $person->site_admin;
	$permission++ if $person_settings->{"nsda_admin"};

	unless ($permission) { 
		$m->print('<div class="main"><h4 class="warning">');
		$m->print("You do not have access to that district");
		$m->print('</h4></div>');
		$m->abort();
	}

	my @exists = $m->comp(
		"/funclib/district_tourns.mas", 
		district => $district
	);

	my $existing = $exists[0] if @exists;

	my %questions = $m->comp("/funclib/districts_awards.mas");

	my $tz = $existing->tz if $existing;
	$tz = $person->tz unless $tz;
	$tz = "America/Chicago" unless $tz;

</%init>

	<div class="menu">

		<& "nsda_step.mas", step => 1 &>

		<div class="sidenote">

			<h5>Districts Signup Notes</h5>

			<p>
				This year, you should create a district tournament series
				within Tabroom whether or not you will be using it to tabulate.
				The Tabroom district listing will inform the NSDA Office of
				information we need to know about events, dates, and locations.
				Also, once your district tournament(s) are finished, you will
				upload results into Tabroom even if you tabulation on Joy of
				Tournaments.
			</p>

			<p>
				This process will streamline both Nationals registration, and
				will allow district chairs to confirm promotion of alternates
				for declined entries to Nationals. 
			</p>

			<p>
				All districts on Tabroom will consist of one and only one
				master tournament.  You can configure a tournament to run on
				multiple weekends now to support that; the tournament will have
				separate dates, registration deadlines, etc for each weekend
				you run on. 
			</p>


		</div>

	
	</div>

	<div class="main">

		<h2>Create a New District Tournament</h2>

		<form 
			action = "district_tournament_create_events.mhtml"
			method = "post"
		>

		<input 
			type  = "hidden"
			name  = "district_id"
			value = "<% $district->id %>"
		>

		<h4>General Information</h4>

			<div class="row">

				<span class="third ">
					Time Zone
				</span>

				<span class="twothirds">
				
					<select 
						name  = "tz"
						class = "fixedbig"
					>

						<& 
							"/funclib/timezones.mas", 
							country => "US",
							tz      => $tz
						&>

					</select>
				</span>

			</div>

			<h4>Dates/Weekends</h4>

			<p>
				If you don't know the precise dates of all your weekends, put
				in your best estimate; it can be changed later.  Dates must be
				finalized by Oct 31 if your district series starts in 2018 or
				Nov 30 if your district series starts in 2019.
			</p>

			<p>
				There's no need to include your district name in the weekend
				name; that will be included automatically.  Names like "IE
				&amp; Congress" or "Debate" are fine.

				<span class="semibold redtext inline">
					Be sure to list the weekend of your Big Questions event (and
					register by Nov 15th) if you want to qualify for grant funding.
				</span>

			</p>

%			my @weekends = $existing->weekends() if $existing;

%			foreach my $notch (1 .. 5) { 

%				my $weekend = shift @weekends if @weekends;

				<div class="row">

					<span class="tenth semibold">
						<% $notch %>.
					</span>

					<span class="twofifths">
						<input 
							type        = "text"
							name        = "name_<% $notch %>"
							size        = "32"
							placeholder = "Weekend Label (IE, Debate, Congress, etc)"
							value       = "<% $weekend ? $weekend->name : "" %>"
						>
					</span>

					<span class="fifth">

						<& "/funclib/datepicker.mas", id => "start_".$notch &>

						<input 
							name        = "start_date_<% $notch %>"
							type        = "text"
							id          = "start_<% $notch %>"
							size        = 12
							placeholder = "Start Date"
							value       = "<% $weekend ? Tab::pickerdate($weekend->start) : "" %>"
						>
					</span>

					<span class="fifth">

						<& "/funclib/datepicker.mas", id => "end_".$notch &>

						<input 
							name        = "end_date_<% $notch %>"
							type        = "text"
							id          = "end_<% $notch %>"
							size        = 12
							placeholder = "End Date"
							value       = "<% $weekend ? Tab::pickerdate($weekend->end) : "" %>"
						>
					</span>

				</div>
%			}

			<h4 class="martopmore">Rules</h4>

			<div class="nospace">
				<p>
					The NSDA is piloting a simplified version of the district
					tournament series in 2018-2019.  
				</p>
				
				<p>
					The format of these rules is designed to more closely
					follow the setup of a traditional tournament.  They should
					hopefully be more familiar to both coaches and students and
					easier to run.  Districts can pilot the speech, debate, or
					Congress method, or any combination of the three.  If you
					use the pilot rules for all three you can choose to tab on
					Speechwire as well as Tabroom/JOT.
				</p>
				
				<p>

					If you elect to use the rules be aware that some additional
					setup is required on Tabroom.  The rules were passed
					sufficiently recently that we're still configuring things.
					The pilot manual will be on the NSDA website at 
				</p>

				<p class="centeralign">
					<a 
						class = "bluetext semibold inline"
						href  = "https://www.speechanddebate.org/pilot-district-qualification-manual"
					>https://www.speechanddebate.org/pilot-district-qualification-manual</a>.
				</p>

			</div>

			<script>
				function checkSpeech() { 
					if ($("#nsda_pilot_speech").prop('checked')) { 
						$(".ierules").addClass("hidden");
					
						if ($("#nsda_pilot_debate").prop('checked')) { 
							if ($("#nsda_pilot_congress").prop('checked')) { 
								$(".speechwire").removeClass("hidden");
							} else {
								$(".speechwire").addClass("hidden");
							}
						} else { 
							$(".speechwire").addClass("hidden");
						}

					} else { 
						$(".ierules").removeClass("hidden");
						$(".speechwire").addClass("hidden");
					}
				} 
				
				function checkTabroom() { 
					if ($("#tabroom").prop('checked')) { 
						$(".tabroom_first").removeClass("hidden");
					} else { 
						$(".tabroom_first").addClass("hidden");
					}
				} 

				$(document).ready(function() {
					checkSpeech();
					checkTabroom();
				});

			</script>

			<div class="row">

				<span class="quarter semibold redtext padvertmore marvertmore">
					Use Pilot District Rules:
				</span>

				<label for="nsda_pilot_speech">
					<span class="hover quarter nospace centeralign">
						Speech
						<input 
							type  = "checkbox"
							name  = "nsda_pilot_speech"
							id    = "nsda_pilot_speech"
							value = "1"
							<% $existing && $existing->setting("nsda_pilot_speech")
								? 'checked="checked"' 
								: ""
							%>
							onChange = "checkSpeech();";
						>
					</span>
				</label>

				<label for="nsda_pilot_debate">
					<span class="hover quarter nospace centeralign">
						Debate
						<input 
							type  = "checkbox"
							name  = "nsda_pilot_debate"
							id    = "nsda_pilot_debate"
							value = "1"
							<% $existing && $existing->setting("nsda_pilot_debate")
								? 'checked="checked"' 
								: ""
							%>
							onChange = "checkSpeech();";
						>
					</span>
				</label>

				<label for="nsda_pilot_congress">
					<span class="hover quarter nospace centeralign">
						Congress
						<input 
							type  = "checkbox"
							name  = "nsda_pilot_congress"
							id    = "nsda_pilot_congress"
							value = "1"
							<% $existing && $existing->setting("nsda_pilot_congress")
								? 'checked="checked"' 
								: ""
							%>
							onChange = "checkSpeech();";
						>
					</span>
				</label>

			</div>

			<div class="row">

				<span class="quarter semibold">
					Tabbing Software
				</span>

				<label for="tabroom">
					<span class="quarter leftalign hover">
						<input 
							type    = "radio"
							name    = "nsda_tabbing_software"
							id      = "tabroom"
							value   = "tabroom"
							<% $existing && $existing->setting("nsda_tabbing_software") ne "jot"
								? 'checked="checked"' 
								: ""
							%>
							onChange = "checkTabroom();";
						>Tabroom.com
					</span>
				</label>

				<label for="jot">
					<span class="quarter leftalign hover">
						<input 
							type    = "radio"
							name    = "nsda_tabbing_software"
							id      = "jot"
							value   = "jot"
							<% $existing && $existing->setting("nsda_tabbing_software") eq "jot"
								? 'checked="checked"' 
								: ""
							%>
							onChange = "checkTabroom();";
						>Joy of Tournaments
					</span>
				</label>

				<label for="speechwire">
					<span class="quarter leftalign hover speechwire hidden">
						<input 
							type    = "radio"
							name    = "nsda_tabbing_software"
							id      = "speechwire"
							value   = "speechwire"
							<% $existing && $existing->setting("nsda_tabbing_software") eq "speechwire"
								? 'checked="checked"' 
								: ""
							%>
						>Speechwire.com
					</span>
				</label>

				<div class="full nospace">
					<p>
						The software you choose  must be used for all events of the
						district tournament series.  
					</p>
						
					<p>
						At the conclusion of the district tournament series,
						you will be responsible for uploading any results from
						JOT or Speechwire to Tabroom.  We'll provide
						instructions on how to do so. 
					</p>

				</div>
			
				<div class="full redtext semibold centeralign">
					Remember: as of this year, scheduling &amp; tabbing by hand
					is no longer an option for Districts
				</div>

			</div>

			<div class="row ierules">

				<span class="quarter semibold">
					IE Ruleset
				</span>

				<label for="doubledown">
			
					<span class="quarter leftalign hover">

						<input 
							type  = "radio"
							name  = "nsda_speech_method"
							id    = "doubledown"
							value = "doubledown"
							<% $existing && $existing->setting("nsda_speech_method") eq "doubledown"
								? 'checked="checked"' 
								: ""
							%>
						
						>Double Downs

					</span>

				</label>

				<label for="california_3">

					<span class="quarter leftalign hover">

						<input 
							type  = "radio"
							name  = "nsda_speech_method"
							id    = "california_3"
							value = "california_3"
							<% $existing && $existing->setting("nsda_speech_method") eq "california_3" 
								? 'checked="checked"' 
								: ""
							%>
						>CA Plan w/3 judges

					</span>

				</label>

				<label for="california_2">

					<span class="quarter leftalign hover marno">

						<input 
							type  = "radio"
							name  = "nsda_speech_method"
							id    = "california_2"
							value = "california_2"
							<% $existing && $existing->setting("nsda_speech_method") eq "california_2" 
								? 'checked="checked"' 
								: ""
							%>
						>CA Plan w/2 judges

					</span>

				</label>

			</div>

			<label for="nsda_tabroom_first">
				<div class="row tabroom_first hidden hover">

					<span class="threequarters semibold">
						Is this your first time using Tabroom for districts?
					</span>
			
					<span class="quarter leftalign hover">

						<input 
							type  = "checkbox"
							name  = "nsda_tabroom_first"
							id    = "nsda_tabroom_first"
							value = 1
							<% $existing && $existing->setting("nsda_tabroom_first")
								? 'checked="checked"' 
								: ""
							%>
						> Yes
					</span>
				</div>
			</label>

			<h4 class="martopmore ltborderbottom">Questions &amp; Orders</h4>

%			foreach my $key (sort keys %questions) { 
	

				<span class="pagehalf borderbottom">

					<span class="threefifths marno padless">
						<% $questions{$key}{"text"} %>
					</span>

					<label for="<% $questions{$key}{"label"} %>_yes">
						<span class="fifth hover">
							<input 
								type  = "radio"
								id    = "<% $questions{$key}{"label"} %>_yes"
								name  = "<% $questions{$key}{"label"} %>"
								value = "1"
								<% $existing && $existing->setting($questions{$key}{"label"}) 
									? 'checked="checked"' 
									: ""
								%>
							> Yes
						</span>
					</label>

					<label for="<% $questions{$key}{"label"} %>_no">
						<span class="fifth hover">
							<input 
								type  = "radio"
								id    = "<% $questions{$key}{"label"} %>_no"
								name  = "<% $questions{$key}{"label"} %>"
								value = "0"
								<% $existing && $existing->setting($questions{$key}{"label"}) 
									? ""
									: 'checked="checked"' 
								%>
							> No
						</span>
					</label>
				</span>
%			}

			<div class="liblrow rightalign">
				<input 
					type  = "submit"
					value = "Step Two: Assign Events to Dates"
				>

				</form>
			</div>

	</div>

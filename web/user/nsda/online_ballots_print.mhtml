<%args>
	$person
	$person_settings
	$district_id
	$tourn_id
	$session
</%args>
<%init>

	my $tourn = Tab::Tourn->retrieve($tourn_id) if $tourn_id;

	my $district = Tab::District->retrieve($district_id) if $district_id;
	my $is_chair;
	my $is_member;

	my %committee = $m->comp(
		"/funclib/district_committee.mas", 
		district => $district
	);  

	foreach my $role ("chair", "member", "alternate") { 
		next unless $committee{$role};
		foreach my $member (@{$committee{$role}}) { 
			if ($member->id == $person->id) { 
				$is_chair++ if $role eq "chair";
				$is_member++;
			}
		}
	}   

	$is_chair++ if $person->site_admin;
	$is_chair++ if $person_settings->{"nsda_admin"};

	unless ($is_chair || $is_member) { 
		my $err = "Only district committee members may access online ballots.";
		$m->redirect("/user/home.mhtml?err=$err");
	}

	my $school = Tab::School->search( 
		tourn	=> $tourn->id,
		district => $district->id,
		chapter  => 0
	)->first;

	unless ($tourn && $school) { 
		$m->comp("/funclib/abort.mas", 
			warning => "Tournament not found for ID $tourn_id or diocese not found for district $district_id"
		);
	}

    my $tourn_name = $tourn->name;
    my $school_name = $school->name if $school;

    $tourn_name =~ s/[\W_]//g;
    $school_name =~ s/[\W_]//g;

	my $name = $tourn_name."-".$school_name;

    my $filename = "Ballots-$name-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;

    `rm -f $filepath.*`; 

    $m->comp("/funclib/printout.mas", 
		tourn    => $tourn,
		filename => $filename,
		head     => 1,
		debug    => 1,
		array    => 1.6 );

    open (TEXOUT, ">>$filepath.tex");
	
	Tab::Ballot->set_sql( school_ballots => "
		select distinct ballot.*
		from ballot, entry, panel, round
		where entry.school = ? 
		and entry.id = ballot.entry
		and ballot.panel = panel.id
		and panel.round = round.id
		and round.post_results > 1
		order by entry.event, entry.code, entry.id, round.name
	");

	my @ballots = Tab::Ballot->search_school_ballots($school->id);

	if ($school) { 
		unless (@ballots) { 
			my $msg = $school->short_name." has no published results to print";
			$m->redirect("online_ballots.mhtml?district_id=".$district->id."&tourn_id=".$tourn->id."&err=$msg");
		}
	}

	next unless @ballots;

		print TEXOUT "\\noindent\n";

		print TEXOUT "\\strut \\hfill {\\bf \\LARGE ".Tab::texify($school->name)." } \\hfill \\strut \n";

		print TEXOUT "\\smallskip \\newline\n";
		print TEXOUT "\\strut \\hfill {\\LARGE \\bf ONLINE BALLOTS } \\hfill \\strut\n";

		print TEXOUT "\\bigskip \\newline\n";

		my $now = DateTime->now;    
		$now->set_time_zone($tourn->tz);

		my $current_entry;

		my $switch;

		foreach my $ballot (@ballots) {

			my $panel = $ballot->panel;
			my $judge = $ballot->judge;

			my @scores = sort {$a->tag cmp $b->tag} $ballot->scores;

			my @entries = $m->comp("/funclib/panel_entries.mas", panel => $panel);

			my $aff_string = $panel->round->event->setting("aff_string");
			my $neg_string = $panel->round->event->setting("neg_string");

			$aff_string = "Aff" unless $aff_string;
			$neg_string = "Neg" unless $neg_string;

			unless ($ballot->entry->id == $current_entry) { 

				if ($current_entry) { 
					print TEXOUT "\\newpage\n";
				}

				$current_entry = $ballot->entry;

				print TEXOUT "\\noindent\n";
		
				print TEXOUT "{\\Large \\bf ";
				print TEXOUT Tab::texify($tourn->name) ." \\hfill ";
				print TEXOUT Tab::texify($current_entry->name)." Results} \\\\ \n";
				print TEXOUT "\\medskip\n";
				print TEXOUT "\\newline\n";
				print TEXOUT "\\small\n";

				undef $switch;
				
			}

			print TEXOUT "\\noindent\n";
			print TEXOUT "\\begin{tabular}{p{1in}p{1.5in}p{.5in}p{2in}p{1.5in}}\n";
			print TEXOUT "\\rowcolor[rgb]{.92,.92,.94}\[5.5pt\]\[5.5pt\]\n" unless $switch++ % 2;

			print TEXOUT Tab::texify($panel->round->realname)." \\hfill ";
			print TEXOUT Tab::texify($aff_string)." & " if $ballot->side == 1;
			print TEXOUT Tab::texify($neg_string)." & " if $ballot->side != 1;
			print TEXOUT Tab::texify($judge->first." ".$judge->last) if $judge;
			print TEXOUT " & ";

			my $results;

			$results .= "FFT " if $ballot->forfeit;
			$results .= "BYE " if $ballot->bye;
			$results .= "BYE " if $panel->bye;

			foreach my $score (@scores) { 
				$results .= "Win  " if $score->tag eq "ballot" && $score->value == 1;
				$results .= "Loss  " if $score->tag eq "ballot" && $score->value != 1;
			}

			print TEXOUT Tab::texify($results)." & ";

			my %student_results;

			foreach my $score (sort {$a->position <=> $b->position} @scores) { 
				next if $score->tag eq "rfd";
				next if $score->tag eq "ballot";
				next if $score->tag eq "comment";
				next if $score->tag eq "categories";
				$student_results{$score->student}{"position"} = $score->position if $score->tag eq "points";
				$student_results{$score->student}{$score->tag} = $score->value;
				$student_results{$score->student}{"student"} = $score->student;
			}

			my $notfirst;

			print TEXOUT "\\small\n";

			foreach my $student_id (
				sort {$student_results{$a}{"position"} <=> $student_results{$b}{"position"}}
				keys (%student_results)
			) { 
	
				next unless $student_id;
				print TEXOUT "\\newline\n" if $notfirst++;
				my $name = $student_results{$student_id}{"student"}->first." ".$student_results{$student_id}{"student"}->last;

				print TEXOUT "\\parbox{1in}{ ";
				print TEXOUT Tab::texify($student_results{$student_id}{"position"}).". ";
				print TEXOUT Tab::texify($name);
				print TEXOUT " }\n";

				print TEXOUT "\\parbox{.25in}{ ";
				print TEXOUT Tab::texify($student_results{$student_id}{"points"});
				print TEXOUT " } \n";

				if ($student_results{$student_id}{"rebuttal_points"}) { 
					print TEXOUT "\\parbox{.6in}{ Reply: ";
					print TEXOUT Tab::texify($student_results{$student_id}{"rebuttal_points"});
					print TEXOUT " } \n";
				}

			}

			print TEXOUT " & ";


			foreach my $opponent (@entries) { 

				next if $opponent->id == $ballot->entry->id;

				print TEXOUT "\\scriptsize \\emph{vs.} ";
				print TEXOUT Tab::texify($opponent->code."  ");
				print TEXOUT "\\newline\n";
				print TEXOUT Tab::texify($opponent->name)." ";

				print TEXOUT "\\newline\n";
				print TEXOUT Tab::texify(Tab::short_name($opponent->schoolname)." ");

			}

			print TEXOUT "\n \\end{tabular}\n";

			my $newline = "\\newline\n";
			my $rfd;
			my $comments;
			my @categories;

			foreach my $score (@scores) { 
				$rfd = $score->content if $score->tag eq "rfd";
				$comments = $score->content if $score->tag eq "comments";
				push @categories, $score if $score->tag eq "categories";
			}

			my $strip = HTML::Strip->new();
			$rfd = $strip->parse($rfd);
			$rfd =~ s/[^[:ascii:]]//g;
			$rfd =~ s/^\s+//; 
			$rfd =~ s/\s+$//;
			$rfd = Tab::texify($rfd);
			$rfd =~ s/\R/$newline/g;

			$comments = $strip->parse($comments);
			$comments =~ s/[^[:ascii:]]//g;
			$comments =~ s/^\s+//; 
			$comments =~ s/\s+$//;
			$comments = Tab::texify($comments);
			$comments =~ s/\R/$newline/g;

			if ($rfd) { 
				print TEXOUT "\\smallskip \\newline\n";
				print TEXOUT "\\indent \\large{\\bf \\color{black!72} RFD}\n\n\\small\n";
				print TEXOUT $rfd;
			}

			if ($comments) { 
				if ($rfd) { 
					print TEXOUT "\\medskip \\newline\n";
					print TEXOUT "\\hrulefill\n";
				}
				print TEXOUT "\\indent \\large{\\bf \\color{black!72} Comments}\n\n\\small\n";
				print TEXOUT $comments;
			}

			undef $notfirst;

			if (@categories) { 

				print TEXOUT "\\medskip \\newline\n";
				print TEXOUT "\\indent \\large{\\bf \\color{black!72} Speech Cateogry Scores}\n\n\\small\n";
				print TEXOUT "\\noindent\n";
				print TEXOUT "\\hrulefill\n";

				foreach my $category (sort {$a->position <=> $b->position} @categories) { 
					print TEXOUT "\\newline\n";
					print TEXOUT "\\parbox{1in}{ Point subscores }\n";
					print TEXOUT "\\parbox{1.5in}{ ".Tab::texify($category->student->last." ".$category->student->first)." }\n";
					print TEXOUT "\\parbox{4in}{ ".Tab::texify($category->content)." }\n\n";
					print TEXOUT "\\noindent\n";
					print TEXOUT "\\hrulefill\n";
				}

			}

			if ($rfd || $comments) { 
				print TEXOUT "\\bigskip \n";
			}

			print TEXOUT "\\newline\n";

		}

    $m->comp("/funclib/printout.mas", 
		tourn    => $tourn,
		filename => $filename,
		tail     => 1,
		array    => 1.6,
		debug    => 1
	);


</%init>

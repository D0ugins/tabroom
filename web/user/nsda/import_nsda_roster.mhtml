<%args>
	$person
	$chapter_id => undef
	$confirm    => undef
	$return     => undef
</%args>
<%init>

	use Tab::NSDA::MemberSchool;
	use Tab::NSDA::Person;
	use Tab::NSDA::Login;
	use Tab::NSDA::PersonSchool;

  use JSON;
  use JSON::PP::Boolean;
  use MIME::Base64;
  use REST::Client;

	my $chapter = Tab::Chapter->retrieve($chapter_id) if $chapter_id;

	unless ($chapter) {
		$m->comp("/funclib/abort.mas", message => "No valid chapter ID sent: $chapter_id");
	}

	my $now = DateTime->now;
	my $grad_year_limit = $now->year;
	$grad_year_limit++ if $now->month > 8;

    my @students = Tab::Student->search_where(
		chapter => $chapter->id,
		retired => 0,
		grad_year => { ">=", $grad_year_limit}
	);

    @students = sort {$a->last cmp $b->last} @students;

	# sorts already linked people to the bottom;
    @students = sort {length($a->nsda) <=> length($b->nsda)} @students;

#	Tab::NSDA::Person->set_sql( students => "
#		select distinct NEW_USERS.*
#		from NEW_USERS, NEW_USERS_TO_SCHOOLS
#		where NEW_USERS_TO_SCHOOLS.school_id = ?
#		and NEW_USERS_TO_SCHOOLS.ualt_id = NEW_USERS.ualt_id
#		and (
#			NEW_USERS.utype = 'Student'
#			or NEW_USERS.utype = 'PKDStudent'
#			or NEW_USERS.utype = 'MIDStudent'
#		)
#		and NEW_USERS_TO_SCHOOLS.enddate = '0000-00-00 00:00:00'
#		and NEW_USERS.grad_yr >= ?
#		order by NEW_USERS.ulname, NEW_USERS.ufname
#	");
#
#	my @nsda_students = Tab::NSDA::Person->search_students( $chapter->nsda, $grad_year_limit );

  my $client = REST::Client->new( host => "https://api.speechanddebate.org/v2" );

  my $auth_header = encode_base64($Tab::nsda_api_v2_user.":".$Tab::nsda_api_v2_token);

  my $nsda_school_id = $chapter->nsda;
  
  $nsda_school_id = $nsda_school_id + 10000;

  my $path = "/schools/".$nsda_school_id."/members?quick=true";

  $client->GET(
    $path,
    {
      'Authorization' => "Basic $auth_header",
      'Accept'        => 'application/json'
    }
  );

  my $json  = JSON->new->allow_nonref->utf8->relaxed
              ->escape_slash->loose->allow_singlequote
              ->allow_barekey;

  my $json_arr = $json->decode($client->responseContent());

	my %used_students = map {$_->nsda => 1} @students;

	my %student_name = map {$_->first." ".$_->middle." ".$_->last => 1} @students;
	my %student_grad = map {$_->first." ".$_->middle." ".$_->last => $_->grad_year} @students;

	my $school_year = Tab::school_year();

	if ($confirm) {

		my $count;

		NSDA:
		foreach my $nsda_student (@{$json_arr}) {

			next if $used_students{$nsda_student->{person_id}};
			next if $ARGS{"exclude_".$nsda_student->{person_id}};
      next if $nsda_student->{role} ne "Student";

			my $name = lc($nsda_student->{first}." ".$nsda_student->{middle}."
".$nsda_student->{last});

			# Prevent duplications.
			next if $student_name{$name};

			my $grad_year = $nsda_student->{grad_year};
			$grad_year = $school_year unless $grad_year;

			my $student = Tab::Student->create({
				first     => $nsda_student->{first},
				last      => $nsda_student->{last},
				chapter   => $chapter->id,
				grad_year => $nsda_student->{grad_year},
				novice    => 0,
				retired   => 0,
				nsda      => $nsda_student->{person_id}
			});

			$m->comp("/funclib/nsda_person_link.mas", student => $student);

			$used_students{$nsda_student->{person_id}}++;
			$student_name{$name}++;
			$count++;
		}

		return if $return;
		my $msg = "$count entrants imported from the NSDA to your roster";
		$m->redirect("/user/chapter/students.mhtml?chapter_id=$chapter_id&msg=$msg");

	}

</%init>

	<& "menu.mas",
		person => $person,
		whoami => "import"
	&>

	<div class="main">

		<span class="threequarters nospace">
			<h2 class="nospace">Import NSDA Roster for <% $chapter->name %></h2>
		</span>

		<span
			class = "quarter rightalign"
			id    = "nsda_roster_buttonarea"
		> </span>

		<& "/funclib/tablesorter.mas",
			table => "nsda_roster"
		&>

		<form
			action = "import_nsda_roster.mhtml"
			method = "post"
		>

		<input
			type  = "hidden"
			name  = "chapter_id"
			value = "<% $chapter_id %>"
		>

		<p class="centeralign bluetext semibold">
			The following competitors will be added to your Tabroom.com roster:
		</p>

		<table id="nsda_roster">

			<thead>
				<tr class="smallish yellowrow">

					<th>
						First
					</th>

					<th>
						Last
					</th>

					<th>
						Grad Year
					</th>

					<th>
						Membership ID
					</th>

					<th>
						Exclude?
					</th>

				</tr>
			</thead>

			<tbody>

%				foreach my $nsda_student (@{$json_arr}) {

%					next if $used_students{$nsda_student->{person_id}};
%					next if $nsda_student->{role} ne "Student";

					<tr class="smallish">

						<td>
							<% $nsda_student->{first} %>
						</td>

						<td>
							<% $nsda_student->{last} %>
						</td>

						<td class="centeralign">
							<% $nsda_student->{grad_year} %>
						</td>

						<td class="centeralign">
							<% $nsda_student->{person_id} %>
						</td>

						<td class="nospace">

							<label for="exclude_<% $nsda_student->{person_id} %>">

								<span class="full redhover nowrap centeralign marno">
									<span class="redtext semibold inline">
										Exclude:
									</span>
									<input
										type  = "checkbox"
										value = "1"
										id    = "exclude_<% $nsda_student->{person_id} %>"
										name  = "exclude_<% $nsda_student->{person_id} %>"
									>
								</span>
							</label>
						</td>
					</tr>
%				}

			</tbody>

			<tr class="liblrow">

				<td colspan="5" class="rightalign">
					<input
						type  = "submit"
						name  = "confirm"
						value = "Import Students"
					>
					</form>
				</td>

			</tr>

		</table>

	</div>

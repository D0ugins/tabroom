<%init>

	use JSON;

	my $date_limit = "2017-05-01 00:00:00";

	Tab::Tourn->columns(TEMP => "naudl_league");

	Tab::Tourn->set_sql( naudl_attendance => "
		select tourn.*, naudl.value as naudl_league
		from (tourn, tourn_circuit, circuit)
		left join circuit_setting naudl 
			on circuit.id = naudl.circuit
			and naudl.tag = 'naudl_league_code'

			where tourn.start > ? 
			and tourn.end < NOW()
			and tourn.hidden != 1
			and tourn.id = tourn_circuit.tourn
			and circuit.id = tourn_circuit.circuit

			and not exists ( 
				select tourn_setting.id
				from tourn_setting
				where tourn_setting.tourn = tourn.id
				and tourn_setting.tag = 'naudl_processed'
			)

			and exists (
				select school.id
				from school, chapter, chapter_circuit, region, circuit_setting
				where school.tourn = tourn.id
				and school.chapter = chapter.id
				and chapter.naudl = 1
				and chapter_circuit.chapter = chapter.id
				and chapter_circuit.region = region.id
				and chapter_circuit.circuit = circuit_setting.circuit
				and circuit_setting.tag = 'naudl'
			)

		group by tourn.id
	");

	my @tourns = Tab::Tourn->search_naudl_attendance($date_limit);

	my %json_tourns = ();

	foreach my $tourn (@tourns) { 

		my $league = $tourn->naudl_league;
		$league = "a0IE0000004hec4" unless $league;

		my $location = $tourn->city.", " if $tourn->city;
		$location .= $tourn->state;

		my %tourn_info = (
			TournID  => "TR".$tourn->id,
			Name     => $tourn->name,
			Location => $location,
			Date     => DateTime::Format::MySQL->format_datetime($tourn->start),
			League   => $league
		);

		push @{$json_tourns{"tourns_from_tabroom"}}, \%tourn_info;

	}

	$m->clear_buffer();
	$r->content_type('application/json');
	my $json = encode_json(\%json_tourns);

	$m->print($json);

	$m->flush_buffer();
	$m->abort();

</%init>

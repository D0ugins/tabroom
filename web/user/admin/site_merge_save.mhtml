<%args>
	$person
	$name      => undef
	$target_id => undef
	$merge_id  => undef
</%args>
<%init>

	Tab::TournSite->set_sql(site_merge => "
		update tourn_site set site = ? where site  = ? 
	");

	Tab::Weekend->set_sql(site_merge => "
		update weekend set site = ? where site  = ? 
	");

	Tab::Round->set_sql(site_merge => "
		update round set site = ? where site  = ? 
	");

	Tab::JPool->set_sql(site_merge => "
		update jpool set site = ? where site  = ? 
	");

	Tab::Room->set_sql( delete_rooms => "
		delete from room where site = ? 
	");

	Tab::Room->set_sql( delete_ts => "
		delete from tourn_site where site = ? 
	");

	Tab::Panel->set_sql(room_merge => "
		update panel set room = ? where room  = ? 
	");

	Tab::RoomStrike->set_sql(room_merge => " 
		update room_strike set room = ? where room  = ? 
	");

	Tab::RPoolRoom->set_sql(room_merge => "
		update rpool_room set room = ? where room  = ?
	");

	my $target = Tab::Site->retrieve($target_id);
	my $merge = Tab::Site->retrieve($merge_id);

	my $room_counter;

	my $msg;

	if ($target && $merge && $target != $merge) { 

		my %target_rooms_by_name = ();
		my %merge_rooms_by_name = ();
		
		foreach my $room ($merge->rooms) { 
			my $tag = lc($room->name);
			$tag =~ s/[\W_]//g;
			$merge_rooms_by_name{$tag} = $room;
		}

		foreach my $room ($target->rooms) { 
			my $tag = lc($room->name);
			$tag =~ s/[\W_]//g;
			$target_rooms_by_name{$tag} = $room;
		}

		foreach my $merge_room (keys %merge_rooms_by_name) { 

			if ($target_rooms_by_name{$merge_room}) { 

				Tab::Panel->sql_room_merge->execute(
					$target_rooms_by_name{$merge_room}, 
					$merge_rooms_by_name{$merge_room}, 
				);
				Tab::RoomStrike->sql_room_merge->execute(
					$target_rooms_by_name{$merge_room},
					$merge_rooms_by_name{$merge_room}, 
				);
				Tab::RPoolRoom->sql_room_merge->execute(
					$target_rooms_by_name{$merge_room},
					$merge_rooms_by_name{$merge_room}, 
				);

				if ($target_rooms_by_name{$merge_room}->deleted 
					&! $merge_rooms_by_name{$merge_room}->deleted
				) {
					$target_rooms_by_name{$merge_room}->deleted(0);
					$target_rooms_by_name{$merge_room}->update();
				}

				$room_counter++;

			} else { 

				$merge_rooms_by_name{$merge_room}->site($target->id);
				$merge_rooms_by_name{$merge_room}->update();
			}

		}

		eval { 
			Tab::TournSite->sql_site_merge->execute(
				$target->id, $merge->id
			);
		};

		eval { 
			Tab::Weekend->sql_site_merge->execute(
				$target->id, $merge->id
			);
		};

		Tab::Round->sql_site_merge->execute(
			$target->id, $merge->id
		);

		Tab::JPool->sql_site_merge->execute(
			$target->id, $merge->id
		);

		$msg .= "Site ".$merge->name." has been merged into ".$target->name."  $room_counter rooms deduplicated";

		Tab::Room->sql_delete_ts->execute($merge->id);
		Tab::Room->sql_delete_rooms->execute($merge->id);
		$merge->delete();

	}

	$m->redirect("site_merge.mhtml?target_id=$target_id&name=$name&msg=$msg");

</%init>

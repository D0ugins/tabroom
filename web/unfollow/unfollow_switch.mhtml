<%args>
	$target_id     => undef
	$property_name => undef
	$other_value   => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($target_id) { 
		$m->print('{ "error": true, "message": "No person ID sent"}');
		$m->abort();
	}

	my $follower = Tab::Person->retrieve($target_id);

	unless ($follower) { 
		$m->print('{ "error": true, "message": "No person found for ID '.$target_id.'"}');
		$m->abort();
	}

	my $now = DateTime->now();

	my $message;

	if ($property_name eq "send_code") { 

		my $token = $m->comp(	
			"/funclib/generate_randomstring.mas",
			number => 1,
			length => 6
		);

		eval { 
			$follower->setting("phone_token", 0);
			$follower->setting("phone_token", $token);
		};

		eval { 
			$follower->setting("phone_token_date", 0);
			$follower->setting("phone_token_date", "date", $now);
		};

		my $body = "Your Tabroom confirmation code to stop updates is $token . Expires in 24 hours. ";
		my $to = $follower->phone.'@'.$follower->provider;

		$m->comp(
			"/funclib/send_notify.mas",
			to   => $to,
			body => $body
		);

		$message = "Confirmation code texted to ".$follower->phone;

	}

	if ($property_name eq "confirm") { 

		$other_value =~ s/\s+//;  #Remove whitespace

		my $token_date = $follower->setting("phone_token_date");
		$token_date->add(hours => 24) if $token_date;

		if (
			$follower->setting("phone_token") eq $other_value
			&& $token_date->epoch > $now->epoch
		) { 

			$follower->phone("");
			$follower->provider("");
			$follower->update();

			$follower->setting("phone_token", 0);
			$follower->setting("phone_token_date", 0);

			$message = "Your phone number has been removed from the account.   You will no longer get SMS messages of rounds or assignments.";

		} else { 

			$m->print('{ "error": true, "message": "Token expired or does not match.  Please request and send another."}');
			$m->abort();
		}

	}

	$m->print('{ "error": false, "message": "'.$message.'"}');

	$m->abort();

</%init>

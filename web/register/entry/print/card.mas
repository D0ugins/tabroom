<%args>
	$tourn
	$student
	$filename
	$linebreaks => undef
	$weekend    => undef
</%args>
<%init>

    my $filepath = $Tab::file_root."/tmp/";

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select
			student.id, student.first, student.last,
			entry.id, entry.code, entry.name,
			school.id, school.code, school.name,
			event.abbr, event.name, event.type, event.category,
			round.id, round.name, round.label,
				CONVERT_TZ(round.start_time, '+00:00', tourn.tz),
				CONVERT_TZ(timeslot.start, '+00:00', tourn.tz),
			panel.id, panel.letter, panel.bye,
			room.id, room.name,
			GROUP_CONCAT(CONCAT(judge.first,' ',judge.last)),
			ballot.speakerorder, ballot.side,
			tourn.name,
			notice.value_text

		from (entry, entry_student es, student, event, tourn)
			left join school on entry.school = school.id

			left join ballot on ballot.entry = entry.id
			left join judge on ballot.judge = judge.id
			left join panel on ballot.panel = panel.id
			left join room on panel.room = room.id
			left join round on panel.round = round.id
			left join timeslot on round.timeslot = timeslot.id
			left join category_setting notice
				on notice.category = event.category
				and notice.tag = 'student_sheet_notice'
		where student.id = ?
			and es.student = student.id
			and es.entry = entry.id
			and entry.active = 1
			and entry.event = event.id
			and event.tourn = tourn.id
			and tourn.id = ?
		group by ballot.panel
		order by event.abbr, entry.code, round.name, judge.last
	");

	$sth->execute($student->id, $tourn->id);

	open (TEXOUT, ">>$filepath"."$filename.tex");

	my %done;
	my %cache;
	my $switch;
	my %categories;

	while (
		my (
			$student_id, $student_first, $student_last,
			$entry_id, $entry_code, $entry_name,
			$school_id, $school_code, $school_name,
			$event_abbr, $event_name, $event_type, $event_category,
			$round_id, $round_name, $round_label,
				$round_start,
				$timeslot_start,
			$panel_id, $panel_letter, $panel_bye,
			$room_id, $room_name,
			$judge_panel,
			$ballot_speakerorder, $ballot_side,
			$tourn_name,
			$notice
		) = $sth->fetchrow_array()
	) {

		unless ($done{"student"}{$student_id}++) {
			$categories{$event_category} = $notice;
			print TEXOUT "\\begin{flushright}\n";
			print TEXOUT "\\Huge \\textsb{".Tab::texify($student_first." ".$student_last)."} \\\\ \n";
			print TEXOUT "\\LARGE ".Tab::texify($school_code)." -- ".Tab::texify($school_name)." \\\\ \n";
			print TEXOUT "\\large ".Tab::texify($tourn_name)." \\\\ \n";
			print TEXOUT "\\bigskip\n";
			print TEXOUT "\\normalsize\n";
			print TEXOUT "\\end{flushright}\n\n";
		}

		unless ($done{"entry"}{$entry_id}++) {

			print TEXOUT "\\strut\n";

			if ($done{"notfirst"}++) {
				print TEXOUT "\\vspace{8mm}\n";
			}

			print TEXOUT "\\newline\n";
			print TEXOUT "\\noindent\n";
			print TEXOUT "\\textsb{ \\large Entry ".Tab::texify($entry_code)." \\hfill ".$event_name." } \n\n";
			print TEXOUT "\\hrule\n\n";
			undef $switch;
		}

		unless ($done{"entry_panel"}{$entry_id}{$panel_id}++) {

			print TEXOUT "\\strut\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\begin{tabular}{p{.75in}p{1.0in}p{.75in}p{1.5in}p{2.1in}} \n";

			my $start = $round_start;
			$start = $timeslot_start unless $start;

			unless ($cache{$start}) {
				$cache{$start} = eval{
					return DateTime::Format::MySQL->parse_datetime($start);
				};
			}

			my $dt = $cache{$start};

			print TEXOUT "\\rowcolor[rgb]{.92,.92,.92}\n" unless $switch++ % 2;

			if ($round_label) {
				print TEXOUT "\\textsb{ ".$round_label." }";
			} else {
				print TEXOUT "\\textsb{ Round ".$round_name." }";
			}
			print TEXOUT " & ";

			if ($dt) {
				print TEXOUT $dt->day_abbr." ";
				print TEXOUT $dt->hour_12.":".$dt->strftime("%M")." ";
				print TEXOUT $dt->strftime("%p");
			}

			print TEXOUT " & ";
			print TEXOUT "Sect: ".$panel_letter." & ";

			print TEXOUT Tab::texify($room_name);
			print TEXOUT " & ";

			foreach my $judge (split(/\,/, $judge_panel)) {
				print TEXOUT "\\parbox[c]{1.95in}{ \\truncate{1.85in}{";
				print TEXOUT "\\scriptsize\n";
				print TEXOUT Tab::texify($judge)." ";
				print TEXOUT "\\hfill ";
				print TEXOUT "}} ";
			}

			print TEXOUT "\\end{tabular}\n";
		}
	}

	foreach my $cat_id (keys %categories) {

		print TEXOUT "\\strut\n";
		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\normalsize\n";

		my $message = $categories{$cat_id};

		print TEXOUT $m->comp(
			"/funclib/print_format.mas",
			message => $message
		) if $message;

	}

	print TEXOUT "\\newpage\n" if $linebreaks;
	return;

</%init>

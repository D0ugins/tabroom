<%args>
	$tourn
	$tourn_settings
	$person
	$first      => undef
	$last       => undef
	$middle     => undef
	$chapter_id => undef
	$event_id   => undef
	$phonetic   => undef
	$grad_year  => undef
	$student_id => undef
	$novice     => 0
	$retired    => 0
	$gender     => undef
    $birthdate  => undef
    $race       => undef
    $school_sid => undef
    $nsda       => undef
	$nsda_coach => 0
	$school_id  => undef
	$entry_id   => undef
</%args>
<%init>

	unless ($first && $last) { 
		$m->comp("/funclib/abort.mas", 
			message => "No first and last name sent; please hit back and try again"
		);
	}
	my $birth_dt;

	if ($birthdate) {
		$birth_dt = Tab::dateme($birthdate);
	}


	unless ($student_id) { 
	
		my $school = Tab::School->retrieve($school_id);

		$chapter_id = $school->chapter->id unless $chapter_id;

		unless ($school) { 
			my $err = "That school is not entered in your tournament";
			$m->redirect("/register/index.mhtml?err=$err");
		}

		my $student = Tab::Student->create({ 
			first      => $first,
			last       => $last,
			phonetic   => $phonetic,
			grad_year  => $grad_year,
			chapter    => $chapter_id,
			novice     => $novice,
			retired    => $retired,
			gender     => $gender,
            birthdate  => $birth_dt,
            school_sid => $school_sid,
            nsda       => $nsda,
            race       => $race
		});

		$m->comp("/funclib/nsda_person_link.mas", student => $student, nsda => $nsda) if $nsda;

		$student->setting("nsda_coach", $nsda_coach);

		my $msg = "Student $first $last saved in ". $school->name;

		if ($event_id) { 
			$m->redirect("/register/school/entry_add.mhtml?school_id=".$school->id."&event_id=$event_id&msg=$msg");
		} else {
			$m->redirect("/register/school/entries.mhtml?school_id=".$school->id."&msg=$msg");
		}
		
	}  else  {

		my $student = Tab::Student->retrieve($student_id); 
		my $school = Tab::School->retrieve($school_id);

		if ($student->first ne $first || $student->last ne $last) { 

			my $description = $student->first." ".$student->last." name changed to $first $last.";
			
    	    my $change = $m->comp("/funclib/log.mas",  
    	        tourn       => $tourn->id,
	            type        => "registration",
	            description => $description,
				person      => $person->id
	        );

		}
		
		$student->first($first);
		$student->middle($middle);
		$student->last($last);
		$student->phonetic($phonetic);
		$student->grad_year($grad_year); 
		$student->novice($novice);
		$student->nsda($nsda);
		$student->retired($retired);
		$student->gender($gender);
		$student->birthdate($birth_dt);
		$student->school_sid($school_sid);
		$student->chapter($chapter_id);
		$student->race($race);
		$student->update();

		$m->comp("/funclib/nsda_person_link.mas", student => $student, nsda => $nsda) if $nsda;

		$student->setting("nsda_coach", $nsda_coach);

		if ($tourn_settings->{"nsda_nats"} || $tourn_settings->{"nsda_ms_nats"}) { 

			my %release_forms = eval { 
				return %{JSON::decode_json($school->setting("release_forms"))};
			};  

			my $req = Apache2::Request->new($r);

			if ($req) { 

				my $upload = $req->upload("entry_release_".$student->id);

				if ($upload && $upload->filename) { 

					my $filename  = $upload->filename;

					$filename =~ s/.*[\/\\](.*)/$1/;
					$filename =~ s/\ //g;
					$filename =~ s/\)//g;
					$filename =~ s/\(//g;
					$filename =~ s/\'//g;  # '  stupid vim
		
					$filename = substr($filename, 0, 120);
					my $filetemp = $upload->tempname;

					system $Tab::s3_cmd." put $filetemp ".$Tab::s3_bucket."/tourns/".$tourn->id."/".$school->id."/releases/".$student->id."/$filename";

					$release_forms{$student->id} = $filename;

					$school->setting(
						"release_forms",
						"text", 
						JSON::encode_json(\%release_forms)
					);
				}
			}
		}

	  	foreach my $entry ($m->comp(
			"/funclib/student_entries.mas", 
			student => $student,
			tourn   => $tourn)
		) { 
            my $name = $m->comp("/funclib/entry_name.mas", entry => $entry, full => 1); 
			$entry->name($name);
            $entry->update;
        }

		my $msg = "Changes saved to student $first $last.  Entries renamed in this tournament to follow suit.";
		$m->redirect("/register/entry/student_edit.mhtml?msg=$msg&student_id=$student_id&entry_id=$entry_id");
	
	}

</%init>


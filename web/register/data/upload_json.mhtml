<%args>
	$tourn
	$person
	$session
</%args>

<%init>

#### So the idea here is to have this one spot process all JSON uploads

use strict;
use warnings;
use Data::Dumper; 
binmode STDOUT, ":utf8";
use utf8;
use DateTime;
use Time::HiRes qw( time );
my $start = time(); 

## hard coding tourn id as 5611 for testing
#my $tourn_id = 5611;
#my $tourn = Tab::Tourn->retrieve($tourn_id);

my $tourn_id = $tourn->id;

my $tz = $tourn->tz if $tourn->tz;
$tz = "UTC" unless $tz;
	
my $dbh = Tab::DBI->db_Main();
use JSON;
use Encode qw(encode_utf8);

#upload sequence
my $now = DateTime->now;
$now->set_time_zone($tz);
my $req = Apache2::Request->new($r, DISABLE_UPLOADS => 0);
my $json_file = $req->upload('json_data');
unless ($json_file) { print $r." Couldn't find file<br>"; $m->abort };
my $json_filename = $json_file->tempname;
my $filename = $json_filename;

#system "/bin/mkdir -p ".$Tab::file_root."tmp/".$tourn->id."/$now->epoch";
#my $xml_path = $Tab::file_root."tmp/".$tourn->id."/$now->epoch";

#########################################################
#read local JSON file into a hash
#########################################################

my $json;
#my $filename = '/www/tabroom/web/register/data/NSDA.json';

{
  local $/; #Enable 'slurp' mode
  open my $fh, "<", $filename;
  $json = <$fh>;
  close $fh;
}
my $string = encode_utf8( $json );
my $data = decode_json($string);
#my $data = decode_json($json);
print Dumper($data)."<br><br>";
print ref($data) . "<br><br>";


</%init>

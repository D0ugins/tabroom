<%args>
	$tourn
	$tourn_settings
	$category_id
	$jpool_id  => undef
	$sort_by   => undef
	$codestart => undef
</%args>
<%init>

	my $category = Tab::Category->retrieve($category_id);

	my @judges;

	if ($tourn_settings->{"nsda_nats"}) { 
	
		Tab::Judge->columns(TEMP => "state");

		Tab::Judge->set_sql( by_state => "
			select judge.*, region.code as state
			from judge
			left join school on school.id = judge.school
			left join region on school.region = region.id

			where judge.category  = ? 
			order by region.code
		");

		@judges = Tab::Judge->search_by_state($category->id);

		Tab::debuglog(scalar @judges." were found!");

		my $last_state;
		my $baseline_code = 100;
		my $current_code;

		my $undone;
		my $done; 

		JUDGE:
		foreach my $judge (@judges) { 

			unless ($judge->state) { 
				$undone++;
				next JUDGE;
			}

			if ($last_state ne $judge->state) { 
				$last_state = $judge->state;
				$current_code = $baseline_code;
			}

			my $code = $judge->state."J".$current_code;

			$judge->code($code);
			$judge->update();

			$done++;
			$current_code++;

            $current_code++ if $current_code == 69;
            $current_code++ if $current_code == 169;
            $current_code++ if $current_code == 269;
            $current_code++ if $current_code == 420;
            $current_code++ if $current_code == 666;

		}

		my $msg = "$done judges recoded.  $undone judges lacked a state code and were not";
		$m->redirect("/register/data/judge_recode.mhtml?msg=$msg");

	}

	if ($jpool_id) { 
		my $jpool = Tab::JPool->retrieve($jpool_id);
		@judges = $jpool->judges;
	} else { 
		@judges = $category->judges;
	}

	@judges = sort {$a->last cmp $b->last} @judges;

	@judges = sort {$a->school->name cmp $b->school->name} @judges 
		if $sort_by eq "school" 
		|| $sort_by eq "diocese" 
		|| $sort_by eq "region";

	if ($sort_by eq "diocese") { 
		@judges = 
			sort {$a->school->region->code cmp $b->school->region->code} 
			@judges;

		@judges = 
			sort {length($a->school->region->code) <=> length($b->school->region->code)} 
			@judges;
	}

	if ($sort_by eq "region") { 
		@judges = 
			sort {$a->school->region->code cmp $b->school->region->code} 
			@judges;

		@judges = 
			sort {length($a->school->region->code) <=> length($b->school->region->code)} 
			@judges;
	}

	if ($sort_by eq "Randomly") { 
	    my $i = scalar(@judges);
	    my $j;
	    foreach my $item (@judges)
	    {	 --$i;
	        $j = int rand ($i+1);
	        next if $i == $j;
	        @judges [$i,$j] = @judges[$j,$i];
 	   }
	}

	my $msg = "Codes for ".$category->name." reshuffled by $sort_by starting with $codestart";

	foreach my $judge (@judges) { 

		#Let's attempt for SOME maturity here
		$codestart++ if $codestart == 69;
		$codestart++ if $codestart == 420;
		$codestart++ if $codestart == 169;
		$codestart++ if $codestart == 6969;
		$codestart++ if $codestart == 666;
		$codestart++ if $codestart == 6666;

		$judge->code($codestart);
		$codestart++;
		$judge->update;
	}

	$m->redirect("/register/data/judge_recode.mhtml?msg=$msg");

</%init>

<%args>
	$tourn
	$tourn_settings
	$person
	$chapter_id  => undef
	$district_id => undef
	$return      => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $msg;

	my $school;

	if ($district_id 
		&& $tourn_settings->{"nsda_nats"} 
		&& (not defined ($chapter_id))
	) { 

		my $district = Tab::District->retrieve($district_id);

		my $already = Tab::School->search( 
			district => $district_id,
			tourn    => $tourn->id
		)->first;

		if ($already) { 

			my $err = $district->name." is already entered in your tournament.  Try again";
			$m->redirect("add_school.mhtml?err=$err");

		} else { 

			my $state = substr($district->location,0,2);

			$school = Tab::School->create({
				district => $district->id,
				tourn    => $tourn->id,
				name     => $district->name,
				code     => $district->code
			});

			my $now = DateTime->now;
			$now->set_time_zone($tz);

			$school->setting("entered_on", "date", $now);

			my $chair = Tab::Permission->search(
				district => $district->id,
				tag => "chair"
			)->first;

			if ($chair && $chair->person) { 

				my $chair_person = $chair->person;

				$school->setting("contact_name", $chair_person->first." ".$chair_person->last);
				$school->setting("contact_email", $chair_person->email);
				$school->setting("contact_number", $chair_person->phone);

			}

			$school->setting("state", $state) if $state;

			$msg = "District team ".$school->name." created";

		}

	} else { 

		my $chapter = Tab::Chapter->retrieve($chapter_id);

		my $already = Tab::School->search( 
			chapter => $chapter_id,
			tourn   => $tourn->id
		)->first;

		if ($already) { 
			my $err = $chapter->name." is already entered in your tournament.  Try again";
			$m->redirect("add_school.mhtml?err=$err");
		}

		unless ($chapter) { 
			my $err = "That chapter was not found for some reason.  Please try again";
			$m->redirect("add_school.mhtml?err=$err");
		}

		my @circuits = $m->comp("/funclib/tourn_circuits.mas", tourn => $tourn);

		unless ($already) { 

			my ($school_code, $school_region) 
				= $m->comp("/funclib/chapter_code.mas", 
					tourn   => $tourn,
					chapter => $chapter
				);

			$school = Tab::School->create({
				chapter => $chapter->id,
				tourn   => $tourn->id,
				name    => $chapter->name,
				region  => $school_region,
				code    => $school_code,
			});

			my $now = DateTime->now;
			$now->set_time_zone($tz);

			$school->setting("entered_on", "date", $now);
			$school->setting("contact", $person->id);

			$m->comp('/funclib/chapter_conflicts.mas', school => $school);
			$msg = "School ".$chapter->name." has been added to your tournament entry";

		}

	}

    if ($tourn_settings->{"track_reg_changes"}) {

        my $description = "School registered by ".$person->first." ".$person->last;

        my $change = $m->comp("/funclib/log.mas", 
            tourn       => $tourn->id,
            school      => $school->id,
            type        => "registration",
            description => $description,
            person      => $person->id
        );

    }   

	my $now = DateTime->now();

    foreach my $fine ($tourn->tourn_fees) {

        next unless $fine->amount > 0;

        next if $fine->start 
            && $fine->start->epoch
            && $fine->start->epoch > $now->epoch;

        next if $fine->end 
            && $fine->end->epoch
            && $fine->end->epoch < $now->epoch;

        my $fee = Tab::Fine->create({
            school    => $school->id,
            amount    => $fine->amount,
            reason    => $fine->reason,
            tourn     => $tourn->id,
            levied_at => $now,
            parent    => $fine->id,
            payment   => 0,
            deleted   => 0
        }); 

    }   

	return if $return;

	$m->redirect("/register/data/add_school.mhtml?msg=$msg");


</%init>

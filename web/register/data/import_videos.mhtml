<%args>
	$tourn
	$tourn_settings
	$event_id
</%args>
<%init>

	# Get the upload and create the file handle.
	my $req = Apache2::Request->new($r);
	my @csv_handles = $r->upload;

	my $csv_file = $req->upload($csv_handles[0]);
	my $io = $csv_file->io;

	my @lines = <$io>;

	my @all_lines;

	foreach (@lines) {
		$_ =~ s/[\r]+/\n/g;
		$_ =~ s/[\r\n]+/\n/g;
		$_ =~ s/[\n]+/\n/g;
		push @all_lines, split (/\n/, $_);
	}

	my $event = Tab::Event->retrieve($event_id);

	unless ($event) {
		$m->comp("/funclib/abort.mas",
			message => "Event ID $event_id yielded no actual event"
		);
	}

	unless ($event->tourn == $tourn) {
		$m->comp("/funclib/abort.mas",
			message => "Event ID $event_id is not a part of this tournament"
		);
	}

	my %entries = map { $_->code => $_ } $event->entries();

	my $counter;
	my $err;
	my %done;

	$m->print('<div class="main">');

	foreach my $line (@all_lines) {

		my ($code, $url) = split(/\,/, $line);

		$code =~ s/^\s+//;  # Leading only
		$code =~ s/\s+$//;  # Trailing

		$url = 0 unless $url;

		if ($entries{$code}) {
			$entries{$code}->setting("video_link", "text", $url);
			$counter++;
			$done{$code}++;

			if ($entries{$code}->dropped) {
				$entries{$code}->dropped(0);
				$entries{$code}->update();
			}
		} else {
			$m->print("<p class='redtext'>No entry found for code $code</p>");
		}
	}

	my %school_drops;

	foreach my $code (keys %entries) {
		next if $done{$code};
		$m->print("<p>No entry found for code $code</p>");

		my $entry = $entries{$code};
		next if $entry->unconfirmed;

		my $school = $entry->school;

		$school_drops{$school->id}{"entries"}{$entry->id} = $entry;
		$school_drops{$school->id}{"obj"} = $school;

		$entry->dropped(1);
		$entry->update();
	}

	my $dropped_schools = scalar(keys %school_drops);
	$m->print("<h5>Emailing the ".$dropped_schools." schools about the drops</h5>");

	my %tourn_contacts = $m->comp("/funclib/tourn_contacts.mas", tourn => $tourn);

	my $info = Tab::Person->retrieve(114140);

	foreach my $school_id (keys %school_drops) {

		my $school = Tab::School->retrieve($school_id);
		my $subject = "Nats20: ".$school->short_name." dropped entries due to missing video";

		my $message = "\tThe following entries do not have a performance video uploaded in ";
		$message .= "Classrooms.cloud and have therefore been dropped from the National Tournament:";

		foreach my $entry_id (sort keys %{$school_drops{$school_id}{"entries"}}) {
			my $entry = $school_drops{$school->id}{"entries"}{$entry_id};
			$message .= "\n";
			$message .= "\t".$entry->code."\t".$event->abbr."\t".$entry->name."\n";
		}

		$message .= "\tIf you think this is in error, please email info\@speechanddebate.org ";
		$message .= "by 10am CST Sunday\n";
		$message .= "\n\n";

		$message .="\n-----------------------------<br />\n";
		$message .="\nTournament : ".$tourn->name." <br />\n";
		$message .="\nEmail sent to: Contacts of ".$school->name."\n";

		my @emails =  keys %{$tourn_contacts{$school->id}};

		$m->print("<p>@emails</p>");
		$m->print("<p>".$message."</p>");

		$m->comp( "/funclib/send_email.mas",
			from    => $info,
			array   => \@emails,
			subject => $subject,
			body    => $message
		);
	}

	$m->print('<h5>');
	$m->print($counter." video URLs imported");
	$m->print('</h5>');

	$m->print('</div>');

	#$m->redirect("import_csv.mhtml?err=$err&msg=$msg");

</%init>


<%args>
	$tourn
	$tourn_settings
	$from => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my @events = $tourn->events(type => "congress");
	my %event_by_id = map {$_->id => $_} @events;

	my %tiebreak_sets = map {$_->name => $_} $tourn->tiebreak_sets;

	my @timeslots =
		sort {$a->start->epoch <=> $b->start->epoch}
		$tourn->timeslots;

	my $site_id;

	foreach my $event (@events) {
		foreach my $round ($event->rounds) {
			$site_id = $round->site->id if $round && $round->site;
			last if $site_id;
		}
	}

	my $msg;

	if ($ARGS{saveme}) {

		my $tb_set;

		if ($tourn_settings->{"nsda_pilot_debate"}) {

			my $method = $ARGS{"debate_breaker"};

			$method = "Debate Final NSDA Points" if $method eq "NSDA Points";
			$method = "Debate Final Seed" if $method eq "Prelim Seeding";
			$method = "Debate Final Runoff" if $method eq "Runoffs";

			$tb_set = $tourn->tiebreak_sets(name => $method)->first;

			if ($tb_set) {
				foreach my $event ($tourn->events(type => "debate")) {
					foreach my $round ($event->rounds(type => "final")) {
						$round->tiebreak_set($tb_set->id);
						$round->update();
					}
				}
			}

		} else {
			$tb_set++;
		}

		foreach my $event (@events) {

			foreach my $round ($event->rounds) {

				foreach my $chamber ($round->panels) {

					my $event_id = $ARGS{$chamber->id."_event"};
					my $round_name = $ARGS{$chamber->id."_round"};
					my $timeslot_id = $ARGS{$chamber->id."_timeslot"};
					my $type = $ARGS{$chamber->id."_type"};

					my $tiebreak_set;

					if ($type eq "final") {
						$tiebreak_set = $tiebreak_sets{"Congress Final"};
						$tiebreak_set = $tiebreak_sets{"Congress Finals"}
							unless $tiebreak_set;
						$tiebreak_set = $tiebreak_sets{"Congress Elim"}
							unless $tiebreak_set;
						$tiebreak_set = $tiebreak_sets{"Congress Elims"}
							unless $tiebreak_set;
					} elsif ($type eq "elim") {
						$tiebreak_set = $tiebreak_sets{"Congress Elim"};
					} else {
						$tiebreak_set = $tiebreak_sets{"Congress Prelim"};
					}

					my $dest_event;

					if ($event->id != $event_id) {
						$dest_event = $event_by_id{$event_id};

						foreach my $entry ($m->comp("/funclib/panel_entries.mas", panel => $chamber)) {
							$entry->event($dest_event->id);
							$entry->update();
						}

					} else {
						$dest_event = $event;
					}

					my $dest_round = $dest_event->rounds(
						name => $round_name
					)->first;

					unless ($dest_round) {
						$dest_round = $dest_event->rounds(
							timeslot => $timeslot_id
						);
					}

					unless ($dest_round) {

						$dest_round = Tab::Round->create({
							name         => $round_name,
							type         => $type,
							tiebreak_set => $tiebreak_set,
							flighted     => 1,
							published    => 0,
							post_results => 0,
							event        => $dest_event->id,
							timeslot     => $timeslot_id,
							site         => $site_id
						});

					} else {

						$dest_round->type($type);
						$dest_round->name($round_name);
						$dest_round->timeslot($timeslot_id);
						$dest_round->tiebreak_set($tiebreak_set->id);
						$dest_round->update();

					}

					$chamber->round($dest_round->id);
					$chamber->update();

				}
			}
		}

		foreach my $event (@events) {
			$m->comp("/funclib/renumber_rounds.mas",
				event => $event
			);
		}

		if ($from eq "jot") {
			$msg = "Congress chamber settings saved";
			if ($tb_set) {
				$m->redirect("/tabbing/publish/joydistrict.mhtml?function=Confirm NSDA Memberships&msg=$msg");
			}
		} else {
			$msg = "Congress chamber settings saved";
		}
	}

</%init>

%	unless ($from eq "jot") {

		<div class="menu">
			<div class="sidenote">

				<h5>Return</h5>

				<a
					class = "yellow full martop marbottommore"
					href  = "/tabbing/publish/joydistrict.mhtml?function=Confirm NSDA Memberships"
				>Return to Districts Import</a>

			</div>

		</div>

		</div>

		<div class="main">

		<h4>Reconcile JOT Congress chambers</h4>
%	}

%		if ($msg) {
			<p class="redtext semibold bigger">
				<% $msg %>
			</p>
%		}

		<p>
			JOT and Tabroom store information about Congress and event
			alignments differently and aren't cross compatible.  Therefore
			you just need to tell Tabroom what type of round and which event
			each chamber belongs in.
		</p>

		<& "/funclib/tablesorter.mas", table => "congress" &>

		<form action="/register/data/joy_congress_match.mhtml" method="post">

		<input
			type  = "hidden"
			name  = "saveme"
			value = "1"
		>

		<input
			type  = "hidden"
			name  = "from"
			value = "<% $from %>"
		>

		<table id="congress">

		<thead>
			<tr class="yellowrow">
				<th>
					Chamber
				</th>

				<th>
					Event
				</th>

				<th>
					Round
				</th>

				<th>
					Timeblock
				</th>

				<th>
					Type
				</th>
			</tr>
		</thead>

		<tbody>

<%perl>
		foreach my $event (@events) {

			foreach my $round ($event->rounds) {

		        my %round_labels = eval{
					return JSON::decode_json($round->setting("section_labels"));
				}

				foreach my $chamber ($round->panels) {

					my $label = lc($round_label{$chamber->id});

					my $senate++ if (index($label, "senate") != -1);
					$senate++ if (index($label, "sen") != -1) && (index($label, "sent") == -1);

					my $final++ if (index($label, "final") != -1);
					$final++ if (index($label, "super") != -1);
</%perl>

					<tr>

						<td>
							<% $round_label{$chamber->id} %>
						</td>

						<td class="centeralign">
							<select name="<% $chamber->id %>_event" class="fixedmicro">
%							foreach my $oevent (@events) {
								<option
									value="<% $oevent->id %>"
									<% $event->id == $oevent->id
										? "selected"
										: $senate && $oevent->abbr eq "SEN"
											? "selected"
											: ""
									%>
								><% $oevent->abbr %></option>
%							}
							</select>
						</td>

						<td class="centeralign">
							<input
								type  = "number"
								name  = "<% $chamber->id %>_round"
								min   = "1"
								max   = "99"
								value = "<% $round->name %>"
							>
						</td>

						<td class="centeralign">
							<select name="<% $chamber->id %>_timeslot" class="fixedmed">
%							foreach my $timeslot (@timeslots) {
								<option
									value="<% $timeslot->id %>"
									<% $timeslot->id == $round->timeslot->id ? "selected" : "" %>
								>
									<% $timeslot->name %>:
									<% Tab::nicetime($timeslot->start->set_time_zone($tz)) %></option>
								</option>
%							}
							</select>
						</td>

						<td class="centeralign">
							<select name="<% $chamber->id %>_type" class="fixedsmallest">
%								foreach my $type ("prelim", "elim", "final") {
									<option
										value="<% $type %>"
										<% $type eq $round->type
											? "selected"
											: $type eq "final" && $final
												? "selected"
												: ""
										%>
									><% ucfirst($type) %></option>
%								}
							</select>
						</td>
					</tr>
%				}
%			}
%		}

		</tbody>

		</table>

%		if ($tourn_settings->{"nsda_pilot_debate"}) {

			<h5 class="martopmore">NSDA Debate Tiebreakers</h5>

			<p class="<% $ARGS{saveme} ? "redtext semibold bigger" : "semibold bluetext" %>">
				Which of the three pilot methods of breaking ties among alternates
				did you select?
			</p>

%			foreach my $method ("Runoffs", "Prelim Seeding", "NSDA Points") {

				<label for="<% $method %>">
					<div class="row hover">
						<span class="third semibold bluetext">
							<% $method %>
						</span>
						<span class="twothirds">
							<input
								type  = "radio"
								name  = "debate_breaker"
								value = "<% $method %>"
								id    = "<% $method %>"
							>
						</span>
					</div>
				</label>
%			}
%		}

		<span class="liblrow rightalign marvertno">
			<input type="submit" value="Save Details">
		</span>

		</form>

%	unless ($from eq "jot") {
		</div>
%	}

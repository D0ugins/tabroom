<%args>
	$tourn
	$tourn_settings
	$person
	$category_id => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	unless ($category_id) { 
		$m->print('<div class="blankfull"><p class="warning">');
		$m->print("You must select an existing judge category to import judges");
		$m->print('</p><p>Hit the Back button and try again</p>');
		$m->abort;
	}

	my $nats = $tourn->setting("nsda_nats");

	my $now = DateTime->now( time_zone => $tz);

	my $category = Tab::Category->retrieve($category_id);

	# Get the upload and create the file handle.
	my $req = Apache2::Request->new($r);
	my @text_handles = $r->upload; 
	my $text_file = $req->upload($text_handles[0]);
	my $io = $text_file->io;

	my @judges;

	# Fix line breaks
	my @lines = (<$io>);

    foreach (@lines) { 
        $_ =~ s/[\r]+/\n/g;
        $_ =~ s/[\r\n]+/\n/g;
        $_ =~ s/[\n]+/\n/g;
        push @judges, split (/\n/, $_);
    }   

	my $skipped;

	my $err;

	GROUP:
	foreach my $judge (@judges) { 

		my (@fields) = split(/,/,$judge);

		my $country = pop @fields;
		my $indy = shift @fields;
		my $first = shift @fields;
		my $last = pop @fields;
		my $middle = join(" ", @fields) if @fields;

		foreach ($country, $first, $middle, $last) { 
			$_ =~ s/^"//;
			$_ =~ s/"$//g;
			$_ =~ s/^'//;
			$_ =~ s/'$//g;
		}

		next unless $first && $last;

		my $school;

		$indy =~ s/\d//g;

		$school = Tab::School->search( 
			name  => $country,
			tourn => $tourn->id
		)->first;

		my $chapter_judge = 0;

		if ($school) { 

			$chapter_judge = 
				$school->chapter->chapter_judges( 
					first => $first,
					last  => $last
				)->first;

			unless ($chapter_judge) { 

				$chapter_judge = Tab::ChapterJudge->create({
					first   => $first,
					middle  => $middle,
					last    => $last,
					chapter => $school->chapter->id
				});

			}

		}

		my $obligation = "8";
		my $tab_rating = "50";

		$judge = Tab::Judge->create({
			first         => $first,
			middle        => $middle,
			last          => $last,
			school        => 0,
			chapter_judge => $chapter_judge,
			category      => $category->id,
			active        => 1,
			obligation    => $obligation,
			tab_rating    => $tab_rating,
			hired         => 0,
			person        => 0
		});

		if ($indy eq "INDY") { 

			Tab::Strike->create({
				tourn  => $tourn->id,
				type   => "school",
				school => $school->id,
				judge  => $judge->id
			}) if $school;

		} else { 

			$judge->school($school->id);
			$judge->update();

		}

	}	

	my $msg = scalar @judges ." judges imported into ".$category->name;

	$m->redirect("import_csv.mhtml?msg=$msg&err=$err");

</%init>

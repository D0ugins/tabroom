<%args>
	$tourn
	$filename
	$diocese => undef
	$all     => undef
</%args>
<%init>

	my @judges;
	my @events;
	my @schools;
	my %sunday_site = ();
	my %saturday_site = ();

	if ($all) { 
		@events = $tourn->events;

		@judges = $m->comp(
			"/funclib/tourn_judges.mas", 
				tourn => $tourn, 
				by_region => "yes"
			);

		@schools = $tourn->schools;
	} else { 

		@judges = $m->comp(
			"/funclib/region_judges.mas", 
				region => $diocese,
				tourn  => $tourn
			);

		@schools = $diocese->schools( tourn => $tourn->id);

	}

	my %category_type = ();
	my %online_ballots = ();

	my @categories = $tourn->categories;

	foreach my $event ($tourn->events) { 

		$category_type{$event->category->id} = $event->type;

		$online_ballots{$event->category->id}++ 
			if $event->setting("online_ballots");
	}

	my %seen = (); 
	@categories = grep { ! $seen{$_->id} ++ } @categories;

	my %category_site = ();
	my %jpool_site = ();

	Tab::Round->set_sql( round_one => "
		select distinct round.*
		from round, event
		where round.event = event.id
		and event.category = ? 
		and round.name = 1
		limit 1");

	my %jpool_timeslots = ();
	my %category_timeslots = ();


	foreach my $category (@categories) { 

		@{$category_timeslots{$category->id}} = $m->comp(
			"/funclib/category_timeslots.mas", 
				category => $category, 
				prelim => "only"
		);

		my @all_jpools = $category->jpools;

		my @jpools;

		foreach my $jp (@all_jpools) { 
			push @jpools, $jp if $jp->setting("event_based");
		}

		if (@jpools) { 

			foreach my $jpool (@jpools) { 
				$jpool_site{$jpool->id} = $jpool->site->name;
				@{$jpool_timeslots{$jpool->id}} = $m->comp(
					"/funclib/jpool_timeslots.mas", 
					jpool => $jpool
				);
			}

			$category_type{$category->id} = "jpools";

		} else { 

			my $first_round = Tab::Round->search_round_one( $category->id )->first;

			$category_site{$category->id} = $first_round->site->name 
				if $first_round 
				&& $first_round->site;

		}

		if ($category->setting("tab_room")) { 
			$category_type{$category->id} = "TabRoom";
		}

	}


    my $tz = $tourn->tz;
    $tz = "UTC" unless $tz;

    my $filepath = $Tab::file_root."/tmp/";

	open (TEXOUT, ">>$filepath"."$filename.tex");

	my $current_diocese;
	my $switch;
	my $counter;

	foreach my $judge (@judges) { 

		unless ($judge->regname eq $current_diocese) { 
			print TEXOUT "\\pagebreak\n";
			$current_diocese = $judge->regname;
		}

		print TEXOUT "\\vbox to 4.25in {\\vfil\n";

		my $category = $judge->category;

		print TEXOUT "\\Huge\n";
		print TEXOUT "\\noindent\n";

		print TEXOUT "{\\bf ".Tab::texify($judge->code)."}";
		print TEXOUT " \\hfill \\LARGE ";
		print TEXOUT "{\\bf ".Tab::texify($judge->first." ".$judge->last)."}\n";


		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\Large ".Tab::texify($judge->regcode)." -- ".Tab::texify($judge->regname);
		print TEXOUT " \\hfill ".Tab::texify($judge->schoolname)."\n";

		if ($category_type{$category->id} eq "congress") { 
			
			print TEXOUT "\\vspace{.35in}\n";
			print TEXOUT "\\newline\n";
		
			print TEXOUT "\\Large {\\bf \\color{black!64} Saturday: } {\\bf ";
			print TEXOUT Tab::texify($category->name)." } ";

			print TEXOUT "\\dotfill \\large {\\bf at ";
			print TEXOUT Tab::texify($category_site{$category->id})."}\n";

			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";

			print TEXOUT "\\normalsize\n";

			print TEXOUT Tab::texify("Student Congress judges will be given
			their assignments at the Saturday morning General Meeting.   Check
			your tournament booklet for the room & time of the meeting. ")."\n";

			print TEXOUT "\\bigskip\n";
			print TEXOUT "\\newline\n";
		} elsif ($category_type{$category->id} eq "speech") { 

			print TEXOUT "\\bigskip\n";
			print TEXOUT "\\newline\n";

			print TEXOUT "\\Large {\\bf \\color{black!64} Saturday: } {\\bf ";
			print TEXOUT Tab::texify($category->name)." } ";

			print TEXOUT "\\dotfill \\large {\\bf at ";
			print TEXOUT Tab::texify($category_site{$category->id})."}\n";

			print TEXOUT "\\newline\n";
			print TEXOUT "\\normalsize\n";

			print TEXOUT "\\begin{spacing}{.8}\n";
			print TEXOUT "\\noindent\n";

			print TEXOUT Tab::texify("The assignments below are tentative.
			You should attend all judge meetings and be attentive for changes
			to your schedule.  Even if you have Round 1 off, you MUST 
			attend the opening meeting to pick up your ballot packet.")."\n";

			print TEXOUT "\\smallskip\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\end{spacing}\n";
			print TEXOUT "\\noindent\n";

			my %timeslot_panel = 
				map {$_->round->timeslot->id => $_}
				$m->comp("/funclib/judge_panels.mas", judge => $judge);

			my $tabular = "\\begin{tabular}{p{1.0in}p{.75in}p{.35in}p{.75in}p{3.225in}} \n";

			foreach my $timeslot (@{$category_timeslots{$category->id}}) { 

				my $panel = $timeslot_panel{$timeslot->id};

				if ($panel) { 

					my $start = $panel->round->start_time;
					$start = $timeslot->start unless $start;
					$start->set_time_zone($tz);

					print TEXOUT "\\normalsize\n";

					print TEXOUT $tabular;
					print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\n" unless $switch++ % 2;

					print TEXOUT "{\\bf ".$panel->round->realname." }";
					print TEXOUT " & ";
					print TEXOUT Tab::nicetime($start)." ";
					print TEXOUT " & ";
					print TEXOUT $panel->round->event->abbr." & ";
					print TEXOUT "Section ".$panel->letter." & ";
					print TEXOUT "Room: ".Tab::texify($panel->room->name)." " if $panel->room;
					print TEXOUT "\\end{tabular}\n";
					print TEXOUT "\\newline\n";

				} else  { 

					my $start = $timeslot->start;
					$start->set_time_zone($tz);

					print TEXOUT "\\normalsize\n";

					print TEXOUT $tabular;
					print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\n" unless $switch++ % 2;

					print TEXOUT "{\\bf ".$timeslot->name." }";
					print TEXOUT " & ";
					print TEXOUT Tab::nicetime($start)." ";
					print TEXOUT " & ";
					print TEXOUT "& {\\bf Standby } & ";
					my $standby_until = $start->clone;
					$standby_until->add(minutes => 30);
					print TEXOUT "Please wait in the Judges' Lounge until ".Tab::nicetime($standby_until);
					print TEXOUT "\\end{tabular}\n";
					print TEXOUT "\\newline\n";

				}

			}

			print TEXOUT "\\begin{spacing}{.8}\n";
			print TEXOUT "\\noindent\n";

			print TEXOUT Tab::texify("Keep this card until the end of the
			tournament in case there is a question of missing an assignment.
			Missed assignments incur a \$50 fine.  During free rounds, please
			wait in the Judges' Lounge area as a standby judge for at least 30
			minutes beyond the starting time of the round.")."\n";

			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\end{spacing}\n";
			print TEXOUT "\\noindent\n";

		} elsif ($category_type{$category->id} eq "jpools") { 

			print TEXOUT "\\bigskip\n";
			print TEXOUT "\\newline\n";

			print TEXOUT "\\Large {\\bf \\color{black!64} Saturday: } {\\bf ";
			print TEXOUT Tab::texify($category->name)." } ";

			print TEXOUT " \\dotfill \\large {\\bf at ";
			print TEXOUT Tab::texify($jpool_site{$judge->setting("prelim_jpool")})."}\n";

			print TEXOUT "\\newline\n";
			print TEXOUT "\\normalsize\n";

			print TEXOUT "\\begin{spacing}{.8}\n";
			print TEXOUT "\\noindent\n";

			print TEXOUT &Tab::texify("The assignments below are tentative.
			You should attend all judge meetings and be attentive for changes
			to your schedule.  Even if you have Round 1 off, you MUST 
			attend the opening meeting to pick up your ballot packet.")."\n";

			print TEXOUT "\\smallskip\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\end{spacing}\n";
			print TEXOUT "\\noindent\n";

			my %timeslot_panel = 
				map {$_->round->timeslot->id => $_} 
				$m->comp("/funclib/judge_panels.mas", judge => $judge);

			my $tabular = "\\begin{tabular}{p{1.0in}p{.75in}p{.35in}p{.75in}p{3.225in}} \n";

			foreach my $timeslot (@{$jpool_timeslots{$judge->setting("prelim_jpool")}}) { 

				my $panel = $timeslot_panel{$timeslot->id};

				if ($panel) { 

					my $start = $panel->round->start_time;
					$start = $timeslot->start unless $start;
					$start->set_time_zone($tz);

					print TEXOUT "\\normalsize\n";

					print TEXOUT $tabular;
					print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\n" unless $switch++ % 2;

					print TEXOUT "{\\bf ".$panel->round->realname." }";
					print TEXOUT " & ";
					print TEXOUT Tab::nicetime($start)." ";
					print TEXOUT " & ";
					print TEXOUT $panel->round->event->abbr." & ";
					print TEXOUT "Section ".$panel->letter." & ";
					print TEXOUT "Room: ".Tab::texify($panel->room->name)." " if $panel->room;
					print TEXOUT "\\end{tabular}\n";
					print TEXOUT "\\newline\n";

				} else  { 

					my $start = $timeslot->start;
					$start->set_time_zone($tz);

					print TEXOUT "\\normalsize\n";

					print TEXOUT $tabular;
					print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\n" unless $switch++ % 2;

					print TEXOUT "{\\bf ".$timeslot->name." }";
					print TEXOUT " & ";
					print TEXOUT Tab::nicetime($start)." ";
					print TEXOUT " & ";
					print TEXOUT "& {\\bf Standby } & ";
					my $standby_until = $start->clone;
					$standby_until->add(minutes => 30);

					print TEXOUT "Please wait in the Judges' Lounge until ";
					print TEXOUT Tab::nicetime($standby_until);
					print TEXOUT "\\end{tabular}\n";
					print TEXOUT "\\newline\n";

				}

			}

			print TEXOUT "\\begin{spacing}{.8}\n";
			print TEXOUT "\\noindent\n";

			print TEXOUT Tab::texify("Keep this card until the end of the
			tournament in case there is a question of missing an assignment.
			Missed assignments incur a \$50 fine.  During free rounds, please
			wait in the Judges' Lounge area as a standby judge for at least 30
			minutes beyond the starting time of the round.  ")."\n";

			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\end{spacing}\n";
			print TEXOUT "\\noindent\n";

		} elsif (
			$category_type{$category->id} eq "debate" 
			|| $category_type{$category->id} eq "pf" 
			|| $category_type{$category->id} eq "ld" 
			|| $category_type{$category->id} eq "policy"
		) { 
			
			print TEXOUT "\\vspace{.15in}\n";
			print TEXOUT "\\newline\n";

			print TEXOUT "\\Large {\\bf \\color{black!64} Saturday: } {\\bf ";
			print TEXOUT Tab::texify($category->name)." } ";

			print TEXOUT "\\dotfill \\large {\\bf at ";
			print TEXOUT Tab::texify($category_site{$category->id})."}\n";

			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\normalsize \n";

			print TEXOUT Tab::texify("In ".$category->name.", all judges are
			responsible for ALL FIVE preliminary rounds.  Judges will be informed
			of their judging assignments throughout the day prior to each round at
			the contest site.");

			print TEXOUT "\n";
			print TEXOUT "\\vspace{.15in}\n";
			print TEXOUT "\\newline\n";


		} elsif ($category_type{$category->id} eq "TabRoom") { 

			print TEXOUT "\\bigskip\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\Large {\\bf Tab Room Staff}\n";
			print TEXOUT "\\smallskip\n";
			print TEXOUT "\\newline\n";

			print TEXOUT "\\begin{tabular}{p{6.5in}} \n";
			print TEXOUT "\\large \n";

			print TEXOUT Tab::texify("
				You have been assigned to work in the Tabulation Room.  Please
				contact the tournament officials if you have any questions
				about your assignment or where you are supposed to report.
			");
			
			print TEXOUT "\\\\ \n";

			print TEXOUT "\\end{tabular}\n";
			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";

			if ($judge->setting('special_job')) {

				print TEXOUT "\\large {\\bf Your Assignment: ";
				print TEXOUT "\\dotfill ".$judge->setting('special_job')." }\n";
				print TEXOUT "\\medskip\n";
				print TEXOUT "\\newline\n";
			}

		} else { 

			print TEXOUT "\\bigskip\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\Large {\\bf Sunday Only: ";
			print TEXOUT ucfirst($category_type{$category->id})."}\n";
			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";

			print TEXOUT "\\begin{tabular}{p{6.5in}} \n";
			print TEXOUT "\\large \n";

			print TEXOUT "
				You are assigned no prelim rounds on Saturday.  Your Sunday
				assignments are below.
			\n";

			print TEXOUT "\\end{tabular}\n";
			print TEXOUT "\\vspace{.35in}\n";
			print TEXOUT "\\newline\n";

		}

		my @elim_jpools = $m->comp(
			"/funclib/judge_jpools.mas", 
				judge => $judge, 
				limit => "not_event_jpools"
		);

		my $sunday_category;

		if (@elim_jpools) { 

			$sunday_category = $elim_jpools[0]->category;
			my $sunday_site = $elim_jpools[0]->site->name;

			print TEXOUT "\\Large {\\bf \\color{black!64} Sunday: } {\\bf ";
			print TEXOUT Tab::texify($sunday_category->name)." } ";

			print TEXOUT "\\dotfill \\large {\\bf at ".Tab::texify($sunday_site)."}\n";

			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\normalsize \n";

			print TEXOUT Tab::texify("Elim round ballots are assigned at a meeting
			prior to each round, even those using online balloting.  The tournament
			booklet lists times & locations of each pool meeting.  Failure to
			appear will result in a \$50 fine.  Your elim pools are:");

			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\large\n";

			my $length = 1 / scalar @elim_jpools;

			foreach my $jpool (@elim_jpools) {
				print TEXOUT "\\parbox[c][][c]{".$length;
				print TEXOUT "\\textwidth}{\\centering \\bf ".$jpool->name."}\n";
			}

			print TEXOUT "\\newline\n";

		} elsif ($category_type{$category->id} ne "TabRoom") { 

			print TEXOUT "\\Large {\\bf No Elims}\n";
			print TEXOUT "\\bigskip\n";
			print TEXOUT "\\newline\n";

			print TEXOUT "\\large \n";
			print TEXOUT "\\begin{tabular}{p{6.5in}} \n";

			print TEXOUT "
				You are not assigned to any elimination judge jpools; you will
				not need to judge rounds Sunday.\n ";

			print TEXOUT "\\end{tabular}\n";
			print TEXOUT "\\vspace{.35in}\n";
			print TEXOUT "\\newline\n";

		}

		if ( $category && $online_ballots{$category->id} ) { 

			print TEXOUT "\\smallskip \n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\noindent\n";

			print TEXOUT "{\\Large \\color{black!64} \\bf Online Balloting } \\dotfill \n";

			if ($judge->person > 0 ) {

				my $person = $judge->person;
				
				print TEXOUT "{\\large Linked to \\underline{".Tab::texify($person->email)."} }\n";
				print TEXOUT "\\smallskip \n";
				print TEXOUT "\\newline\n";
				print TEXOUT "\\noindent\n";
				print TEXOUT "\\normalsize \n";

				print TEXOUT "You are linked to vote online with the above account.
				If this is not your Tabroom account, please contact the tournament
				staff before rounds begin.\n";

			} else { 

				print TEXOUT "{\\large \\bf NOT LINKED} \n";

				print TEXOUT "\\smallskip \n";
				print TEXOUT "\\newline\n";
				print TEXOUT "\\noindent\n";
				print TEXOUT "\\normalsize \n";

				print TEXOUT "Nationals is using online balloting!  It will help us
				enormously to run smoothly and on time.  You can vote on your
				computer, phone or other device, and write feedback up until the
				end of the tournament.  Go to
				\\underline{".Tab::texify("http\:\/\/tabroom.com")."} and click
				Sign Up at the top right.  Create an account, then click
				\"Link Your Account\" under the Judge header and follow
				instructions there.  We'll have help stations at the tournament
				sites Saturday if you're having trouble.\n";

			}

			print TEXOUT "\\smallskip \n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\noindent\n";

			print TEXOUT " When rounds are published, just log into
			Tabroom.com, or if you are already logged in click your email
			address in the upper right corner.  Your round(s) will appear on
			the main page. {\\bf Click the green START button when you are in
			your room ready to begin the debate}, and your ballot will
			appear.\n";

			print TEXOUT "\\smallskip \n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\noindent\n";

			print TEXOUT "Pairings will be texted \\& emailed out each round via
			Tabroom, but please double-check on Tabroom if you do not get a
			message.  Pairings will also be posted online at
			\\underline{".Tab::texify("http\:\/\/ncfl.tabroom.com")."} \n\n";

		}

		print TEXOUT " \\vfil }\n";




		if ($counter++ % 2) { 
			print TEXOUT "\\newpage\n";
		} else { 
			print TEXOUT "\\begin{center}\n";
			print TEXOUT "\\line(1,0){500}\n";
			print TEXOUT "\\end{center}\n";
			print TEXOUT "\\vspace{.5in}\n";
		}

	}

	close TEXOUT;

</%init>

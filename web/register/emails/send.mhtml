<%args>
	$tourn
	$person
	$subject     => undef
	$content     => undef
	$email_id    => undef
	$everybody   => undef
	$diodirs     => undef
	$judge_short => undef
	$tba         => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	
	my $now = DateTime->now(time_zone => $tz);

	my $sent_to;
	my @recipients;
	my @notifieds;
	my @emails;

	my @schools;

	unless ($content) { 
		my $err = "The email had no message body.  Try again,";
		$m->redirect("/register/emails/compose.mhtml&err=$err");
	}

	if ($diodirs) { 

		$sent_to .= "Diocesan Moderators of ".$tourn->name;

   		foreach my $region ($m->comp("/funclib/tourn_regions.mas", tourn => $tourn)) {
      	   	push @recipients, $region->admins;
		}

	}

	if ($everybody) { 

		$sent_to .= "All Registrants of ".$tourn->name;

		push @schools, $tourn->schools;

	} 

	if ($judge_short) { 

		my @categories = $tourn->categories;
		$sent_to .= " Schools short on judges at ".$tourn->name;

   		foreach my $school ($tourn->schools) {

			my $short;

			foreach my $category (@categories) { 

				my ($uncovered, $overage) = $m->comp(
					"/funclib/judgemath/uncovered_burden_by_category.mas",
					category => $category,
					school   => $school
				);

				$short++ if $uncovered;
				last if $short;
			}

			next unless $short;

			push @schools, $school;
		}
	}
	
	if ($tba) { 

		$sent_to .= "Schools with TBA entries at ".$tourn->name;

		push @schools, $m->comp("/funclib/tourn_school_tba.mas", tourn => $tourn);

	} 

	unless ($everybody || $judge_short || $tba) {
 
		my %send_keys = ();
		
		$sent_to .= " Schools registered for ".$tourn->name." with entries in: ";

		foreach my $event ($tourn->events) { 

			my $event_key = "event_".$event->id;
			next unless $ARGS{$event_key};
			
			$sent_to .= $event->name."\n";

			push @schools, $m->comp("/funclib/event_schools.mas", event => $event);

		} 
	} 

	foreach my $category ($tourn->categories) { 

		my $category_key = "category_".$category->id;
		next unless $ARGS{$category_key};

		$sent_to .= $category->name." judges\n";

		foreach my $judge ($category->judges) { 
   	      	push (@notifieds, 
				$m->comp("/funclib/judge_follower.mas", 
				judge  => $judge,
				emails => 1
			));
		}

	}

	my %done;

	foreach my $school (@schools) { 

		next if $done{$school->id}++;

		push (@recipients, $m->comp(
			"/funclib/school_contacts.mas",
				school => $school
			)
		);

		push @emails, $school->setting("contact_email") 
			if $school->setting("contact_email");

		foreach my $follower ($school->followers(type => "contact")) { 

			if ($follower->follower) { 

				push @recipients, $follower->follower;

			} elsif ($follower->email) { 

				push @emails, $follower->email;

			}
		}

	}

	my $email;

	if ($email_id) { 

		$email = Tab::Email->retrieve($email_id);

		#If the mail has been sent already we clone instead of overwriting

		if ($email->sent_to) {   
			$email = $email->copy({
				sent_at => $now
			});
		}

		$email->sent_at($now);

	} else { 

		$email = Tab::Email->create({
			subject => $subject,
			content => $content,
			sent_at  => $now,
			tourn   => $tourn->id,
			sender  => $person->id });

	} 

	unless (@recipients || @notifieds || @emails) { 
		my $err = "You have not chosen any recipients.  As much as sending an email to nobody sounds fun, ";
		$err .= "I bet you didn't want to do that.  Choose a group of recipients at right to continue";
		$m->redirect("compose.mhtml?email_id=".$email->id."&err=$err");
	}


	foreach my $director ($m->comp("/funclib/tourn_admins.mas", tourn => $tourn)) {
		push (@recipients, $director);
	}

	$content = $content."\n-----------------------------<br />\n";
	$content = $content."$sent_to\n\n";

	$email->sent_to($sent_to);
	$email->content($content);
	$email->update;

	#uniq

    my %nseen = ();
	@notifieds = grep { ! $nseen{$_}++ } @notifieds;

	my $count;

	foreach my $recipient (@recipients) { 
		next if $nseen{$recipient->email}++;
		push @emails, $recipient->email unless $recipient->no_email;
	}


	$m->comp( "/funclib/send_email.mas", 
		from    => $person,
		array   => \@emails,
		subject => $subject,
		body    => $content 
	);

	$m->comp( "/funclib/send_notify.mas", 
		from    => $person->email,
		array   => \@notifieds,
		subject => $subject,
		body    => $content 
	);

	my $msg = "This message has been sent.";
	$m->redirect("/register/emails/index.mhtml?email_id=".$email->id."&msg=$msg");

</%init>


<%args>
	$tourn
	$tourn_settings
  $event_id => undef
</%args>
<%init>

  use JSON;

	use POSIX;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
    my $now = DateTime->now->set_time_zone($tz);

	my $event = Tab::Event->retrieve($event_id) if defined $event_id;

	my $tourn_name = $tourn->name;
	$tourn_name =~ s/[\W_]//g;

    my $filename = "ElimReadoutCards-".$tourn->id;
    my $filepath = $Tab::file_root."tmp/".$filename;

    $m->comp("/funclib/printout.mas",
		tourn     => $tourn,
		filename  => $filename,
		head      => 1,
		no_footer => 1,
	);

  open (TEXOUT, ">>$filepath.tex");

  my $dbh = Tab::DBI->db_Main();

  my $sql = "
    select s.name, j.first, j.last, s.state, diamonds.value, jp.name, e.id, e.name, js.value_text

    from jpool jp

    join category c       on c.id   = jp.category
    join jpool_judge jj   on jp.id  = jj.jpool
    join judge j          on j.id   = jj.judge
    join judge_setting js on j.id   = js.judge

    join jpool_round jr   on jp.id  = jr.jpool
    join round r          on r.id   = jr.round
    join event e          on e.id   = r.event

    join school s         on s.id   = j.school

		left join judge_setting diamonds
			on diamonds.tag = 'diamonds'
			and diamonds.judge = j.id

    where c.tourn = ?
    and jp.name like \"%final%\"
    and js.tag like \"nomination\";
  ";

  my $sth = $dbh->prepare($sql);

  $sth->execute($tourn->id);

	open (TEXOUT, ">>$filepath.tex");

	print TEXOUT "\\hfill \n";
	print TEXOUT "\\bigskip \n";
	print TEXOUT "\\newline \n";
	print TEXOUT "\\noindent \n";

	while (
		my (
			$school_name, $judge_first, $judge_last, $judge_state, $judge_diamonds, $pool_name, $e_id, $event_name, $bio_json
		) = $sth->fetchrow_array()
	) {

		if (defined $event_id) {
		  next unless $event_id == $e_id;
		}
		my %nomination = eval {
		  return %{JSON::decode_json($bio_json) };
		};

		my $info = length $nomination{bio} > 0 ? $nomination{bio} : "<needs_info>";

		print TEXOUT "\\begin{minipage}[t][0.5\\textheight][t]{\\textwidth}";
		print TEXOUT "{\\huge ".Tab::texify($judge_first." ".$judge_last."(".Tab::texify($pool_name)).") } \\\\ \n";
		print TEXOUT "\\hfill {\\large $nomination{phonetic} } \\\\ \n";
		print TEXOUT "\\hfill {\\huge Diamonds: {\\bf".Tab::texify($judge_diamonds)."} } \\\\ \n";
		print TEXOUT "\\hfill {\\huge ".Tab::texify($school_name ."    ". $judge_state)." } \\\\ \n";
		print TEXOUT "\\hfill {\\large Info: } \\newline\n{\\large ".Tab::texify($info) ." } \\\\ \n";
		print TEXOUT "\\newline";
		print TEXOUT "\\newline";
		print TEXOUT "\\newline";
		print TEXOUT "\\newline";
		print TEXOUT "\\end{minipage} \\\\ \n"
	}

  close TEXOUT;
  $m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		tail     => 1
	);
</%init>

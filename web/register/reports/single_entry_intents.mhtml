<%args>
	$tourn
	$tourn_settings
	$session
	$mode => "pdf"
</%args>
<%init>

	my %event_by_id = map {$_->id => $_} ($tourn->events() );
	my %school_by_id = map {$_->id => $_} ($tourn->schools() );

    my $name = $tourn->name;
	$name =~ s/[\W_]//g; 

	my $filename = "SingleEntryIntents-".$name."-".$session->id;
	my $filepath = $Tab::file_root."/tmp/"; 

	my $tabular = "\\begin{tabular}{p{1in}p{.75in}p{.75in}p{.5in}p{.25in}p{.85in}p{.85in}p{.85in}p{.85in}}\n";

	if ($mode eq "csv") { 

		$filename .= ".csv";
		$m->clear_buffer;
		$r->content_type('application/csv');
		$r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";
		
		$m->print("School , First , Last , Merit #, Entries, Choice 1, Choice 2, Choice 3, Choice 4 \n");

	} elsif ($mode eq "pdf") { 

	    my $name = $tourn->name;
		$name =~ s/[\W_]//g; 
		
		my $filename = "SingleEntryIntents-".$name."-".$session->id;
		my $filepath = $Tab::file_root."/tmp/"; 
		
		$m->comp(
			"/funclib/printout.mas", 
			tourn    => $tourn,
			filename => $filename,
			wide     => 1,
			head     => 1
		);
		
		open (TEXOUT, ">>$filepath"."$filename.tex");

		print TEXOUT "\\noindent\n{\\LARGE \\bf ".Tab::texify($tourn->name)."\\hfill Single Entry Intents } \n";
		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\scriptsize\n";

		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{1,.95,.74}\n";
		print TEXOUT "School &  First & Last & Merit \\# & Entries & Choice 1 & Choice 2 & Choice 3 & Choice 4 \n";
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\newline\n";
	}

	my $switch;

	foreach my $school ($tourn->schools) { 

		my $blob = $school->setting("single_entry_letters");
		my %priorities = %{JSON::decode_json($blob)} if $blob;

    	my %district_entry = $m->comp(
	        "/funclib/district_entry.mas", 
			chapter => $school->chapter 
		);

        my @student_ids = sort keys %{$district_entry{"entries"}};

		my %already_entries;

        @student_ids =
			sort { $district_entry{'entries'}{$b} <=> $district_entry{'entries'}{$a} }
			@student_ids;

		foreach my $student_id (@student_ids) {

			my $student = Tab::Student->retrieve($student_id);

			my @entries = @{$district_entry{"entries"}{$student_id}};

			foreach my $entry_id (@entries) { 
				unless ($already_entries{$entry_id}) { 
					my $entry = Tab::Entry->retrieve($entry_id);
					$already_entries{$entry_id} = $entry;
				}
			}

			if ($mode eq "csv") { 

				$m->print('"');
				$m->print($school->name);
				$m->print('","');
				$m->print($student->first);
				$m->print('","');
				$m->print($student->last);
				$m->print('","');
				$m->print($student->ualt_id);
				$m->print('","');
				$m->print(scalar @entries);

			} elsif ($mode eq "pdf") { 

				print TEXOUT $tabular;

				print TEXOUT "\\rowcolor[rgb]{.92,.92,.92}\n" unless $switch++ % 2;

				print TEXOUT Tab::texify($school->name);
				print TEXOUT " & ";
				print TEXOUT Tab::texify($student->first);
				print TEXOUT " & ";
				print TEXOUT Tab::texify($student->last);
				print TEXOUT " & ";
				print TEXOUT Tab::texify($student->ualt_id);
				print TEXOUT " & ";
				print TEXOUT Tab::texify(scalar @entries);

			} 

			foreach my $entry_id (
				sort { $priorities{$student_id}{$a} <=> $priorities{$student_id}{$b} }
				keys (%{$priorities{$student_id}})
			) { 

				my $entry_string;

				if ($entry_id eq "WS") { 

					$entry_string = "World Schools Team";

				} else { 

					my $entry = $already_entries{$entry_id} if $entry_id && $entry_id == int($entry_id);

					if ($entry) { 
						$entry_string = $entry->code." in ".$entry->event->abbr;
							
						foreach my $student ($entry->students() ) { 
							next if $student->id == $student_id;
							$entry_string .= " with ".$student->first." ".$student->last;
						}
					} else { 
						$entry_string = "No entry found for $entry_id";
					}
				}

				if ($mode eq "pdf") { 

					print TEXOUT " & ";
					print TEXOUT Tab::texify($entry_string);

				} else { 

					$m->print('","');
					$m->print($entry_string);

				}

			}

			if ($mode eq "pdf") { 
				print TEXOUT "\\end{tabular}\n";
				print TEXOUT "\\newline\n";
			} else { 

				$m->print ('"'."\n");
			}

		}

	}

	if ($mode eq "csv") { 

		$m->abort();

	} elsif ($mode eq "pdf") { 

		$m->comp(
			"/funclib/printout.mas", 
			tourn     => $tourn,
			filename  => $filename,
			tail      => 1
		);

	}

</%init>


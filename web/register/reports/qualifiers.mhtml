<%args>
	$tourn
</%args>
<%init>

    my $name = $tourn->name;
    $name =~ s/[\W_]//g;
    my $filename = "EntryQualifications-$name.csv";

	$m->clear_buffer;
    $r->content_type('application/csv');
    $r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select
			entry.id, entry.code, entry.name,
			school.name,
			event.name, event.abbr,
			entry.waitlist, entry.dropped, entry.active,
			qualifiers.value_text

		from (entry, school, event, event_setting ask_quals)

		left join entry_setting qualifiers
			on qualifiers.entry = entry.id
			and qualifiers.tag = 'qualifiers'

		where event.tourn         = ?
			and event.id          = entry.event
			and entry.unconfirmed = 0
			and entry.school      = school.id
			and entry.id          = qualifiers.entry
			and event.id          = ask_quals.event
			and ask_quals.tag     = 'ask_quals'

		order by event.abbr, entry.code, entry.name
	");

	$m->print("School,Event,Entry Code,Entry Name,Waitlist Status,Dropped,Qualifiers\n");

	$sth->execute($tourn->id);

	while (
		my (
			$entry_id, $entry_code, $entry_name,
			$school_name,
			$event_name, $event_abbr,
			$entry_waitlist, $entry_dropped, $entry_active,
			$qualifiers
		) = $sth->fetchrow_array()
	) {

		$m->print('"'.$school_name.'",');
		$m->print('"'.$event_abbr.'",');
		$m->print('"'.$entry_code.'",');
		$m->print('"'.$entry_name.'",');

		if ($entry_waitlist) {
			$m->print('"WL"');
		}
		$m->print(',');

		if ($entry_dropped) {
			$m->print('"D"');
		}
		$m->print(',');

		my %quals = eval{
			return %{JSON::decode_json($qualifiers)};
		};

		foreach my $key (sort keys %quals) {
			$m->print('"'.$quals{$key}{"name"}.'",');
			$m->print('"'.$quals{$key}{"result"}.'",');
		}

		$m->print("\n");
	}

	$m->flush_buffer();
	$m->abort;

</%init>

<%args>
	$tourn
	$tourn_settings
	$session
	$sort_by => "name"
</%args>
<%init>

	my $name = $tourn->name;
	$name =~ s/[\W_]//g;

    my $filename = "SchoolCodes-$name.csv";
    $m->clear_buffer;
    $r->content_type('application/csv');
    $r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

	my $ncfl++ if $tourn_settings->{"ncfl"};
	my $nsda++ if $tourn_settings->{"nsda_nats"} || $tourn_settings->{"nsda_ms_nats"};

	my @schools = $tourn->schools;
	@schools = sort { $a->name cmp $b->name } @schools;
	@schools = sort { $a->region->code cmp $b->region->code } @schools if ($ncfl);

	my $dbh = Tab::DBI->db_Main();

	my $category_sth = $dbh->prepare("
		select school.id,
			school.name, school.code, school.onsite, school.state,
			chapter.state, chapter.country,
			category.abbr,
			count(distinct entry.id), count(distinct es.student), count(distinct judge.id),
			district.name, district.code, region.code, region.name, chapter.nsda,
			disclaimed_at.value_date,
			contact_name.value,
			contact_email.value,
			contact_number.value,
			unpaid_onsite.value

		from (school, entry, entry_student es, student, event, category)

			left join region on region.id = school.region
			left join district on district.id = school.district
			left join chapter on chapter.id = school.chapter

			left join school_setting disclaimed_at
				on disclaimed_at.school = school.id
				and disclaimed_at.tag   = 'disclaimed_at'

			left join school_setting contact_name
				on contact_name.school = school.id
				and contact_name.tag   = 'contact_name'

			left join school_setting unpaid_onsite
				on unpaid_onsite.school = school.id
				and unpaid_onsite.tag   = 'unpaid_onsite'

			left join school_setting contact_email
				on contact_email.school = school.id
				and contact_email.tag   = 'contact_email'

			left join school_setting contact_number
				on contact_number.school = school.id
				and contact_number.tag   = 'contact_number'

			left join judge on judge.school = school.id

		where category.tourn    = ?
			and category.id     = event.category
			and event.id        = entry.event
			and entry.active    = 1
			and entry.id        = es.entry
			and es.student      = student.id
			and student.chapter = school.chapter
			and school.tourn    = category.tourn

		group by school.id
		order by school.code
	");

	$category_sth->execute($tourn->id);

	my %schools;
	my %categories;

	while (
		my (
			$school_id,
			$school_name, $school_code, $school_onsite, $school_state,
			$chapter_state, $chapter_country,
			$category_abbr,
			$entry_count, $student_count, $judge_count,
			$district_name, $district_code, $region_code, $region_name, $nsda_id,
			$disclaimed_at,
			$contact_name,
			$contact_email,
			$contact_number,
			$unpaid_onsite
		)
		= $category_sth->fetchrow_array()
	) {

		$schools{$school_id}{"school_name"}     = $school_name;
		$schools{$school_id}{"school_code"}     = $school_code;

		$schools{$school_id}{"school_onsite"}   = "Y" if $school_onsite;
		$schools{$school_id}{"school_state"}    = $school_state;
		$schools{$school_id}{"school_state"}    = $chapter_state unless $school_state;
		$schools{$school_id}{"student_count"}   = $student_count;
		$schools{$school_id}{"judge_count"}     = $judge_count;
		$schools{$school_id}{"chapter_country"} = $chapter_country;

		$schools{$school_id}{"category_count"}{$category_abbr} = $entry_count;
		$schools{$school_id}{"district_name"}  = $district_name;
		$schools{$school_id}{"district_code"}  = $district_code;
		$schools{$school_id}{"region_name"}    = $region_name;
		$schools{$school_id}{"nsda_id"}        = $nsda_id;
		$schools{$school_id}{"region_code"}    = $region_code;
		$schools{$school_id}{"disclaimed_at"}  = $disclaimed_at;
		$schools{$school_id}{"contact_number"} = $contact_number;
		$schools{$school_id}{"contact_name"}   = $contact_name;
		$schools{$school_id}{"contact_email"}  = $contact_email;
		$schools{$school_id}{"unpaid_onsite"}  = "Y" if $unpaid_onsite;
		$schools{$school_id}{"entries"}++;
		$categories{$category_abbr}++;
	}

	if ($ncfl) {
		$m->print("Name,Shortened,Diocese,DioCode,Students,Judges,Total Count,Contact,Number,Email,Onsite,OnsiteOverride,TabID,Timestamp");
	} elsif ($nsda) {
		$m->print("Name,Shortened,ID,RealState,TournState,StCode,District,DCode,Students,Judges,Total Count,Contact,Number,Email,Onsite,OnsiteOverride,TabID,Timestamp");
	} else {
		$m->print("Name,Shortened,Code,State,Country,Students,Judges,Total Count,Contact,Number,Email,Onsite,OnsiteOverride,TabID,Timestamp");
	}

	foreach my $key (sort {$a cmp $b} keys %categories) {
		$m->print(",".$key);
	}

	$m->print("\n");

	foreach my $school_id (sort {$schools{$a}{"school_name"} cmp $schools{$b}{"school_name"}} keys %schools) {

		next unless $schools{$school_id}{"entries"};

		$m->print('"'.$schools{$school_id}{"school_name"}.'",');
		$m->print('"'.Tab::short_name($schools{$school_id}{"school_name"}).'",');

		if ($ncfl) {
			$m->print('"'.$schools{$school_id}{"region_name"}.'",');
			$m->print('"'.$schools{$school_id}{"region_code"}.'",');
		} elsif ($nsda) {
			$m->print('"'.$schools{$school_id}{"nsda_id"}.'",');
			$m->print('"'.$schools{$school_id}{"school_state"}.'",');
			$m->print('"'.$schools{$school_id}{"region_name"}.'",');
			$m->print('"'.$schools{$school_id}{"region_code"}.'",');
			$m->print('"'.$schools{$school_id}{"district_name"}.'",');
			$m->print('"'.$schools{$school_id}{"district_code"}.'",');
		} else {
			$m->print('"'.$schools{$school_id}{"school_code"}.'",');
			$m->print('"'.$schools{$school_id}{"school_state"}.'",');
			$m->print('"'.$schools{$school_id}{"chapter_country"}.'",');
		}

		$m->print('"'.$schools{$school_id}{"student_count"}.'",');
		$m->print('"'.$schools{$school_id}{"judge_count"}.'",');
		$m->print('"'.($schools{$school_id}{"judge_count"} + $schools{$school_id}{"student_count"}).'",');

		$m->print('"'.$schools{$school_id}{"contact_name"}.'",');
		$m->print('"'.Tab::phoneme($schools{$school_id}{"contact_number"}).'",');
		$m->print('"'.$schools{$school_id}{"contact_email"}.'",');
		$m->print('"'.$schools{$school_id}{"school_onsite"}.'",');
		$m->print('"'.$schools{$school_id}{"unpaid_onsite"}.'",');
		$m->print('"'.$school_id.'",');

		$m->print('"');
		$m->print( $m->comp("/funclib/showdate.mas",
			length => "sortable",
			string => $schools{$school_id}{"disclaimed_at"}
		));
		$m->print('",');

		foreach my $key (sort {$a cmp $b} keys %categories) {
			$m->print($schools{$school_id}{"category_count"}{$key});
			$m->print(",");
		}


		$m->print("\n");
	}

	$m->abort();

</%init>


<%args>
	$tourn
</%args>
<%init>
	use POSIX;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

    my $now = DateTime->now;    
    $now->set_time_zone($tz);

    my $name = $tourn->name;
    $name =~ s/[\W_]//g;

    my $filename = "ScriptList-$name.csv";
	$m->clear_buffer;
    $r->content_type('application/csv');
    $r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

    my $dbh = Tab::DBI->db_Main(); 
	
	my $piece_sth = $dbh->prepare("
		select entry.id, entry.name, entry.code, school.name, school.state, event.abbr,
			title.value, author.value, publisher.value, publish_date.value,
			publish_isbn.value, publish_print_date.value, publish_url.value, bibliography.value
		from (entry, school, event)

			left join entry_setting title
				on title.entry = entry.id
				and title.tag = 'title'

			left join entry_setting author
				on author.entry = entry.id
				and author.tag = 'author'

			left join entry_setting publisher
				on publisher.entry = entry.id
				and publisher.tag = 'publisher'

			left join entry_setting publish_date
				on publish_date.entry = entry.id
				and publish_date.tag = 'publish_date'

			left join entry_setting publish_isbn
				on publish_isbn.entry = entry.id
				and publish_isbn.tag = 'publish_isbn'

			left join entry_setting publish_print_date
				on publish_print_date.entry = entry.id
				and publish_print_date.tag = 'publish_print_date'

			left join entry_setting publish_url
				on publish_url.entry = entry.id
				and publish_url.tag = 'publish_url'

			left join entry_setting bibliography
				on bibliography.entry = entry.id
				and bibliography.tag = 'bibliography'

		where school.tourn = ? 
		and school.id = entry.school
		and entry.event = event.id
		and event.type = 'speech'
		and entry.active = 1

		and (
			exists ( 
				select ask_for_titles.id
				from event_setting ask_for_titles
				where ask_for_titles.event = event.id
				and ask_for_titles.tag = 'ask_for_titles'
			) or exists ( 
				select ask_for_bibliography.id
				from event_setting ask_for_bibliography
				where ask_for_bibliography.event = event.id
				and ask_for_bibliography.tag = 'ask_for_bibliography'
			)
		)

		order by event.abbr, school.state, school.name, entry.name
	");

	$piece_sth->execute($tourn->id);

	$m->print("Entry ID,Entry Name,School Name,State,Event,Title,Author,Publisher,Publish Date,ISBN,Web Print Date,Web URL,POI Bibliography\n");

    while( 
		my (
			$entry_id, $entry_name, $entry_code, $school_name, $school_state, $event_abbr,
			$title_value, $author_value, $publisher_value, $publish_date_value,
			$publish_isbn_value, $publish_print_date_value, $publish_url_value, $bibliography_value
		)
		= $piece_sth->fetchrow_array() 
	) { 

		foreach my $field ( $entry_id, $entry_name, $entry_code, $school_name, $school_state, $event_abbr, 
			$title_value, $author_value, $publisher_value, $publish_date_value,
			$publish_isbn_value, $publish_print_date_value, $publish_url_value, $bibliography_value
		) { 

			$m->print('"');
			$m->print($field);
			$m->print('",');
		}

		$m->print("\n");

	}

	$m->flush_buffer();
	$m->abort();


</%init>

<%args>
	$tourn
	$tourn_settings
</%args>
<%init>

	my @pref_categories;

	my %category_schools = ();

	my %category_pref_style = ();

	my $ndt;

	foreach my $category ($tourn->categories) { 
	
		$category_pref_style{$category->id} = $category->setting('prefs');

		$ndt++ if $category_pref_style{$category->id} eq "ndt";

		if ($category_pref_style{$category->id}) { 
			push (@pref_categories, $category);
		}
	}


</%init>

	<& 
		"menu.mas", 
		tourn => $tourn, 
		tourn_settings => $tourn_settings,
		whoami => "prefs" 
	&>

	<div class="main">

		<& /funclib/tablesorter.mas, table => "prefs" &>
		<& /funclib/tablesorter.mas, table => "prefs_undef" &>

		<span class="half">
			<h4>Pref status</h4>
		</span>
		<span 	
			class = "half rightalign"
			id    = "prefs_buttonarea"
		>
		</span>

		<table id="prefs">

			<thead>

				<tr class="yellowrow">

					<th class="smaller">
						Entry
					</th>

					<th class="smaller">
						Event
					</th>

					<th class="smaller">
						School
					</th>

					<th class="smaller">
						Tot
					</th>

%					if ($ndt) { 
						<th class="smaller">
							Prelim 
						</th>

						<th class="smaller">
							Elims
						</th>
%					} else { 
						<th class="smaller">
							Prefs
						</th>
%					} 

					<th class="smaller">
						Strike
					</th>

					<th class="smaller">
						Cnfl
					</th>

					<th class="smaller">
						Left
					</th>

				</tr>

			</thead>

			<tbody>

<%perl>

				foreach my $category (@pref_categories) { 

					my @judges = $category->judges( active => 1);

					foreach my $event ($category->events) { 

						my @event_struck_judges = $m->comp("/funclib/event_strike_judges.mas", event => $event);

						foreach my $entry (sort {$a->name cmp $b->name} $event->entries( active => 1 )) { 

							my %judge_ratings = ();
							my @rated;
							my @struck;
							my $notleft;

							if ($category_pref_style{$category->id} eq "ndt") { 

								%judge_ratings = $m->comp(
									"/funclib/judge_entry_rating.mas", 
									entry => $entry,
									type  => "rated_tier"
								);

								@struck = $m->comp(
									"/funclib/judge_entry_rating.mas", 
									entry => $entry, 
									type => "struck_tier"
								);

								@rated = $m->comp(
									"/funclib/judge_entry_rating.mas", 
									entry => $entry, 
									type => "ordinal"
								);

							} elsif (
								$category_pref_style{$category->id} eq "tiered" 
								|| $category_pref_style{$category->id} eq "tiered_round" 
								|| $category_pref_style{$category->id} eq "caps"
							) { 

								%judge_ratings = $m->comp(
									"/funclib/judge_entry_rating.mas", 
									entry => $entry,
									type  => "rated_tier"
								);

								@struck = $m->comp(
									"/funclib/judge_entry_rating.mas", 
									entry => $entry,
									type  => "struck_tier"
								);

							} else { 

								@rated = $m->comp(
									"/funclib/judge_entry_rating.mas", 
									entry => $entry,
									type  => "rated"
								);
							} 

							my @conflicts = $m->comp(
								"/funclib/judge_entry_rating.mas", 
								entry => $entry,
								type  => "conflicted");

							my %used;
							foreach my $conf (@conflicts) {
								$used{$conf->id}++;
							}

							foreach my $strike (@event_struck_judges) { 
								next if $used{$strike->id}++;
								$used{$strike->id}++;
							}

							my @real_rated;

							foreach my $rate (@rated) {
								next if $used{$rate->id};
								push @real_rated, $rate->id;
							}

							my %tier_count = ();

							foreach my $key (keys %judge_ratings) { 
								$tier_count{$judge_ratings{$key}}++;
								push @real_rated, $key unless $ndt;
							}
					
							my %seen;
							@real_rated = grep { ! $seen{$_} ++ } @real_rated;

							my $left = 
								(scalar @judges) - 
								(scalar @conflicts 
									+ scalar @struck 
									+ scalar @real_rated 
									+ scalar @event_struck_judges
								) unless $category_pref_style{$category->id} eq "caps";

							$left = 
								(scalar @judges) - 
								(scalar @conflicts 
									+ scalar @struck 
									+ scalar @real_rated 
									+ scalar @event_struck_judges
								) if $category_pref_style{$category->id} eq "ndt";

</%perl>

							<tr <% $left > 0 ? 'class="lirdrow"' : "" %>>

								<td class="smallish nospace">
									<a 
										class = "white"
										href  = "/register/entry/prefs.mhtml?entry_id=<% $entry->id %>"
									>

										<% $entry->code %>
									</a>
								</td>

								<td class="smallish medpsan">
									<% $entry->event->abbr %>
								</td>
									
								<td class="smallish medpsan">
									<% $entry->school->short_name %>
								</td>

								<td class="centeralign smallish">
									<% scalar @judges %>
								</td>

								<td class="centeralign smallish padno">

%									if ($category_pref_style{$category->id} eq "ndt") { 

											<% scalar @real_rated %>
										</td>

										<td class="centeralign smallish nowrap">

%										foreach my $key (sort keys %tier_count) { 
											<span class="half nospace nowrap">
												<% $key %>-<% $tier_count{$key} %>
											</span>
%										} 

%									} elsif ($category_pref_style{$category->id} eq "caps") { 

%										foreach my $key (sort keys %tier_count) { 
											<span class="fifth">
												<% $key %>-<% $tier_count{$key} %>
											</span>

%										} 

%									} elsif ($category_pref_style{$category->id} eq "tiers" 
%										|| $category_pref_style{$category->id} eq "tiered_round") {

%										foreach my $key (sort keys %tier_count) { 
											<span style="width: 32px;">
												<% $key %>-<% $tier_count{$key} %>
											</span>
%										} 
%									} else { 
										<% scalar @real_rated %>
%									} 
								</td>

								<td class="centeralign smallish">
									<% scalar @struck %>
								</td>

								<td class="centeralign smallish">
									<% (scalar @conflicts + scalar @event_struck_judges) %>
								</td>

								<td class="centeralign smallish">
									<% $left %>
								</td>

							</tr>

%						} 
%					}

%				}

			</tbody>

		</table>

		<span class="half">
			<h4>Under-rated judges</h4>
		</span>

		<span 	
			class = "half"
			id    = "prefs_under_buttonarea"
		>
		</span>

		<p>
			Some judges are not eligile to hear open division and thus MUST
			hear JV or novice rounds.  List below are JV and/or novice teams
			who have rated judges who are not eligible for open division in the
			bottom half of their prefs.  Some tournaments prohbit such
			practice, and at any rate having too many teams give these judges
			low ratings will mean that the judges may not be able to hear their
			full commitments.
		</p>

		<table id="prefs_undef">

			<thead>

				<tr class="yellowrow">

					<th class="smaller">
						Entry
					</th>

					<th class="smaller">
						Number of judges with sub-50th% ratings
					</th>

			</thead>

			<tbody>

<%perl>
	
		Tab::Entry->columns(TEMP => qw/bad_count/);
		
		Tab::Entry->set_sql(bad_prefs => "
			select entry.name, entry.code, count(*) as bad_count
			from rating, strike, event_setting, entry
			where entry.id = rating.entry
			and rating.judge = strike.judge
			and strike.type = 'event'
			and event_setting.event = strike.event
			and event_setting.value = 'open'
			and strike.tourn = ?
			and rating.percentile > 50
			group by rating.entry
		");
		
		my @bad_prefs  =  Tab::Entry->search_bad_prefs($tourn->id);
		
		foreach my $bad_pref(@bad_prefs) {
		
</%perl>
			<tr>
				
				<td>
					<% $bad_pref->code ." ". $bad_pref->name %>
				</td>
				<td>
					<% $bad_pref->bad_count %>	
				</td>

			</tr>

%		}
			</tbody>

		</table>

	</div>


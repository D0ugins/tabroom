<%args>
	$tourn
	$tourn_settings
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select
			student.id, student.first, student.last,
			entry.id entry, event.abbr,
			school.id as school, school.name, chapter.state,
			district.location,
			contact_name.value as contact_name,
			contact_email.value as contact_email,
			contact_number.value as contact_number,
			second_contact_name.value as second_contact_name,
			second_contact_email.value as second_contact_email,
			second_contact_number.value as second_contact_number
		from (student, entry_student es, entry, event, school, chapter)

			left join school_setting contact_name
				on contact_name.school = school.id
				and contact_name.tag = 'contact_name'

			left join school_setting contact_email
				on contact_email.school = school.id
				and contact_email.tag = 'contact_email'

			left join school_setting contact_number
				on contact_number.school = school.id
				and contact_number.tag = 'contact_number'

			left join school_setting second_contact_name
				on second_contact_name.school = school.id
				and second_contact_name.tag = 'second_contact_name'

			left join school_setting second_contact_email
				on second_contact_email.school = school.id
				and second_contact_email.tag = 'second_contact_email'

			left join school_setting second_contact_number
				on second_contact_number.school = school.id
				and second_contact_number.tag = 'second_contact_number'

			left join district on chapter.district = district.id

		where school.tourn = ?
			and entry.school = school.id
			and entry.active = 1
			and entry.id = es.entry
			and es.student = student.id
			and school.chapter = chapter.id
			and entry.event = event.id
		group by es.id
		order by event.id, student.last
	");

	$sth->execute($tourn->id);

	my $entry_refs = $sth->fetchall_hash();
	my %schools;

	my %in;

	foreach my $result (@{$entry_refs}) {

		unless ($schools{$result->{"school"}}{"name"}) {
			$schools{$result->{"school"}}{"name"}                  = $result->{"name"};
			$schools{$result->{"school"}}{"state"}                 = $result->{"state"};
			$schools{$result->{"school"}}{"state"}                 = $result->{"location"} unless $schools{$result->{"school"}}{"state"};
			$schools{$result->{"school"}}{"contact_name"}          = $result->{"contact_name"};
			$schools{$result->{"school"}}{"contact_email"}         = $result->{"contact_email"};
			$schools{$result->{"school"}}{"contact_number"}        = $result->{"contact_number"};
			$schools{$result->{"school"}}{"second_contact_name"}   = $result->{"second_contact_name"};
			$schools{$result->{"school"}}{"second_contact_email"}  = $result->{"second_contact_email"};
			$schools{$result->{"school"}}{"second_contact_number"} = $result->{"second_contact_number"};
		}

		unless ($schools{$result->{"school"}}{"entries"}{$result->{"id"}}) {
			$schools{$result->{"school"}}{"entries"}{$result->{"id"}} = $result;
		}

		if ($result->{"abbr"} eq "PF") {
			$schools{$result->{"school"}}{"pf"}{$result->{"id"}}++;
		} elsif ($result->{"abbr"} eq "HSE") {
			$schools{$result->{"school"}}{"hse"}{$result->{"id"}}++;
		} elsif ($result->{"abbr"} eq "SEN") {
			$schools{$result->{"school"}}{"sen"}{$result->{"id"}}++;
		}

		$schools{$result->{"school"}}{"other"}{$result->{"id"}}++;

		if ($schools{$result->{"school"}}{"entries"}{$result->{"id"}}{"events"}) {
			$schools{$result->{"school"}}{"entries"}{$result->{"id"}}{"events"} .= ", ";
		}
		$schools{$result->{"school"}}{"entries"}{$result->{"id"}}{"events"} .= $result->{"abbr"};
	}

	my $judge_sth = $dbh->prepare("
		select
			judge.id, judge.first, judge.last, category.abbr, school.id school,
			school.name, chapter.state,
			district.location,
			contact_name.value as contact_name,
			contact_email.value as contact_email,
			contact_number.value as contact_number,
			second_contact_name.value as second_contact_name,
			second_contact_email.value as second_contact_email,
			second_contact_number.value as second_contact_number
		from (school, chapter_judge, judge, category, chapter)

			left join district on chapter.district = district.id

			left join school_setting contact_name
				on contact_name.school = school.id
				and contact_name.tag = 'contact_name'

			left join school_setting contact_email
				on contact_email.school = school.id
				and contact_email.tag = 'contact_email'

			left join school_setting contact_number
				on contact_number.school = school.id
				and contact_number.tag = 'contact_number'

			left join school_setting second_contact_name
				on second_contact_name.school = school.id
				and second_contact_name.tag = 'second_contact_name'

			left join school_setting second_contact_email
				on second_contact_email.school = school.id
				and second_contact_email.tag = 'second_contact_email'

			left join school_setting second_contact_number
				on second_contact_number.school = school.id
				and second_contact_number.tag = 'second_contact_number'

		where school.tourn = ?

			and school.chapter   = chapter.id
			and chapter.id       = chapter_judge.chapter
			and chapter_judge.id = judge.chapter_judge
			and judge.category   = category.id
			and category.tourn   = school.tourn

		group by judge.id
	");

	$judge_sth->execute($tourn->id);

	my $judge_refs = $judge_sth->fetchall_hash();

	foreach my $judge (@{$judge_refs}) {

		unless ($schools{$judge->{"school"}}{"name"}) {
			$schools{$judge->{"school"}}{"name"} = $m->comp("/funclib/short_name.mas", name => $judge->{"name"});

			$schools{$judge->{"school"}}{"state"}          = $judge->{"state"};
			$schools{$judge->{"school"}}{"state"}          = $judge->{"location"} unless $schools{$judge->{"school"}}{"state"};

			$schools{$judge->{"school"}}{"contact_name"}   = $judge->{"contact_name"};
			$schools{$judge->{"school"}}{"contact_email"}  = $judge->{"contact_email"};
			$schools{$judge->{"school"}}{"contact_number"} = $judge->{"contact_number"};

			$schools{$judge->{"school"}}{"second_contact_name"}   = $judge->{"second_contact_name"};
			$schools{$judge->{"school"}}{"second_contact_email"}  = $judge->{"second_contact_email"};
			$schools{$judge->{"school"}}{"second_contact_number"} = $judge->{"second_contact_number"};
		}

		$schools{$judge->{"school"}}{"judges"}{$judge->{'id'}} = $judge;
	}

	my $now = DateTime->now;
    $now->set_time_zone($tourn->tz);

    my $filename = "RibbonPickSheets-".$now->year;
    my $filepath = $Tab::file_root."tmp/".$filename;

    `rm -f $filepath.*`;

    $m->comp("/funclib/printout.mas",
        filename  => $filename,
        head      => 1
    );

    open (my $texout, ">>$filepath.tex");

	foreach my $school_id (
		sort {
			$schools{$a}{"state"} cmp $schools{$b}{"state"}
			|| $schools{$a}{"name"} cmp $schools{$b}{"name"}
		} keys %schools
	) {

		print $texout "\\textsb{\\LARGE ".Tab::texify($schools{$school_id}{"name"})." } \\hfill \n";
		print $texout "\\textsb{\\color{black!64}\\Huge ".Tab::texify($schools{$school_id}{"state"})." } \n";
        print $texout "\\bigskip \\newline\n";
		print $texout "\\makebox[7in]{\\hrulefill}\n";
        print $texout "\\smallskip \\newline\n";

        print $texout "\\parbox[t][1.25in][t]{.45in}{\n }\n";
        print $texout "\\parbox[t][1.25in][t]{4.2in}{\n ";
			print $texout "\\textsb{\\large CONTACT INFO} \n";
			print $texout "\\medskip \\newline\n";
			print $texout Tab::texify($schools{$school_id}{"contact_name"});
			print $texout "\\smallskip \\newline\n";
			print $texout Tab::texify($schools{$school_id}{"contact_email"});
			print $texout "\\smallskip \\newline\n";
			print $texout Tab::texify($schools{$school_id}{"contact_number"});
			print $texout "\n";
			print $texout "\\medskip \\newline\n";
			print $texout Tab::texify($schools{$school_id}{"second_contact_name"});
			print $texout "\\smallskip \\newline\n";
			print $texout Tab::texify($schools{$school_id}{"second_contact_email"});
			print $texout "\\smallskip \\newline\n";
			print $texout Tab::texify($schools{$school_id}{"second_contact_number"});
			print $texout "\n";
		print $texout " }\n ";

        print $texout "\\parbox[t][1.25in][t]{2.25in}{ \n";
			print $texout "\\textsb{\\large ENTRY COUNTS} \n";
			print $texout "\\medskip \\newline\n";

			my $switch;

			foreach my $tag ("pf", "hse", "sen") {
				foreach my $key (keys %{$schools{$school_id}{$tag}}) {
					delete $schools{$school_id}{"other"}{$key};
				}
			}

			foreach my $tag ("pf", "hse", "sen", "other") {
				print $texout "\\hfill\n";
				print $texout "\\begin{tabular}{p{1in}p{1.1in}}\n";
				print $texout "\\rowcolor[rgb]{.94,.94,.94}\n" unless $switch++ % 2;
				print $texout "\\textsb{\\color{black!64} ".uc($tag)." } & ";

				if ($schools{$school_id}{$tag}) {
					print $texout scalar (keys %{$schools{$school_id}{$tag}});
				}

				print $texout "\\end{tabular}\n";
				print $texout "\\newline\n";
			}
		print $texout " } \n";

		print $texout "\\medskip \\newline\n";

		print $texout "\\fbox{";
        print $texout "\\parbox[t][7in][t]{3.25in}{ \n";
		print $texout "\\smallskip \\newline\n";
        print $texout "\\hspace{1em} \\textsb{\\LARGE COMPETITORS } \n";
		print $texout "\\medskip \\newline\n";

		undef $switch;

		foreach my $entry_id (
			sort {
				$schools{$school_id}{"entries"}{$a}{"events"} cmp $schools{$school_id}{"entries"}{$b}{"events"}
				|| $schools{$school_id}{"entries"}{$a}{"last"} cmp $schools{$school_id}{"entries"}{$b}{"last"}
			} keys %{$schools{$school_id}{"entries"}}
		) {

			my $entry = $schools{$school_id}{"entries"}{$entry_id};

			print $texout "\\begin{tabular}{p{2in}p{1in}}\n";
			print $texout "\\rowcolor[rgb]{.95,.95,.95}\n" unless $switch++ % 2;
			print $texout Tab::texify($entry->{"first"});
			print $texout " ";
			print $texout Tab::texify($entry->{"last"});
			print $texout " & ";
			print $texout Tab::texify($entry->{"events"});
			print $texout "\\end{tabular}\n";
			print $texout "\\newline\n";
		}
		print $texout " } \n";
		print $texout " } \n";

		print $texout "\\hspace{4mm}\n";

		print $texout "\\fbox{";
        print $texout "\\parbox[t][7in][t]{3.25in}{ \n";

		print $texout "\\smallskip \\newline\n";
        print $texout "\\hspace{1em} \\textsb{\\LARGE JUDGES } \n";
		print $texout "\\medskip \\newline\n";

		undef $switch;

		foreach my $judge_id (
			sort {
				$schools{$school_id}{"judges"}{$a}{"abbr"} cmp $schools{$school_id}{"judges"}{$b}{"abbr"}
				|| $schools{$school_id}{"judges"}{$a}{"last"} cmp $schools{$school_id}{"judges"}{$b}{"last"}
			} keys %{$schools{$school_id}{"judges"}}
		) {


			my $judge = $schools{$school_id}{"judges"}{$judge_id};

			print $texout "\\begin{tabular}{p{2in}p{1in}}\n";
			print $texout "\\rowcolor[rgb]{.95,.95,.95}\n" unless $switch++ % 2;
			print $texout Tab::texify($judge->{"first"});
			print $texout " ";
			print $texout Tab::texify($judge->{"last"});
			print $texout " & ";
			print $texout Tab::texify($judge->{"abbr"});
			print $texout "\\end{tabular}\n";
			print $texout "\\newline\n";
		}

		print $texout "\\bigskip \\newline\n";
        print $texout "\\strut \\hspace{1em} \\textsb{\\LARGE LISTED COACHES } \n";
		print $texout "\\medskip \\newline\n";

		my @coaches = $m->comp("/funclib/school_tbook.mas", school_id => $school_id);

		foreach my $coach (@coaches) {
			print $texout "\\begin{tabular}{p{3in}}\n";
			print $texout "\\rowcolor[rgb]{.95,.95,.95}\n" unless $switch++ % 2;
			print $texout Tab::texify($coach->first);
			print $texout " ";
			print $texout Tab::texify($coach->last);
			print $texout "\\end{tabular}\n";
			print $texout "\\newline\n";
		}

		print $texout " } \n";
		print $texout " } \n";
        print $texout "\\newpage\n";
	}

	close $texout;

    $m->comp("/funclib/printout.mas",
        filename  => $filename,
        tail      => 1,
    );


</%init>

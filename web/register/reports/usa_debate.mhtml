<%args>
	$tourn
	$tourn_settings
	$session
	$district_id => undef
	$entry_id    => undef
</%args>
<%init>

    my $now = DateTime->now;
    $now->set_time_zone($tourn->tz) if $tourn->tz;

	my $event = $tourn->events(type => "wsdc")->first;

	my $name = $event->name;
	$name =~ s/[\W_]//g;

	my $entry;
	my $district;

	if ($district_id) {
		$district = Tab::District->retrieve($district_id);
		my $dist_name = $district->name;
		$dist_name =~ s/[\W_]//g;
		$name .= "-".$dist_name
	}

	if ($entry_id) {
		$entry = Tab::Entry->retrieve($entry_id);
		my $entry_code = $entry->code;
		$entry_code =~ s/[\W_]//g;
		$name .= "-".$entry_code
	}

    my $filename = "RegSheets-".$name."-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;

    $m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		head     => 1
	);

    open (TEXOUT, ">>$filepath.tex");

	my $logo_file = $tourn_settings->{"logo"};

	if ($logo_file && (not defined -e "$Tab::file_root/tmp/".$logo_file)) {
		system "cd $Tab::file_root/tmp;
		$Tab::latex_path_prefix/wget ".$Tab::s3_url."/".$tourn->id."/".$logo_file;
	}

	unless ($logo_file && -e "$Tab::file_root/tmp/".$logo_file) {
		undef $logo_file;
	}

    my $dbh = Tab::DBI->db_Main();

	my $limit;

	$limit = "and district.id = ".$district->id if $district;
	$limit = "and entry.id = ".$entry->id if $entry;

    my $student_registration_sth = $dbh->prepare("

	    select student.first, student.middle, student.last, student.nsda,
        entry.code, entry.name, entry.school,
        chapter.id, chapter.name, chapter.state,
		district.id, district.name, district.code,
		chapter.state

        from (entry, entry_student, student, school, district, chapter)
        where entry.event = ?

        and entry_student.entry = entry.id
        and entry_student.student = student.id
        and entry.school = school.id

        and school.district = district.id
        and student.chapter = chapter.id

		$limit

        group by student.id
        order by district.code, chapter.name

	");

	$student_registration_sth->execute($event->id);

	my %schools;
	my %entries;

	my @keys_in_order;

	while (
		my ($first, $middle, $last, $nsda,
			$entry_code, $entry_name, $entry_school,
			$chapter_id, $chapter_name, $chapter_state,
			$district_id, $district_name, $district_code,
			$state
		) = $student_registration_sth->fetchrow_array()
	) {

		$schools{$chapter_id}{"district_id"} = $district_id;
		$schools{$chapter_id}{"district_name"} = $district_name;
		$schools{$chapter_id}{"district_code"} = $district_code;

		$schools{$chapter_id}{"chapter_state"} = $chapter_state;
		$schools{$chapter_id}{"chapter_name"} = $chapter_name;

		$schools{$chapter_id}{"state"} = $state;
		$schools{$chapter_id}{"school_id"} = $entry_school;

		my %student = ();

		$student{"first"} = $first;
		$student{"middle"} = $middle;
		$student{"last"} = $last;
		$student{"nsda"} = $nsda;
		$student{"entry_code"} = $entry_code;
		$student{"entry_name"} = $entry_name;
		$student{"chapter_id"} = $chapter_id;
		$student{"chapter_name"} = $chapter_name;

		push @{$schools{$chapter_id}{"students"}}, \%student;
		push @{$schools{$chapter_id}{"entries"}}, $entry_code;

		push @{$entries{$entry_code}{"students"}}, \%student;
		push @{$entries{$entry_code}{"entry_name"}}, $entry_name;

		push @keys_in_order, $chapter_id;

	}

	my $message = $m->comp(
		"/funclib/print_format.mas",
		message => $tourn_settings->{"registration_notice"}
	);

	my $jm = $event->category->setting("judge_sheet_notice");

	my $judge_message = $m->comp(
		"/funclib/print_format.mas",
		message => $jm
	);

	chomp $judge_message;

	my %seen = ();

	@keys_in_order = grep { ! $seen{$_} ++ } @keys_in_order;

	@keys_in_order =
		sort {$schools{$a}{"district_name"} cmp $schools{$b}{"district_name"}}
		@keys_in_order;

	@keys_in_order =
		sort {$schools{$a}{"state"} cmp $schools{$b}{"state"}}
		@keys_in_order;

	my $tabular = "\\begin{tabular}{p{.75in}p{2.75in}p{3in}}\n";

	foreach my $chapter_id (@keys_in_order) {

		print TEXOUT "\\noindent\n";

		if ($logo_file) {
			print TEXOUT "\\begin{minipage}[l]{1.5in}\n";
			print TEXOUT "\\includegraphics[height=1in,width=1in,keepaspectratio]{".$logo_file."}\n";
			print TEXOUT "\\end{minipage}\n";
			print TEXOUT "\\begin{minipage}[r]{5.5in}\n";
		} else {
			print TEXOUT "\\begin{minipage}[r]{6.75in}\n";
		}

		print TEXOUT "\\strut\n";
		print TEXOUT "\\hfill\n";

		print TEXOUT "{\\LARGE \\bf ".$tourn->start->year." ".Tab::texify($tourn->name)." } \n";
		print TEXOUT "\\medskip\n\\newline\n";
		print TEXOUT "\\strut\n";
		print TEXOUT "\\hfill\n";
		print TEXOUT "{\\Large \\bf \\color{black!64}  ".uc($event->name)." REGISTRATION } \n";
		print TEXOUT "\\end{minipage}\n";

		print TEXOUT "\\vspace{.2in}\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\begin{minipage}[l]{5in}\n";

		print TEXOUT "{\\bf \\huge ";
		print TEXOUT "\\righthyphenmin=10 \\lefthyphenmin=10 \n";
		print TEXOUT "\\raggedright ";
		print TEXOUT Tab::texify($schools{$chapter_id}{"chapter_name"});
		print TEXOUT "}  \n";

		print TEXOUT "\\end{minipage}\n";

		print TEXOUT "\\begin{minipage}[r]{2in}\n";

		print TEXOUT "\\hfill ";

		print TEXOUT "{\\bf \\color{black!64}  \\Large ";
		print TEXOUT Tab::texify($schools{$chapter_id}{"district_name"});
		print TEXOUT "} \n";
		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\noindent ";
		print TEXOUT "\\strut \\hfill ";
		print TEXOUT "{\\bf \\color{black!64}  \\Large ";
		print TEXOUT Tab::texify($schools{$chapter_id}{"state"});
		print TEXOUT "} \n";

		print TEXOUT "\\end{minipage}\n";

		my %done;
		my $switch;
		my $notfirst;
		my $school_id;

		foreach my $entry_code (@{$schools{$chapter_id}{"entries"}}) {

			undef $notfirst;
			undef $switch;

			next if $done{$entry_code}++;

			print TEXOUT "\\vspace{.2in}\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\normalsize\n";

			print TEXOUT "{\\bf \\color{black!64}  \\Large Team ".Tab::texify($entry_code)." } \n";
			print TEXOUT "\\smallskip\n";
			print TEXOUT "\\newline\n";

			foreach my $student_ref (@{$schools{$chapter_id}{"students"}}) {

				next unless ${$student_ref}{"entry_code"} eq $entry_code;

				print TEXOUT "\\newline\n";
				print TEXOUT $tabular;
				print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n" unless ($switch++ % 2);

				#print TEXOUT Tab::texify(${$student_ref}{"nsda"});
				print TEXOUT " & ";
				print TEXOUT Tab::texify(${$student_ref}{"first"})." ";
				print TEXOUT Tab::texify(${$student_ref}{"middle"})." ";
				print TEXOUT Tab::texify(${$student_ref}{"last"});
				print TEXOUT " & ";
				print TEXOUT "\\\\ \n";
				print TEXOUT "\\end{tabular}\n";
			}


			foreach my $other_student_ref (@{$entries{$entry_code}{"students"}}) {

				next if ${$other_student_ref}{"chapter_id"} eq $chapter_id;

				unless ($notfirst++) {
					undef $switch;
					print TEXOUT "\\vspace{.2in}\n";
					print TEXOUT "\\newline\n";
					print TEXOUT "{\\large \\bf \\color{black!64} ";
					print TEXOUT "District Teammates";
					print TEXOUT " } \n ";
					print TEXOUT "\\smallskip\n";
					print TEXOUT "\\newline\n";
				}

				print TEXOUT "\\newline\n";
				print TEXOUT $tabular;
				print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n" unless ($switch++ % 2);

				print TEXOUT Tab::texify(${$other_student_ref}{"nsda"});
				print TEXOUT " & ";
				print TEXOUT Tab::texify(${$other_student_ref}{"first"})." ";
				print TEXOUT Tab::texify(${$other_student_ref}{"middle"})." ";
				print TEXOUT Tab::texify(${$other_student_ref}{"last"});
				print TEXOUT " & ";
				print TEXOUT Tab::texify(${$other_student_ref}{"chapter_name"});
				print TEXOUT "\\\\ \n";
				print TEXOUT "\\end{tabular}\n";

			}
		}

		my @judges = Tab::Judge->search(
			school => $schools{$chapter_id}{"school_id"}
		);

		undef $notfirst;
		undef $switch;

		foreach my $judge (@judges) {

			my $real_school;
			$real_school = Tab::School->retrieve($judge->setting("original_school"))
				if $judge->setting("original_school");

			unless ($notfirst++) {
				print TEXOUT "\\vspace{.2in}\n";
				print TEXOUT "\\newline\n";
				print TEXOUT "{\\large \\bf \\color{black!64} ";
				print TEXOUT " District Judging ";
				print TEXOUT " } \n ";
				print TEXOUT "\\smallskip\n";
				print TEXOUT "\\newline\n";
			}

			print TEXOUT "\\newline\n";
			print TEXOUT $tabular;
			print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n" unless ($switch++ % 2);

			print TEXOUT " & ";
			print TEXOUT Tab::texify($judge->first." ".$judge->last);
			print TEXOUT Tab::texify(", ".$real_school->short_name) if $real_school;
			print TEXOUT " & ";
			print TEXOUT "\\small ";
			print TEXOUT "\\raggedright ";

			if ($judge->person && $judge->person->email) {
				print TEXOUT "Online ballots linked!:  {\\bf ".Tab::texify($judge->person->email)." } \n";
			} else {
				print TEXOUT "Not Linked for online ballots \n";
			}
			print TEXOUT "\\\\ \n";
			print TEXOUT "\\end{tabular}\n";

		}

		undef $notfirst;

		if (defined $message) {
			print TEXOUT "\\vspace{2mm}\n";
			print TEXOUT "\\newline \n ";

			print TEXOUT "\\noindent\n ";
			print TEXOUT $message;
		}

		if (defined $judge_message) {
			print TEXOUT "\\vspace{2mm}\n";
			print TEXOUT "\\newline \n ";

			print TEXOUT "\\noindent\n ";
			print TEXOUT $judge_message;
		}

		print TEXOUT "\\newpage\n";

	}

    $m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		tail     => 1 );

</%init>


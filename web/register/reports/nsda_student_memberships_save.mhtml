<%args>
	$tourn
	$tourn_settings
</%args>
<%init>

	use Tab::NSDA::Person;
	use Tab::NSDA::MemberSchool;

	my $school_year = Tab::school_year - 1;

	my $district = Tab::District->retrieve(
		$tourn_settings->{"nsda_district"}
	);

	Tab::Student->columns(TEMP => qw/schoolname schoolid nsda/);

	Tab::Student->set_sql( non_nsda => "
		select distinct student.*, school.name as schoolname, chapter.nsda as nsda, school.id as schoolid
		from student, entry_student, entry, school, chapter
		where school.tourn = ? 
		and school.id = entry.school
		and entry.id = entry_student.entry
		and entry_student.student = student.id
		and school.chapter = chapter.id
		and (student.ualt_id = 0 or student.ualt_id is null)
	");

	my @unmarked_students = Tab::Student->search_non_nsda($tourn->id);

	my $merged;
	my $updated;

	foreach my $student (@unmarked_students) { 

		my $ualt_id = $ARGS{$student->id};

		next unless $ualt_id;

		my $exists = Tab::Student->search(ualt_id => $ualt_id)->first;

		if ($exists && $exists->chapter->id == $student->chapter->id) { 

			$merged++;

			$m->comp("/funclib/student_merge.mas", 
				mergee      => $student,
				destination => $exists
			);

		} else { 

			$updated++;

			$student->ualt_id($ualt_id);
			$student->update();
		}

	}

	my $msg = "Updated $updated student records, merged $merged records with existing ones";

	$m->redirect("nsda_student_memberships.mhtml?msg=$msg");

</%init>

<%args>
	$tourn
	$tourn_settings
	$person
	$session
	$event_id => 0
	$drops    => undef
	$waitlist => undef
	$at_large => undef
	$sort     => undef
	$breakout => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my @events;
	my $namestring;

	if ($event_id) {
		$events[0] = Tab::Event->retrieve($event_id);
		$namestring = $events[0]->abbr;
	} else {
		@events = sort{$a->name cmp $b->name} $tourn->events;
		$namestring = "all-events";
	}

	my $filename = "entry-".$namestring."-".$session->id;
	my $filepath = $Tab::file_root."/tmp/$filename";

	open (CSVOUT, ">$filepath.csv");

	print CSVOUT "\"Code\",";
	print CSVOUT "\"Event\",";
	print CSVOUT "\"Status\",";
	print CSVOUT "\"DioCode\","  if $tourn_settings->{"ncfl"};
	print CSVOUT "\"Diocese\","  if $tourn_settings->{"ncfl"};
	print CSVOUT "\"DistrictCode\","  if $tourn_settings->{"nsda_nats"};
	print CSVOUT "\"DistrictName\","  if $tourn_settings->{"nsda_nats"};
	print CSVOUT "\"State\","  if $tourn_settings->{"nsda_nats"};
	print CSVOUT "\"Region\","   if $tourn_settings->{"regions"};
	print CSVOUT "\"Schcode\","  if $tourn_settings->{"school_codes"};
	print CSVOUT "\"School\",";
	print CSVOUT "\"Name\",";
	print CSVOUT "\"ADA\",";
	print CSVOUT "\"AutoQual\"," if $tourn_settings->{"nsda_nats"};
	print CSVOUT "\"Seed\",";
	print CSVOUT "\"Pairing Seed\",";
	print CSVOUT "\"Registered At\",";
	print CSVOUT "\"Dropped At\",";
	print CSVOUT "\"Piece Title\",";
	print CSVOUT "\"Piece Author\",";
	print CSVOUT "\"Publisher\"," if $tourn_settings->{"nsda_district"};
	print CSVOUT "\"Publication Year\"," if $tourn_settings->{"nsda_district"};
	print CSVOUT "\"ISBN\"," if $tourn_settings->{"nsda_district"};
	print CSVOUT "\"Web published\"," if $tourn_settings->{"nsda_district"};
	print CSVOUT "\"URL\"," if $tourn_settings->{"nsda_district"};
	print CSVOUT "\"Individual Students\",,";
	print CSVOUT "\"Breakouts\",";
	print CSVOUT "\n";

	Tab::Entry->columns(TEMP => "schoolcode");
	Tab::Entry->columns(TEMP => "schoolname");
	Tab::Entry->columns(TEMP => "regioncode");
	Tab::Entry->columns(TEMP => "regionname");

	foreach my $event (@events) {

		my %event_settings = $event->all_settings();

		my $breakouts = $event_settings{"breakouts"};

		my %breakout = ();

		my %settings = $m->comp(
			"/funclib/event_entry_settings.mas",
				event => $event,
				all   => 1,
				value => 1
			);

		foreach my $breakout_key (1 .. $breakouts) {

			$breakout{$breakout_key}{"deleted"}
				= $event_settings{"breakout_".$breakout_key."_deleted"};

			$breakout{$breakout_key}{"label"}
				= $event_settings{"breakout_".$breakout_key."_label"};

			foreach my $entry_id (keys %settings) {
				$breakout{$breakout_key}{$entry_id}++
					if $settings{$entry_id}{$breakout_key};
			}
		}

		my @entries;

		if ($drops) {

			@entries = Tab::Entry->search(
				event       => $event->id,
				dropped     => 1,
				unconfirmed => 0
			)  if $drops;

		} elsif ($waitlist) {

			@entries = $m->comp(
				"/funclib/event_entries.mas",
				event     => $event,
				waitlist  => 1
			);

		} elsif ($at_large) {

			@entries = $m->comp(
				"/funclib/event_entries.mas",
				event     => $event,
				at_larges => "living"
			);

		} elsif ($breakout) {

			@entries = $m->comp(
				"/funclib/event_entries.mas",
					event    => $event,
					breakout => $breakout
				);

		} else {

			@entries = $m->comp(
				"/funclib/event_entries.mas",
					event => $event
			);
		}

		@entries = sort {$a->code <=> $b->code} @entries;

		foreach my $entry (@entries) {

			my $entry_id = $entry->id;
			print CSVOUT "\"".$entry->code."\",";
			print CSVOUT "\"".$event->abbr."\",";

			print CSVOUT "\"";
			if ($entry->dropped) {
				print CSVOUT "DROP";
			} elsif ($entry->waitlist) {
				print CSVOUT "WL";
			}
			print CSVOUT "\",";

			if ($tourn_settings->{"nsda_nats"}) {

				print CSVOUT "\"".$entry->districtcode."\",";
				print CSVOUT "\"".$entry->districtname."\",";
				print CSVOUT "\"".$entry->state."\",";

			} elsif ($tourn_settings->{"ncfl"}) {

				print CSVOUT "\"".$entry->regioncode."\",";
				print CSVOUT "\"".$entry->regionname."\",";

			}

			if ($tourn_settings->{"school_codes"}) {
				if ($event_settings{"separate_codes"}) {
					print CSVOUT "\"".$entry->school->setting('congress_code')."\",";
				} else {
					print CSVOUT "\"".$entry->schoolcode."\",";
				}
			}

			if ($tourn_settings->{"regions"}) {
				print CSVOUT "\"";
				print $entry->regionname;
				print CSVOUT "\",";
			}

			print CSVOUT "\"".$entry->schoolname."\",";
			print CSVOUT "\"".$entry->name."\",";
			print CSVOUT "\"";
			print CSVOUT "ADA" if $entry->ada;
			print CSVOUT "\",";

			if ($tourn_settings->{"nsda_nats"}) {
				print CSVOUT "\"";
				print CSVOUT "Y" if $settings{$entry_id}{"auto_qual"};
				print CSVOUT "\",";
			}

			print CSVOUT "\"".$settings{$entry_id}{"registered_seed"}."\",";
			print CSVOUT "\"".$settings{$entry_id}{"pairing_seed"}."\",";
			print CSVOUT "\"";
			print CSVOUT &Tab::csvdt($entry->created_at->set_time_zone($tz)) if $entry->created_at;
			print CSVOUT "\",";
			print CSVOUT "\"";

			my $dropped_at = $settings{$entry_id}{"dropped_at"};

			if ($dropped_at eq "date") {

			} elsif ($dropped_at && $dropped_at->date) {
				print CSVOUT &Tab::csvdt($dropped_at);
			} else {
				print CSVOUT $dropped_at if $dropped_at;
			}

			print CSVOUT '",';

			print CSVOUT '"';
			print CSVOUT $settings{$entry_id}{"title"};
			print CSVOUT '",';

			print CSVOUT '"';
			print CSVOUT $settings{$entry_id}{"author"};
			print CSVOUT '",';

			if ($tourn_settings->{"nsda_district"}) {

				print CSVOUT '"';
				print CSVOUT $settings{$entry_id}{"publisher"};
				print CSVOUT '",';

				print CSVOUT '"';
				print CSVOUT $settings{$entry_id}{"publish_date"};
				print CSVOUT '",';

				print CSVOUT '"';
				print CSVOUT $settings{$entry_id}{"publish_isbn"};
				print CSVOUT '",';

				print CSVOUT '"';
				print CSVOUT $settings{$entry_id}{"publish_print_date"};
				print CSVOUT '",';

				print CSVOUT '"';
				print CSVOUT $settings{$entry_id}{"publish_url"};
				print CSVOUT '",';
			}

			my $counter;

			foreach my $student ($entry->students) {
				$counter++;
				print CSVOUT '"'.$student->first." ".$student->last.'",';
				print CSVOUT "Nov" if $student->novice;
				print CSVOUT ',';
			}

			print CSVOUT "," if $counter < 2;

			my %done;

			foreach my $breakout_key (1 .. $breakouts) {

				next if $breakout{$breakout_key}{"deleted"};

				print CSVOUT '"'.$breakout{$breakout_key}{"label"}.'",'
					if $breakout{$breakout_key}{$entry->id};
			}

			foreach my $qual ($entry->qualifiers) {
				print CSVOUT '"'.$qual->name.'",';
				print CSVOUT '"'.$qual->result.'",';
			}

			print CSVOUT "\n";
		}
	}

	close CSVOUT;

	$m->redirect("$Tab::url_prefix/tmp/$filename.csv");

</%init>


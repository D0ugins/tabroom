<%args>
	$tourn
	$tourn_settings
	$person
	$judge_id          => undef
	$qual_history      => 0
	$list_first_name   => 0
</%args>
<%init>

	my $judge = Tab::Judge->retrieve($judge_id) if $judge_id;
	my $now = DateTime->now();

	$m->print("No such judge.  Hit back and try again.") unless $judge;
	$m->abort unless $judge;

	my $err;
	my $max   = $judge->category->setting("max_rounds");
	my $hired = $ARGS{"hired"};
	$hired    = 0 unless $hired;

	my $obligation = $ARGS{"obligation"};

	unless ($tourn_settings->{"nsda_nats"}) {

		if ( ($obligation + $hired) > $max && $max > 0) {

			my $difference = $max - $obligation - $hired;
			$hired = $hired - $difference;

			if ($hired < 0) {
				$obligation = $obligation + $hired;
				$hired = 0;
			}

			$err = "No judge can cover more than $max rounds of obligation.  Round burden reduced";
		}
	}

	$ARGS{"phone"} =~ s/[\D_]//g;
	$ARGS{"phone"} = 0 unless $ARGS{"phone"} > 0;

	my $cj;
	my $judge_person;

	if (
		$ARGS{"chapter_judge"} > 0
		&& $judge
		&& $ARGS{"chapter_judge"} != $judge->chapter_judge
	) {

		$cj = Tab::ChapterJudge->retrieve($ARGS{"chapter_judge"});

		if ($cj) {

			$judge->chapter_judge($cj->id);
			$judge->first($cj->first);
			$judge->middle($cj->middle);
			$judge->last($cj->last);

			if ($cj->person) {
				$judge_person = $cj->person();
			}

			$ARGS{"email"} = $cj->email;
			$ARGS{"phone"} = $cj->phone;
			$ARGS{"nsda"}  = $cj->nsda;

			if ($ARGS"email"} &&  (not defined $judge_person)) {
				$judge_person = Tab::Person->search(email => $ARGS{'email'})->first;
			}

			if ($ARGS"nsda"} &&  (not defined $judge_person)) {
				$judge_person = Tab::Person->search(nsda => $ARGS{'nsda'})->first;
			}
		}

		if ($judge_person) {

			foreach my $tag ("email", "phone", "nsda") {
				$ARGS{$tag} = $judge_person->$tag();
			}

			unless ($ARGS{"nsda"}) {
				$ARGS{"nsda"} = $cj->nsda()
			}
			unless ($ARGS{"nsda"}) {
				$ARGS{"nsda"} = $judge->nsda()
			}

		} else {

			$ARGS{"email"} = $cj->email;
			$ARGS{"phone"} = $cj->phone;
		}

	} else {

		unless ($ARGS{"chapter_judge"} == $judge->chapter_judge) {
			$judge->chapter_judge(0);
		} else {
			$cj = $judge->chapter_judge;
		}

		$judge_person = $judge->person;

		unless ($judge_person) {
			if ($cj->person) {
				$judge_person = $cj->person();
			} elsif ($cj->email) {
				$judge_person = Tab::Person->search(email => $cj->email)->first;
			} elsif ($cj->nsda) {
				$judge_person = Tab::Person->search(nsda => $cj->nsda)->first;
			}
		}

		if ($ARGS{"email"} && (not defined $judge_person)) {
			$judge_person = Tab::Person->search(email => $ARGS{"email"})->first;
		}
		if ($ARGS{"nsda"} && (not defined $judge_person)) {
			$judge_person = Tab::Person->search(nsda => $ARGS{"nsda"})->first;
		}

		if ($judge_person) {

			foreach my $tag ("email", "phone", "nsda") {
				unless ($ARGS{$tag}) {
					$ARGS{$tag} = $judge_person->$tag();
				}
			}

			unless ($ARGS{"nsda"}) {
				$ARGS{"nsda"} = $cj->nsda()
			}

			unless ($ARGS{"nsda"}) {
				$ARGS{"nsda"} = $judge->nsda()
			}
		}

		foreach my $tag ("first", "middle", "last") {
			$judge->$tag($ARGS{$tag});
		}
	}

	if ($ARGS{"nsda"}) {
		$ARGS{"diamonds"} = $m->comp("/funclib/nsda/member_honors.mas",
			nsda_id       => $ARGS{"nsda"},
			diamonds_only => 1
		));
	}

	if ($cj) {
		unless ($cj->notes eq $ARGS{"notes"}) {
			$cj->notes($ARGS{"notes"});
			$cj->notes_timestamp($now);
			$cj->update();
		}
	}

	$judge->code($ARGS{"code"});

	if ($ARGS{"nsda"}) {
		$judge->setting('diamonds',

	} else {
		$judge->setting('diamonds', 0);
	}

	$judge->category($ARGS{"category"});
	$judge->school($ARGS{"school"});

	$judge->hired($hired);
	$judge->obligation($obligation);

	$ARGS{'covers'} = 0 unless $ARGS{'covers'};
	$ARGS{'alt_category'} = 0 unless $ARGS{'alt_category'};

	$judge->covers($ARGS{"covers"});
	$judge->alt_category($ARGS{"alt_category"});
	$judge->update();


	$judge->setting("jot_id", $ARGS{"jot_id"});

	$judge->setting('hire_offer', $ARGS{"hire_offer"});
	$judge->setting('special_job', $ARGS{"special"});
	$judge->setting("notes", "text", $ARGS{"notes"});

	eval { $judge->setting("notes_timestamp", "date", $now); };

	$judge->setting("tab_rating", $ARGS{"tab_rating"});
	$judge->setting("list_first_name", $list_first_name);
	$judge->setting("original_school", $ARGS{"original_school"});
	$judge->setting("qual_history", "text", $qual_history);


	if ($judge->nsda > 0) {
		$m->comp("/funclib/nsda/check_link.mas", nsda_id => $judge->nsda);
	}

	if ($tourn_settings->{"nsda_nats"}) {
		my $response = $m->comp(
			"/user/enter/nats/judge_complete_check.mas",
			judge => $judge
		);
	}

	my $msg = "Judge information saved";
	$m->redirect("edit.mhtml?judge_id=$judge_id&msg=$msg&err=$err");

</%init>

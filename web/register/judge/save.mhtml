<%args>
	$judge_id => undef
	$tourn
	$tourn_settings
	$person
</%args>
<%init>

	my $judge = Tab::Judge->retrieve($judge_id) if $judge_id;

	unless ($judge) {
		$m->comp("/funclib/abort.mas",
			message => "No judge record found for ID $judge_id"
		);
	}

	my $now = DateTime->now();
	my $err;

	my $cj = $judge->chapter_judge;
	my $jp = $judge->person;

	if ($jp && $jp->id != $cj->person) {
		$cj->person($jp->id);
	}

	if ($jp->phone && $jp->email)  {
		undef $ARGS{'email'};
		undef $ARGS{'phone'};
	}

	foreach my $prop ("first", "middle", "last", "code") {
		$judge->$prop($ARGS{$prop});
	}

	foreach my $prop ("category", "alt_category", "covers", "obligation", "hired", "school") {
		$ARGS{$prop} = int($ARGS{$prop});
		$judge->$prop($ARGS{$prop});
	}

	if ($cj) {
		foreach my $prop ("first", "middle", "last") {
			$cj->$prop($ARGS{$prop});
		}
		$cj->update();
	}

	my $category = $judge->category;
	my $max      = $category->setting("max_rounds");

	my $obligation = $ARGS{"obligation"};
	$obligation = 0 unless $obligation;

	my $hired = $ARGS{"hired"};
	if ($ARGS{'hire_offer'} > $hired) {
		$hired  = $ARGS{'hire_offer'};
	}
	$hired = 0 unless $hired;

	if ($tourn_settings->{"nsda_nats"}) {
		if ( ($obligation + $hired) > $max && $max > 0) {
			$err = "Warning: you have this judge covering more than the $max allowed days of obligation";
		}
	} else {
		if ( ($obligation + $hired) > $max && $max > 0) {
			$err = "Warning: you have this judge covering more than the $max allowed rounds of obligation";
		}
	}

	# NSDA Integration

	my $nsda_person;

	if ($jp && (not defined $ARGS{"nsda"})) {
		$ARGS{"nsda"} = $jp->nsda;
	}

	if ($cj && (not defined $ARGS{"nsda"})) {
		$ARGS{"nsda"} = $cj->nsda;
	}

	if ($ARGS{"nsda"}) {
		$ARGS{"nsda"} = $m->comp(
			"/funclib/check_link.mas",
			nsda_id => $ARGS{"nsda"}
		);
	}

	if ($ARGS{"nsda"}) {

		$nsda_person = $m->comp(
			"/funclib/nsda/person.mas",
			nsda_id => $ARGS{"nsda"}
		);

		if ($nsda_person) {

			my $ref;
			my $degree;

			($degree, $ARGS{"diamonds"}, $ref) = $m->comp(
				"/funclib/nsda/member_honors.mas",
					nsda_id       => $ARGS{"nsda"}
				);

			if ($jp) {

				$jp->nsda($ARGS{"nsda"});
				$jp->setting("diamonds", $ARGS{"diamonds"});

				if ($degree) {

					if ($ARGS{"degree"}->{description}) {
						$jp->setting("nsda_degree", $degree->{description});
					}

					if ($ARGS{"degree"}->{points}) {
						$jp->setting("nsda_points", $degree->{points});
					}

					if ($ARGS{"degree"}->{paid}) {
						$jp->setting("nsda_paid", $degree->{paid});
					}
				}
			}

			if ($cj) {
				$cj->nsda($ARGS{"nsda"});
			}

		} else {
			undef $ARGS{"nsda"};
		}
	}

	foreach my $tag (
		"notes",
		"email", "special_job", "notes", "qual_history",
		"cfl_tab_first", "cfl_tab_second", "cfl_tab_third"
	) {
		$judge->setting($tag, $ARGS{$tag});
	}

	# Numerical only please

	foreach my $tag (
		"phone", "jot_id", "hire_offer", "tab_rating", "original_school", "nsda", "diamonds"
	) {
		$ARGS{$tag} =~ s/[\D_]//g;
		$judge->setting($tag, $ARGS{$tag});
	}

	if ($ARGS{'notes'} ne $cj->notes) {
		$cj->notes($ARGS{"notes"});
		$cj->notes_timestamp($now);
	}

	if ($ARGS{"phone"} ne $cj->phone) {
		$cj->phone($ARGS{"phone"});
	}

	if ($ARGS{"email"} ne $cj->email) {
		$cj->email($ARGS{"email"});
	}

	if ($jp && (not defined $jp->phone)) {
		$jp->phone($ARGS{"phone"});
	}

	$judge->update();
	if ($jp) {
		$jp->update();
	}
	if ($cj) {
		$cj->update();
	}

	if ($tourn_settings->{"nsda_nats"}) {
		my $response = $m->comp(
			"/user/enter/nats/judge_complete_check.mas",
			judge => $judge
		);
	}

	my $msg = "Judge information saved";
	$m->redirect("edit.mhtml?judge_id=$judge_id&msg=$msg&err=$err");

</%init>

<%args>
	$judge_id
	$reason => undef
	$person
	$tourn
	$tourn_settings
</%args>
<%init>

	my $judge = Tab::Judge->retrieve($judge_id);

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	my $now = DateTime->now(time_zone => $tz);

	my $fine_amount = $tourn_settings->{"forfeit_judge_fine"};

	if ($tourn_settings->{"first_forfeit_multiplier"}) { 
		
		Tab::Fine->set_sql( judge_fine => "
			select * from fine 	
				where reason like 'BOND REVOKED:%'
				and school = ? 
		");

		if (Tab::Fine->search_judge_fine($judge->school->id)) { 
			$reason = "JUDGE FINE: ".$reason;
		} else { 
			$fine_amount = $fine_amount * $tourn_settings->{"first_forfeit_multiplier"};
			$reason = "BOND REVOKED: ".$reason;
		}

	}

	my $fine = Tab::Fine->create({
		tourn     => $tourn->id,
		school    => $judge->school->id,
		judge     => $judge->id,
		amount    => $fine_amount,
		reason    => $reason,
		levied_at => $now,
		levied_by => $person->id,
		payment   => 0,
		deleted   => 0
	});


	if ($fine && $judge->school && $tourn_settings->{'forfeit_notify_coaches'}) { 

		my $subject = "Fine levied for missing judge"; 

		my $message = "\n\tThe ".$tourn->name." has issued a fine to your school in the amount of

\$".sprintf ("%.2f", $fine->amount)."

This fine was triggered because:

$reason

Please contact the tournament officials if you believe this to be in error. 

";

		$message .= $tourn_settings->{"judge_fine_message"};

		foreach my $sendto (
			$m->comp("/funclib/chapter_admins.mas", 
				chapter => $judge->school->chapter
			)
		) { 

			Tab::debuglog("Sending to $sendto");

			next if $sendto->no_email;

			if ($sendto->phone && $sendto->provider) { 
				$m->comp( 
					"/funclib/send_notify.mas", 
						from    => 'Tabroom Notify <notify@tabroom.com>',
						to      => $sendto->phone.'@'.$sendto->provider,
						subject => $subject,
						body    => $message 
				);
			}

			$m->comp( 
				"/funclib/send_notify.mas", 
					from    => 'Tabroom Notify <notify@tabroom.com>',
					to      => $sendto->email,
					subject => $subject,
					body    => $message 
			);
		}   
	}

	my $description = "Fined judge ".$judge->first." ".$judge->last." for $reason";

	my $change = Tab::ChangeLog->create({ 
		tourn       => $tourn->id,
		type        => "judge",
		fine        => $fine,
		judge       => $judge_id,
		description => $description,
		person      => $person->id
	});

	my $msg = "Bond/Judge Fine recorded";
	$m->redirect("edit.mhtml?judge_id=".$judge->id."&msg=$msg");

</%init>

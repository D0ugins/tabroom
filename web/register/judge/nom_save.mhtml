<%args>
	$tourn
	$judge_id => undef
	$person
</%args>
<%init>

	use Email::Valid;

	my $judge = Tab::Judge->retrieve($judge_id) if $judge_id;

	if ($judge) {

		my %nomination;

		if ($judge->setting("nomination")) {
			%nomination = eval{
				return %{JSON::decode_json($judge->setting("nomination"))};
			};
		}

		if ($ARGS{"self_nominated"}) {
			$nomination{'self_nominated'} = 1;
		} else {

			if ($nomination{'self_nominated'}) {

				my $msg = $person->email." removed judge ".$judge->first." ".$judge->last."'s semi/finals nomination";

				$m->comp("/funclib/log.mas",
					tourn       => $tourn->id,
					category    => $judge->category->id,
					school      => $judge->school->id,
					type        => "registration",
					person      => $person->id,
					description => $msg
				);

				delete $nomination{'self_nominated'};
			}
		}

		foreach my $key ("phonetic", "bio", "text") {

			if ($ARGS{$key}) {
				$nomination{$key} = $m->comp(
					"/funclib/save_editor.mas",
					text => $ARGS{$key}
				);
			} else {
				delete $nomination{$key};
			}
		}

		my @types = (
			"Policy",
			"LD",
			"PF",
			"Congress",
			"Address IEs",
			"Interp IEs",
			"Supps &amp; Cons",
			"Big Questions",
			"Worlds Debate"
		);

		foreach my $type (@types) {
			if ($ARGS{$type}) {
				$nomination{"type"}{$type} = $ARGS{$type};
			} else {
				delete $nomination{"type"}{$type};
			}
		}

		if (keys %nomination) {
			$judge->setting("nomination", "text", JSON::encode_json(\%nomination));
		} else {
			$judge->setting("nomination", 0);
		}

	}

	$m->comp("/user/enter/nats/judge_complete_check.mas", judge => $judge) if $judge;

	my $msg = "judge nomination has been saved!";

	$m->redirect("/register/judge/nom_edit.mhtml?judge_id=".$judge->id."&msg=$msg");

</%init>

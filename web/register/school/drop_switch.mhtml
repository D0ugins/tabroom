<%args>
	$person
	$entry_id
	$tourn
	$tourn_settings
</%args>
<%init>

	my $entry = Tab::Entry->retrieve($entry_id);
	$m->abort unless $entry;

	my $now = DateTime->now;
	$now->set_time_zone($tourn->tz);

	my $msg;

	if ($entry->dropped) {

		$entry->dropped(0);
		$entry->update;

		$entry->setting("dropped_at", "");
		$entry->setting("dropped_by", "");

		my $reason_key = "Dropped ".$entry->code;

		foreach my $fine (Tab::Fine->search(
			school => $entry->school->id,
			reason => $reason_key )
		) {
			$fine->delete();
		}

		$msg = "Entry ". $entry->code ." un-dropped";

	} else {

		my $event = $entry->event;
		my $fine_amount;

		my $fine_dt = $tourn->setting("fine_deadline");
		$fine_dt->set_time_zone($tourn->tz) if $fine_dt;

		my $event_fine_dt = $event->setting("fine_deadline");

		if ($event_fine_dt) {
			$event_fine_dt->set_time_zone($tourn->tz);

			if ($event_fine_dt->epoch < $fine_dt->epcoh) {
				$fine_dt = $event_fine_dt;
			}
		}

		if ($fine_dt < $now) {
			$fine_amount = $tourn->setting("drop_fine");
			my $event_fine_amount = $event->setting("drop_fine");
			$fine_amount = $event_fine_amount if $event_fine_amount;
		}

		$entry->dropped(1);
		$entry->update;

		$entry->setting("dropped_at", "date", $now);
		$entry->setting("dropped_by", $person->id);

		my $drop_reason = "Dropped ". $entry->code;
		my $fine;

		if ($fine_amount > 0) {
			$fine = Tab::Fine->create({
				school    => $entry->school->id,
				amount    => $fine_amount,
				reason    => $drop_reason,
				tourn     => $tourn->id,
				levied_at => $now,
				levied_by => $person->id,
				deleted   => 0,
				payment   => 0
			});
		}

		$msg = "Entry ".$entry->code." dropped";
		$msg .= " and drop fine assessed " if $fine;

	}

	$m->redirect("/register/school/entries.mhtml?event_id=".$entry->event->id."&school_id=".$entry->school->id."&msg=$msg");

</%init>

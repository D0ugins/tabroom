<%args>
	$person     => undef
	$circuit_id => undef
	$year       => undef
	$level      => "default"
</%args>
<%init>
	
	use Time::HiRes qw( time );
	my $code_start = time(); 
	###Tab::debuglog("Circuit_chapter CODE STARTS");
	
	use Data::Dumper;

	my $circuit = Tab::Circuit->retrieve($circuit_id) if $circuit_id;
	$circuit = Tab::Circuit->retrieve( 43 ) unless $circuit; 

	$level = "university" if $circuit->id == 43 && $level eq "default";
	$level = "highschool" if $level eq "default";
	
	unless ($year) { 
		my $this_year = Tab::school_year;
		$year = $this_year->year;
	}

	my $start_string = "07/01/$year";
	my $end_string = "06/30/".($year + 1);

	my $start_dt = Tab::dtme($start_string);	
	my $end_dt = Tab::dtme($end_string);	
	
	#Load chapter characteristics

	Tab::Chapter->columns(TEMP => qw/nstudents/);	
	Tab::Chapter->columns(TEMP => qw/njudges/);	
	Tab::Chapter->columns(TEMP => qw/retired_students/);	

	Tab::Chapter->set_sql(pull_competitors => "
		select chapter.*, count(distinct student.id) as nstudents
		from chapter
		left join student on chapter.id=student.chapter 
		left join chapter_circuit on chapter.id=chapter_circuit.chapter 
		where chapter_circuit.circuit = ?
		and chapter.level = ? 
		group by chapter.id
	");

	# Doing these queries as one runs in 2 minutes.  Doing them separately runs
	# in 2 seconds.  Thus my damage  -CLP

	Tab::Chapter->set_sql(pull_judges => "
		select chapter.*, count(distinct chapter_judge.id) as njudges 
		from chapter
		left join chapter_judge on chapter.id = chapter_judge.chapter 
		left join chapter_circuit on chapter.id = chapter_circuit.chapter 
		where chapter_circuit.circuit = ?
		and chapter.level = ? 
		group by chapter.id
	");
	
	my @chapters = Tab::Chapter->search_pull_competitors($circuit->id, $level);
	my $code_end = time(); 
	@chapters = sort { $b->nstudents <=> $a->nstudents } @chapters;
	my %chapters;
		
	foreach my $chapter (@chapters) {
		$chapters{$chapter->id}{'name'}          = $chapter->name;
		$chapters{$chapter->id}{'nstudents'}     = $chapter->nstudents;
		$chapters{$chapter->id}{'nonretirees'}   = 0;
		$chapters{$chapter->id}{'active_judges'} = 0;
		$chapters{$chapter->id}{'tourneys'}      = 0;
		$chapters{$chapter->id}{'entries'}       = 0;
		$chapters{$chapter->id}{'AL1'}           = 0;
		$chapters{$chapter->id}{'LT1'}           = 0;
		$chapters{$chapter->id}{'LT4'}           = 0;
		$chapters{$chapter->id}{'LT9'}           = 0;
		$chapters{$chapter->id}{'GT9'}           = 0;
		undef $chapter;  #Otherwise the later object from the judge pull will be blank
	}

	my @chapter_judges = Tab::Chapter->search_pull_judges($circuit->id, $level);

	foreach my $chapter (@chapter_judges) {
		$chapters{$chapter->id}{'njudges'} = $chapter->njudges;
	}

	$code_end = time(); ###Tab::debuglog("Time after first loop ".sprintf("%.2f", $code_end-$code_start) );

	# student and judge active counts

	Tab::Student->columns(TEMP => qw/tourney_entries/);	

	Tab::Student->set_sql(pull_student => "
		select student.chapter, count(entry_student.id) as tourney_entries
		from chapter, student, chapter_circuit, entry_student, entry, event, tourn 
		where student.retired = 0 
		and student.chapter = chapter.id 
		and chapter.id = chapter_circuit.chapter 
		and entry_student.student = student.id 
		and chapter_circuit.circuit = ?
		and chapter.level = ? 
		and entry.id = entry_student.entry
		and event.id = entry.event
		and tourn.id = event.tourn
		and tourn.start >= '$start_dt'
		and tourn.end <= '$end_dt'
		group by student.id
	");

	my @student = Tab::Student->search_pull_student($circuit->id, $level);

	# Tab::debuglog("Time after second pull ".sprintf("%.2f", $code_end-$code_start) );

	$code_end = time(); 
	
	foreach my $stu (@student) {

		$chapters{$stu->chapter}{'nonretirees'} ++;

		if ( $stu->tourney_entries >0 ) { $chapters{$stu->chapter}{'AL1'} ++; }
		elsif ( $stu->tourney_entries <=1 ) { $chapters{$stu->chapter}{'LT1'} ++; }
		elsif ( $stu->tourney_entries <=4 ) { $chapters{$stu->chapter}{'LT4'} ++; }

		if ( $stu->tourney_entries >=5 and $stu->tourney_entries <=9 ) { $chapters{$stu->chapter}{'LT9'} ++; }

		if ( $stu->tourney_entries >=10 ) { $chapters{$stu->chapter}{'GT9'} ++; }
	}
	$code_end = time(); ###Tab::debuglog("Time after second loop ".sprintf("%.2f", $code_end-$code_start) );

	Tab::ChapterJudge->columns(TEMP => qw/active_judges/);			
	Tab::ChapterJudge->set_sql(pull_judge => "
		select chapter_judge.chapter, count(chapter_judge.id) as active_judges
		from chapter_judge, chapter_circuit, chapter
		where chapter_judge.retired = 0 
		and chapter_judge.chapter = chapter.id 
		and chapter.id = chapter_circuit.chapter 
		and chapter_circuit.circuit = ?
		and chapter.level = ? 
		group by chapter_circuit.chapter
	");
	my @judge = Tab::ChapterJudge->search_pull_judge($circuit->id, $level);
	$code_end = time(); ###Tab::debuglog("Time after third pull ".sprintf("%.2f", $code_end-$code_start) );
	
	foreach my $judges (@judge) {
		$chapters{$judges->chapter}{'active_judges'} = $judges->active_judges;
	}
	$code_end = time(); ###Tab::debuglog("Time after third loop ".sprintf("%.2f", $code_end-$code_start) );
		
	#entries by tourn

	Tab::Tourn->columns(TEMP => qw/chapter_entries/);	
	Tab::Tourn->columns(TEMP => qw/tourneys/);	
	Tab::Tourn->set_sql(pull_entries => "
		select chapter.id, count(entry.id) as chapter_entries, count(distinct entry.tourn) as tourneys
		from entry, chapter, chapter_circuit, school, tourn, event
		where entry.school = school.id 
		and school.chapter = chapter.id 
		and chapter.id = chapter_circuit.chapter 
		and chapter_circuit.circuit = ?
		and chapter.level = ? 
		and event.id = entry.event
		and tourn.id = event.tourn 
		and tourn.start >= '$start_dt'
		and tourn.end <= '$end_dt'
		group by chapter.id
	");

	my @entries = Tab::Tourn->search_pull_entries($circuit->id, $level);
	$code_end = time(); ###Tab::debuglog("Time after fourth pull ".sprintf("%.2f", $code_end-$code_start) );
	
	foreach my $entries (@entries) {
		$chapters{$entries->id}{'entries'} += $entries->chapter_entries ;
		$chapters{$entries->id}{'tourneys'} += $entries->tourneys ;
	}
	$code_end = time(); ###Tab::debuglog("Time after fourth loop ".sprintf("%.2f", $code_end-$code_start) );
			
	sub commify {
		local($_)=shift;
		1 while s/^(-?\d+)(\d{3})/$1,$2/;
		return $_;
	}

	$code_end = time(); ###Tab::debuglog("Time before print ".sprintf("%.2f", $code_end-$code_start) );
		
</%init>

	<& menu.mas, circuit_id => $circuit->id, whoami => "chapters", year => $year &>
	
	<div class="main">

	<div class="full nospace">

		<span class="twothirds nospace">
			<h2 class="marno">
				<% $circuit->name %> activity stats
			</h2>
			<h4 class="nospace">
				<% $year %>-<% ($year + 1) %>
			</h4>
		</span>

		<span class="third rightalign top">


			<form 
				action = "circuit_chapter.mhtml"
				method = "post"
			>

				<input 
					type  = "hidden"
					name  = "circuit"
					value = "<% $circuit->id %>"
				>

				<select 
					name     = "level"
					onChange = "this.form.submit();"
					class    = "fixedmed"
				>
					<option value="university"
						<% $level eq "university" ? 'selected="selected"' : "" %>
					>University</option>

					<option value="highschool"
						<% $level eq "highschool" ? 'selected="selected"' : "" %>
					>High School</option>

					<option value="middle"
						<% $level eq "middle" ? 'selected="selected"' : "" %>
					>Middle School</option>

					<option value="elementary"
						<% $level eq "elementary" ? 'selected="selected"' : "" %>
					>Elementary</option>

				</select>

			</form>
		</span>
	</div>
	
	<p class="explain rightalign"> 
		Hover mouse over column for more information
	</p>

	<& /funclib/tablesorter.mas, table => "sortme" &>
		
	<table id="sortme">
		
		<thead>

			<tr class="yellowrow">

				<th class="smaller">
					School
				</th>

				<th class = "smaller"
					title = "Total students on roster"
				>
						Students
					</span>
				</th>

				<th class = "smaller"
					title = "Students on roster not marked as retired"
				>
						Active
					</span>
				</th>

				<th
					class = "smaller"
					title = "Students attending 1 tournament"
				>
						1
				</th>

				<th
					class = "smaller"
					title = "Students attending 2 to 4 tournaments"
				>
						2-4
				</th>

				<th class="smaller"
					title="Students attending 5 to 9 tournaments">
						5-9
				</th>

				<th class="smaller"
					title="Students attending 10 or more tournaments">
						10+
					</span>
				</th>

				<th class="smaller">
					<span title="Number of judges on roster">
						Judges
					</span>
				</th>

				<th class="smaller">
					<span title="Number of judges marked as active">
						Active
					</span>
				</th>

				<th class="smaller">
					<span title="Total tournaments attended">
						Tourneys
					</span>
				</th>

				<th class="smaller">
					<span title="Number of entries at all tournaments">
						Entries
					</span>
				</th>

			</tr>

		</thead>

		<tbody>
		
%		foreach my $key (sort {$chapters{$b}->{'entries'} <=> $chapters{$a}->{'entries'}} keys(%chapters)) {

			<tr>

				<td class="smallish"> 
					<a 
						class="white medspan wrap" 
						href="results_by_chapter.mhtml?chapter_id=<% $key %>&circuit_id=<% $circuit->id %>"
					>
						<% $chapters{$key}{'name'} %> 
					</a>
				</td>

				<td class="smallish rightalign"> <% $chapters{$key}{'nstudents'} %> </td>

				<td class="smallish rightalign"> <% $chapters{$key}{'AL1'} %> </td>

				<td class="smallish rightalign"> <% $chapters{$key}{'LT1'} %> </td>

				<td class="smallish rightalign"> <% $chapters{$key}{'LT4'} %> </td>

				<td class="smallish rightalign"> <% $chapters{$key}{'LT9'} %> </td>

				<td class="smallish rightalign"> <% $chapters{$key}{'GT9'} %> </td>

				<td class="smallish rightalign"> <% $chapters{$key}{'njudges'} %> </td>

				<td class="smallish rightalign"> <% $chapters{$key}{'active_judges'} %> </td>

				<td class="smallish rightalign"> <% $chapters{$key}{'tourneys'} %> </td>

				<td class="smallish rightalign"> <% $chapters{$key}{'entries'} %> </td>

			</tr>
%		}
		
		</tbody>

		</table>

	</div>

<%args>
	$id1       => undef
	$id2       => undef
	$startdate => undef
	$enddate   => undef
</%args>
<%init>

	my $debug = 0;

	my $student1 = Tab::Student->retrieve($id1) if $id1;
	my $student2 = Tab::Student->retrieve($id2) if $id2;
	$m->abort unless $student1;

	my $student1_id = $student1->id;
	my $student2_id = $student2->id if $student2;

	use DateTime;
	use Date::Parse;
	my $start = time();

	my $this_year = Tab::school_year;
	my $year = $this_year->year;
	my $start_string = "07/01/$year";
	my $end_string = "06/30/".($year + 1);
	my $start_dt = Tab::dtme($start_string);
	my $end_dt = Tab::dtme($end_string);
	my $start_epoch = $start_dt->epoch;

	# NOW PULL EVERY BALLOT FOR EVERY ENTRY THAT EITHER SPEAKER HAS BEEN ON

	Tab::Score->columns(TEMP => qw/entry_code/);
	Tab::Score->columns(TEMP => qw/entry_id/);
	Tab::Score->columns(TEMP => qw/panel_id/);
	Tab::Score->columns(TEMP => qw/score_id/);
	Tab::Score->columns(TEMP => qw/score_tag/);
	Tab::Score->columns(TEMP => qw/score_student/);
	Tab::Score->columns(TEMP => qw/score_value/);
	Tab::Score->columns(TEMP => qw/round_name/);
	Tab::Score->columns(TEMP => qw/round_type/);
	Tab::Score->columns(TEMP => qw/round_label/);
	Tab::Score->columns(TEMP => qw/round_id/);
	Tab::Score->columns(TEMP => qw/event_name/);
	Tab::Score->columns(TEMP => qw/event_level/);
	Tab::Score->columns(TEMP => qw/tourn_name/);
	Tab::Score->columns(TEMP => qw/tourn_id/);
	Tab::Score->columns(TEMP => qw/tourn_start/);
	Tab::Score->columns(TEMP => qw/judge_name/);
	Tab::Score->columns(TEMP => qw/opponent/);
	Tab::Score->columns(TEMP => qw/event_id/);
	Tab::Score->columns(TEMP => qw/side/);
	Tab::Score->columns(TEMP => qw/student_first/);
	Tab::Score->columns(TEMP => qw/student_last/);
	Tab::Score->columns(TEMP => qw/round_robin/);

	Tab::Score->set_sql(pull_ballots => "
		select score.id,
		score.id as score_id, score.value as score_value, score.tag as score_tag, score.student as score_student,
		ballot.panel as panel_id, ballot.entry as entry_id, ballot.side as side,
		round.name as round_name, round.label as round_label, round.type as round_type, round.id as round_id,
		event.name as event_name, event.level as event_level,
		opponent.code as opponent,
		tourn.id as tourn_id, tourn.name as tourn_name, tourn.start as tourn_start,
		event.id as event_id,
		CONCAT(judge.last, ', ', judge.first) as judge_name,
		student.first as student_first, student.last as student_last,
		round_robin.value as round_robin

		from (ballot, entry_student, score, round, panel, event, tourn, judge, ballot oppballot, entry opponent)

		left join student on score.student = student.id
		left join event_setting round_robin on round_robin.event = event.id and round_robin.tag = 'round_robin'

		where entry_student.student = ?
			and ballot.entry        = entry_student.entry
			and score.ballot        = ballot.id
			and judge.id            = ballot.judge
			and panel.id            = ballot.panel
			and round.id            = panel.round
			and round.post_results  = 2
			and event.id            = round.event
			and tourn.id            = event.tourn
			and panel.id            = oppballot.panel
			and oppballot.entry     = opponent.id
			and opponent.id 	   != entry_student.entry
		group by score.id
		order by tourn.start desc, event.id asc, round.name, ballot.panel asc
	");

	my @scores  =  Tab::Score->search_pull_ballots($student1_id) if $student1;
	push @scores, Tab::Score->search_pull_ballots($student2_id) if $student2;

	my %seen = ();

	my %panel;
	my %summary;

	my %event_setting;

	foreach my $score (@scores) {
		unless( $event_setting{$score->event_id} ) {

			$event_setting{$score->event_id}{'level'} = $score->event_level;
			if ($score->round_robin) {
				$event_setting{$score->event_id}{'round_robin'}++;
				$event_setting{$score->event_id}{'level'} = "RR";
			}
		}
	}

	foreach my $score (@scores) {

		my $panel_id = $score->panel_id;

		next if $panel{$panel_id}{"done"}{$score->score_id}++;

		$panel{$panel_id}{'tourn'}       = $score->tourn_name;
		$panel{$panel_id}{'tourn_id'}    = $score->tourn_id;
		$panel{$panel_id}{'round_id'}    = $score->round_id;
		$panel{$panel_id}{'tourn_start'} = substr($score->tourn_start,0,10);
		$panel{$panel_id}{'event_name'}  = $score->event_name;
		$panel{$panel_id}{'opponent'}    = $score->opponent;
		$panel{$panel_id}{'round_name'}  = $score->round_name;
		$panel{$panel_id}{'round_label'} = $score->round_name;
		$panel{$panel_id}{'round_label'} = $score->round_label if $score->round_label;
		$panel{$panel_id}{'elim'}        = 0;
		$panel{$panel_id}{'this_yr'}     = 0;

		$panel{$panel_id}{'event_level'} = $score->event_level;
		$panel{$panel_id}{'event_level'} = "RR" if $event_setting{$score->event_id}{'round_robin'};
		$panel{$panel_id}{'event_level'} = "Missing" unless $panel{$panel_id}{'event_level'};

		$panel{$panel_id}{'event_id'}    = $score->event_id;
		$panel{$panel_id}{'entry_id'}    = $score->entry_id;

		if ($score->side == 1) {
			$panel{$panel_id}{'side'} = $panel{$panel_id}{'aff_label'};
			$panel{$panel_id}{'side'} = "Aff" unless $panel{$panel_id}{'aff_label'};
		} elsif ($score->side == 2) {
			$panel{$panel_id}{'side'} = $panel{$panel_id}{'neg_label'};
			$panel{$panel_id}{'side'} = "Neg" unless $panel{$panel_id}{'neg_label'};
		};

		my $tourn_epoch = $summary{"epochs"}{$score->tourn_id};

		unless ($tourn_epoch) {
			$tourn_epoch = str2time($score->tourn_start);
			$summary{"epochs"}{$score->tourn_id} = $tourn_epoch;
		}

		$panel{$panel_id}{'tourn_epoch'} = $tourn_epoch;

		if ( $tourn_epoch >= $start_epoch ) {
			$panel{$panel_id}{'this_yr'} = 1;
		}

		if ( $score->score_tag eq "winloss") {

			$panel{$panel_id}{'judge_raw'} .= " - " if $panel{$panel_id}{'judge_raw'};
			$panel{$panel_id}{'judge_raw'} .= $score->judge_name." ";
			$panel{$panel_id}{'judge'} .= "<span class=\"smallish third nospace nowrap\">".$score->judge_name." </span> ";
			$panel{$panel_id}{'total_ballots'}++;
			$panel{$panel_id}{'ballots_won'} += $score->score_value;

			if ( $score->score_value == 1 ) {
				$panel{$panel_id}{'decision_str'}.= "W";
			} else {
				$panel{$panel_id}{'decision_str'}.= "L";
			}
		}

		if ( $score->round_type eq "elim" || $score->round_type eq "final" ) {
			$panel{$panel_id}{'elim'} = 1;
			$panel{$panel_id}{'elim_level'} = $m->comp(
				"/funclib/round_elim_level.mas",
				round_id => $panel{$panel_id}{'round_id'}
			);
		}

		if ($score->score_student) {
			$summary{$score->entry_id}{"spoke"}{$score->score_student}++;
		}

		if ( lc($score->score_tag) eq "point" ) {

			if ($score->score_student == $student1_id) {
				$panel{$panel_id}{'spkr1_pts'} .= $score->score_value." ";
				$panel{$panel_id}{'spkr1_on_entry'} = 1;
			} elsif ($score->score_student == $student2_id) {
				$panel{$panel_id}{'spkr2_pts'} .= $score->score_value." ";
				$panel{$panel_id}{'spkr2_on_entry'} = 1;
			} elsif ($score->student_first) {
				$summary{$score->entry_id}{'third_speaker'} = $score->student_first." ".$score->student_last;
				$summary{$score->entry_id}{"i_cheated"}++;
			}
		}

    	$panel{$panel_id}{'tourn_order'} = $tourn_epoch;
	}

	Tab::Ballot->columns(TEMP => qw/entry_code/);
	Tab::Ballot->columns(TEMP => qw/entry_id/);
	Tab::Ballot->columns(TEMP => qw/panel_id/);
	Tab::Ballot->columns(TEMP => qw/score_id/);
	Tab::Ballot->columns(TEMP => qw/score_tag/);
	Tab::Ballot->columns(TEMP => qw/score_student/);
	Tab::Ballot->columns(TEMP => qw/score_value/);
	Tab::Ballot->columns(TEMP => qw/round_name/);
	Tab::Ballot->columns(TEMP => qw/round_type/);
	Tab::Ballot->columns(TEMP => qw/round_label/);
	Tab::Ballot->columns(TEMP => qw/round_id/);
	Tab::Ballot->columns(TEMP => qw/event_name/);
	Tab::Ballot->columns(TEMP => qw/event_level/);
	Tab::Ballot->columns(TEMP => qw/tourn_name/);
	Tab::Ballot->columns(TEMP => qw/tourn_id/);
	Tab::Ballot->columns(TEMP => qw/tourn_start/);
	Tab::Ballot->columns(TEMP => qw/judge_name/);
	Tab::Ballot->columns(TEMP => qw/opponent/);
	Tab::Ballot->columns(TEMP => qw/event_id/);
	Tab::Ballot->columns(TEMP => qw/panel_id/);
	Tab::Ballot->columns(TEMP => qw/panelbye/);

	Tab::Ballot->set_sql(pull_byes => "
		select ballot.id,
		ballot.bye, ballot.forfeit, ballot.side,
		panel.id as panel_id, panel.bye as panelbye,
		ballot.entry as entry_id,
		round.name as round_name, round.label as round_label, round.type as round_type, round.id as round_id,
		event.name as event_name, event.level as event_level,
		tourn.id as tourn_id, tourn.name as tourn_name, tourn.start as tourn_start,
		event.id as event_id

		from (ballot, entry_student, round, panel, event, tourn)

		where entry_student.student = ?
			and ballot.entry        = entry_student.entry
			and panel.id            = ballot.panel
			and round.id            = panel.round
			and round.post_results  = 2
			and event.id            = round.event
			and tourn.id            = event.tourn
			and (ballot.bye = 1 or panel.bye = 1 or ballot.forfeit = 1)

		group by ballot.id
		order by tourn.start desc, event.id asc, round.name, ballot.panel asc
	");

	my @ballots  =  Tab::Ballot->search_pull_byes($student1_id) if $student1;
	push @ballots, Tab::Ballot->search_pull_byes($student2_id) if $student2;

	foreach my $ballot (@ballots) {

		my $panel_id = $ballot->panel_id;

		next if $panel{$panel_id}{"done"}{"bye"}++;

		$panel{$panel_id}{'tourn'}       = $ballot->tourn_name;
		$panel{$panel_id}{'tourn_id'}    = $ballot->tourn_id;
		$panel{$panel_id}{'round_id'}    = $ballot->round_id;
		$panel{$panel_id}{'tourn_start'} = substr($ballot->tourn_start,0,10);
		$panel{$panel_id}{'event_name'}  = $ballot->event_name;
		$panel{$panel_id}{'round_name'}  = $ballot->round_name;
		$panel{$panel_id}{'round_label'} = $ballot->round_name;
		$panel{$panel_id}{'round_label'} = $ballot->round_label if $ballot->round_label;
		$panel{$panel_id}{'elim'}        = 0;
		$panel{$panel_id}{'this_yr'}     = 0;

		$panel{$panel_id}{'event_level'} = ucfirst($ballot->event_level);
		$panel{$panel_id}{'event_level'} = "RR" if $event_setting{$ballot->event_id}{'round_robin'};
		$panel{$panel_id}{'event_level'} = "Missing" unless $panel{$panel_id}{'event_level'};
		$panel{$panel_id}{'event_id'}    = $ballot->event_id;
		$panel{$panel_id}{'entry_id'}    = $ballot->entry_id;

		if ($ballot->bye || $ballot->panelbye) {
			$panel{$panel_id}{'bye'} = 1;
			$panel{$panel_id}{'side'} = "BYE";
			$panel{$panel_id}{'decision_str'}.= "W";
		} elsif ($ballot->forfeit) {
			$panel{$panel_id}{'forfeit'} = 1;
			$panel{$panel_id}{'side'} = "FFT";
			$panel{$panel_id}{'decision_str'}.= "L";
		}

		my $tourn_epoch = $summary{"epochs"}{$ballot->tourn_id};
		unless ($tourn_epoch) {
			$tourn_epoch = str2time($ballot->tourn_start);
			$summary{"epochs"}{$ballot->tourn_id} = $tourn_epoch;
		}

		$panel{$panel_id}{'tourn_epoch'} = $tourn_epoch;

		if ( $tourn_epoch >= $start_epoch ) {
			$panel{$panel_id}{'this_yr'} = 1;
		}

		if ( $ballot->round_type eq "elim" || $ballot->round_type eq "final" ) {
			$panel{$panel_id}{'elim'} = 1;
			$panel{$panel_id}{'elim_level'} = $m->comp(
				"/funclib/round_elim_level.mas",
				round_id => $panel{$panel_id}{'round_id'}
			);
		}

    	$panel{$panel_id}{'tourn_order'} = $tourn_epoch;
	}

	foreach my $key ( keys %panel ) {

		my $dummy;
		my $this_yr = "other_yr";
		$this_yr = "this_yr" if $panel{$key}{'this_yr'} == 1;

		my $entry_id = $panel{$key}{"entry_id"};
		if ($summary{$entry_id}{"spoke"}{$student1_id}) {
			$panel{$key}{'spkr1_on_entry'} = 1;
		}

		if ($summary{$entry_id}{"spoke"}{$student2_id}) {
			$panel{$key}{'spkr2_on_entry'} = 1;
		}

		if ( $panel{$key}{'spkr1_on_entry'} == 1 && $panel{$key}{'spkr2_on_entry'} == 1 ) { $dummy="together"; }
		if ( $panel{$key}{'spkr1_on_entry'} == 1 && $panel{$key}{'spkr2_on_entry'} != 1 ) { $dummy="spkr1"; }
		if ( $panel{$key}{'spkr1_on_entry'} != 1 && $panel{$key}{'spkr2_on_entry'} == 1 ) { $dummy="spkr2"; }

		$dummy .= "-".$this_yr."-".lc($panel{$key}{'event_level'});

		my $tag = "prelim";
		$tag = "elim" if $panel{$key}{"elim"} > 0;

		$summary{$dummy}{$tag.'_ballots'} += $panel{$key}{'total_ballots'};
		$summary{$dummy}{$tag.'_ballots_won'} += $panel{$key}{'ballots_won'};
		$summary{$dummy}{$tag.'_rounds'}++;

		$panel{$key}{'ballots_lost'} = ($panel{$key}{'total_ballots'} - $panel{$key}{'ballots_won'});

		if ( $panel{$key}{'ballots_won'} > $panel{$key}{'ballots_lost'} || $panel{$key}{'bye'} == 1) {
			$summary{$dummy}{$tag.'_wins'}++;
		}

		if ( $panel{$entry_id}{"i_cheated"} ) {
			my $cheat = "cheaters";
			$cheat = "cheaters_this_year" if $panel{$key}{"tourn_epoch"} >= $start_epoch;

			if ($panel{$key}{'spkr1_on_entry'}) {
				$summary{$cheat}{$student1_id}++;
			} elsif ($panel{$key}{'spkr2_on_entry'}) {
				$summary{$cheat}{$student2_id}++;
			}
		}

		$summary{$dummy}{'level'} = ucfirst($panel{$key}{"event_level"});
		$summary{$dummy}{"level"} = "Round Robin" if $summary{$dummy}{'level'} eq "Rr";

	}

	return \%panel, \%summary ;

</%init>

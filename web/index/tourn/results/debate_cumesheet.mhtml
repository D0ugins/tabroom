<%args>
	$tourn_id
	$event_id  => undef
	$sort_type => undef
</%args>
<%init>

	# Do not disable this.  it is critical to maintain a cache for server load. 
	# my $key = $event_id;
	# return if $m->cache_self( key => $key, expires_in => '2m' );

	use Data::Dumper;
	use Time::HiRes qw( time );
	my $start = time(); 
	
	my $event = Tab::Event->retrieve( $event_id ) if $event_id;	

	unless ( $event) {
		$m->print("No valid event identifier has been received; ");
		$m->print("hit the back button on your browser and try again.<br>");
		$m->abort;
	}

	my $cumesheet_published;

	foreach my $result_set ($event->result_sets) {
		if ($result_set->label eq "Cume Sheet" and $result_set->published == 1) { 
			$cumesheet_published = 1 
		};
	}

	unless ( $cumesheet_published ) {

		$m->print( "The tournament director has not yet authorized the release");
		$m->print(" of prelim seeds.<br>" ) ;
		$m->abort;
	}

	my $circuit = Tab::TournCircuit->search( tourn=> $event->tourn )->first;

	my $year = Tab::school_year->year;
	
	Tab::Score->columns(TEMP => qw/panel_bye/);						
	Tab::Score->columns(TEMP => qw/ballot_bye/);
	Tab::Score->columns(TEMP => qw/judge/);	
	Tab::Score->columns(TEMP => qw/judge_name/);	
	Tab::Score->columns(TEMP => qw/panel/);	
	Tab::Score->columns(TEMP => qw/entry/);
	Tab::Score->columns(TEMP => qw/tag/);
	Tab::Score->columns(TEMP => qw/score/);
	Tab::Score->columns(TEMP => qw/ballot_id /);
	Tab::Score->columns(TEMP => qw/round/);
	Tab::Score->columns(TEMP => qw/round_name/);
	Tab::Score->columns(TEMP => qw/post_results/);
	Tab::Score->set_sql(pull_entry => "
		SELECT score.*, 
			entry.id as entry, ballot.judge as judge, 
			panel.id as panel, 
			round.id as round, 
			round.name as round_name,
			CAST(round AS DECIMAL(10,2)), 
			panel.bye as panel_bye, 
			ballot.bye as ballot_bye, 
			CONCAT(judge.last, ', ', judge.first) as judge_name, 
			ballot.id as ballot_id, 
			round.post_results as post_results
		FROM ballot, entry, score, panel, round, judge
		WHERE entry.event= ? 

			and ballot.entry=entry.id
			and score.ballot=ballot.id
			and (
				score.tag = \"rank\" 
				or score.tag = \"points\" 
				or score.tag = \"rebuttal_points\" 
				or score.tag = \"ballot\") 
			and panel.id=ballot.panel
			and round.id=panel.round
			and judge.id=ballot.judge
			and round.post_results > 0
		order by entry.id asc, round asc, ballot.id asc, score.tag asc
	");

	my @scores = Tab::Score->search_pull_entry($event->id);

	# So it stores all the scores in two hashes, one for scores, one for judges

	# For %team_scores, it goes {entry.id}{round.id}{student}, and note that if
	# it stores a zero for student it's a team score

	my %team_scores;
	my %team_judges;

	foreach my $score (@scores) {

		next unless $score->post_results > 0;

		next if $score->post_results == 1 and $score->tag eq "rank";
		next if $score->post_results == 1 and $score->tag eq "points";

		if ($team_scores{$score->entry}{$score->round}{$score->ballot_id}{$score->student}) {

			$team_scores{$score->entry}{$score->round}{$score->ballot_id}{$score->student} 
				.= ' - '.$score->value;

		} else {

			$team_scores{$score->entry}{$score->round}{$score->ballot_id}{$score->student}
				= $score->value;
		}

		if ( $score->tag eq "ballot" ) {
			$team_scores{$score->entry}{$score->round}{$score->ballot_id}{0} 
				.= ' '.$score->value;
		}

		if ( $score->panel_bye or $score->ballot_bye ) { 
			$team_scores{$score->entry}{$score->round}{$score->ballot_id}{$score->student} = 2;
		}

		$team_judges{$score->entry}{$score->round}{$score->ballot_id}{'id'} = $score->judge;
		$team_judges{$score->entry}{$score->round}{$score->ballot_id}{'name'} = $score->judge_name;
		$team_judges{$score->entry}{$score->round}{'panel'} = $score->panel;


	}
	
	#set opponent
	foreach my $entry_key ( keys %team_scores) {

		foreach my $round_id ( keys %{$team_scores{$entry_key}} ) {			

			my @opponents = Tab::Ballot->search( 
				panel => $team_judges{$entry_key}{$round_id}{'panel'} 
			);

			foreach my $oppon (@opponents) {

				next unless $oppon->entry;

				if ($oppon->entry->id != $entry_key) { 
					$team_judges{$entry_key}{$round_id}{'oppn'} = $oppon->entry->code 
				};
			}
		}
	}

	#pull round info
	my $n_prelims; 
	my $hi_prelim; 

	my @rounds = $m->comp("/funclib/event_rounds.mas", event => $event, done => "yes");

	my %round_label;
	my %round_name;

	foreach my $round ( @rounds ) {
		if ($round->type ne 'elim' and $round->type ne 'final' ) {
			$n_prelims++;
			if ($round->name > $hi_prelim) { $hi_prelim = $round };
		}

		$round_label{$round->id} = $round->realname;
		$round_name{$round->id} = $round->name;
	}

	#create a hash for team info for sorting
	
	my %team_entry_info;
	foreach my $entry_key ( keys %team_scores) {

		my $entry_names = Tab::Entry->retrieve( $entry_key );				

		$team_entry_info{$entry_key}{'school'} = $entry_names->school->name;
		$team_entry_info{$entry_key}{'fullname'} = $entry_names->name;
		$team_entry_info{$entry_key}{'seed'} = 999;

	}

	#Add byes in
	my @panels;
	Tab::Panel->columns(TEMP => qw/entry/);
	Tab::Panel->columns(TEMP => qw/round_id/);
	Tab::Panel->columns(TEMP => qw/ballot_id/);
	Tab::Panel->columns(TEMP => qw/bbye/);
	Tab::Panel->columns(TEMP => qw/bfft/);

	Tab::Panel->set_sql(pull_panels => "
		SELECT 
			panel.*,
			ballot.bye as bbye,
			ballot.forfeit as bfft,
			ballot.entry as entry, 
			round.id as round_id, 
			ballot.id as ballot_id
		FROM ballot, panel, round
		WHERE round.event= ? 
		and panel.round = round.id
		and ballot.panel = panel.id
		and (
			ballot.bye = 1 
			or panel.bye = 1 
			or ballot.forfeit = 1
		)
	");

	@panels = Tab::Panel->search_pull_panels($event->id);

	foreach my $panel (@panels) {

		if ( $team_entry_info{$panel->entry} ) {
			$team_scores{$panel->entry}{$panel->round_id}{$panel->ballot_id}{0} = 3 if $panel->bfft;
			$team_scores{$panel->entry}{$panel->round_id}{$panel->ballot_id}{0} = 2 if $panel->bye;
			$team_scores{$panel->entry}{$panel->round_id}{$panel->ballot_id}{0} = 2 if $panel->bbye;
		}
	}


	#now load results info

	my ($entries_ref, $tbs_ref, $desc_ref, $forfeit_ref, 
		$meh, $panrank_ref, $panletter_ref, $long_desc_ref) 
		= $m->comp("/tabbing/results/order_entries.mas", long_names => 1, round => $hi_prelim);

	my $x;

	#figure out where in the sort order wins and points are	

	my $win_str; my $pts_str;

	foreach my $key ( keys %{$desc_ref} ) {
		if ( ${$desc_ref}{$key} eq 'W' || ${$desc_ref}{$key} eq 'Win' ) { $win_str = $key } ;
		if ( ${$desc_ref}{$key} eq 'Pts' ) { $pts_str = $key } ;
	}
	
	#assign wins and points
	foreach my $key (sort {$a <=> $b} keys %{$entries_ref}) { 
		$x++;
		foreach my $entry_id (@{${$entries_ref}{$key}}) { 
			$team_entry_info{$entry_id}{'seed'}=$x;
			$team_entry_info{$entry_id}{'wins'}= ${$tbs_ref}{$entry_id."-".$win_str} ;
			$team_entry_info{$entry_id}{'points'}= ${$tbs_ref}{$entry_id."-".$pts_str} ;
		}
	}
	
#	my $sort_str="sort { $team_entry_info{$a}->{'school'} cmp $team_entry_info{$b}->{'school'} }";
	my @team_entry_order;

	if ($sort_type eq 'alpha') {
		@team_entry_order = 
			sort { $team_entry_info{$a}->{'school'} cmp $team_entry_info{$b}->{'school'} } 
			keys %team_entry_info;

	} else {
		@team_entry_order = 
			sort { $team_entry_info{$a}->{'seed'} <=> $team_entry_info{$b}->{'seed'} } 
			keys %team_entry_info;
	}
		
	my @decision;

	$decision[0]="Loss";	
	$decision[1]="Win";	
	$decision[2]="Bye";	
	$decision[3]="Forfeit";	

</%init>

	<& menu.mas, tourn_id => $tourn_id, event_id => $event->id, whoami => "cumesheet" &>

	<div class="main">

		<div class="full nospace"> 
			<span class="threefifths nospace">
				<h4><% $event->tourn->name %></h4>
			</span>

			<span class="twofifths rightalign nospace righ">
				<h4>
					Cumulative Results: <% $event->abbr %>
				</h4>
			</span>
		</div>


	<script>
		
		showall = function() {

			$(".rows").removeClass("hidden");

			$(".headerrow").addClass("yellowrow");

			$("#showall").addClass("hidden");
			$("#hideall").removeClass("hidden");

			$(".rowtoggle").removeClass("fa-eye-slash");
			$(".rowtoggle").removeClass("redtext");
			$(".rowtoggle").addClass("greentext");
			$(".rowtoggle").addClass("fa-eye");
		}

		hideall = function() {

			$(".rows").addClass("hidden");
			$(".headerrow").removeClass("yellowrow");

			$("#showall").removeClass("hidden");
			$("#hideall").addClass("hidden");

			$(".rowtoggle").addClass("fa-eye-slash");
			$(".rowtoggle").addClass("redtext");
			$(".rowtoggle").removeClass("greentext");
			$(".rowtoggle").removeClass("fa-eye");
		}

		showRow = function(row_name) {

			$("#"+row_name).toggleClass("fa-eye-slash");
			$("#"+row_name).toggleClass("redtext");
			$("#"+row_name).toggleClass("greentext");
			$("#"+row_name).toggleClass("fa-eye");

			$("#row_"+row_name).toggleClass("hidden");
			$(".rows_"+row_name).toggleClass("hidden");

		}
		
	</script>

	<div class="centeralign marbottommore">

		<span class="half nospace leftalign">
			<a 
				class="dkblue button hidden" 
				id="showall" 
				onclick="showall();" 
			>Show full detail</a>

			<a 	
				class="dkblue button" 
				id="hideall" 
				onclick="hideall();" 
			>Hide full detail</a>

		</span>

		<span class="half nospace rightalign">

%		if ($sort_type eq "alpha") { 
			<a 
				class="dkblue button" 
				href="debate_cumesheet.mhtml?event_id=<% $event->id %>&sort_type=seed&tourn_id=<% $tourn_id %>" >
				Sort by seed
			</a>

%		} else { 

			<a 
				class="dkblue button" 
				href="debate_cumesheet.mhtml?event_id=<% $event->id %>&sort_type=alpha&tourn_id=<% $tourn_id %>"
			>Sort alphabetically</a>

%		}

		</span>

	</div>

	
	<table>
		
		<tbody id="table_body" class="smallish">

%			my $switch;

%			foreach my $entry_key ( @team_entry_order ) {

%				my @students = $m->comp("/funclib/entry_students.mas", entry_id => $entry_key);

				<tr 
					class="<% $switch++ % 2 ? "even" : "odd" %> yellowrow headerrow" 
					id="header_<% $entry_key %>">

					<td 
						class="centeralign hover"
						onclick="showRow('<% $entry_key %>');"
					>
						<a 
							class="greentext centeralign fa fa-lg fa-eye rowtoggle" 
							id="<% $entry_key %>">
						</a>
					</td>

					<td>
						<% $team_entry_info{$entry_key}{'school'} %>
					</td>

					<td>
%						#Add a hyperlink to the bid sheets if its a 2-person team				

%						if ( scalar(@students) == 2) {				
							<a class="white" 
								href="/index/results/team_lifetime_record.mhtml?id1=<% $students[0]->student %>&id2=<% $students[1]->student %>">
%						}				
							<% $team_entry_info{$entry_key}{'fullname'} %>
						</a>
					</td>

%					my $n_panels = scalar keys %{$team_scores{$entry_key}};				
%					if ($n_panels > $n_prelims) { $n_panels = $n_prelims };

					<td class="nowrap centeralign">
						<% $team_entry_info{$entry_key}{'wins'} %>-<% $n_panels-$team_entry_info{$entry_key}{'wins'} %>
					</td>

					<td class="nowrap centeralign">
						<% $team_entry_info{$entry_key}{'points'} %> pts
					</td>

					<td class="nowrap centeralign">
						Seed <% $team_entry_info{$entry_key}{'seed'} %>
					</td>

				</tr>

				<tr id="row_<% $entry_key %>" class="rows centeralign explain">

					<th class="smallish">
						Round
					</td>

					<th class="smallish">
						Opponent
					</td>

					<th class="smallish">
						Judge
					</td>

					<th class="smallish">
						Decision
					</td>				

%					foreach my $student (@students) {

						<th class="smallish">
							<a 	
								class="plain block centeralign" 
								href="/index/results/speaker_detail.mhtml?spkr_id=<% $student->id %>&year=<% $year %>&event_type=debate&circuit_id=<% $circuit->id %>">

								<% $student->first  %> <% $student->last %>
							</a> 
						</th>
%					}

					<td></td>

				</tr>

%				foreach my $round_id ( sort { $a <=> $b} keys %{$team_scores{$entry_key}} ) {			

					<tr class="none rows rows_<% $entry_key %> row">
			
						<td>
							<% $round_label{$round_id} %>
						</td>


						<td>
							<% $team_judges{$entry_key}{$round_id}{'oppn'} %>
						</td>

						<td class="nospace">

%						my @round_ids = keys %{$team_scores{$entry_key}{$round_id}};

%						foreach my $score_key (sort {$round_name{$a} <=> $round_name{$b}} @round_ids) { 
							<div class="full padleft padless nowrap">
								<% $team_judges{$entry_key}{$round_id}{$score_key}{'name'} %>
							</div>
%						}

						</td>

						<td class="nowrap nospace">

%						foreach my $score_key ( sort keys %{$team_scores{$entry_key}{$round_id}} ) {							
							<div class="full padleft padless nowrap centeralign">
								<% $decision[$team_scores{$entry_key}{$round_id}{$score_key}{0}] %>
							</div>
%						}

						</td>

%						foreach my $student (@students) {

							<td class="nowrap nospace">
%								foreach my $score_key ( sort keys %{$team_scores{$entry_key}{$round_id}} ) {

									<div class="full nowrap padleft">
										<% $team_scores{$entry_key}{$round_id}{$score_key}{$student->id} %>
									</div>
%								}					
							</td>
%						}

						<td></td>


					</tr>
%				}

%			}	
			</tbody>
		</table>	

% my $end = time(); print "<br>Load time ";
% printf("%.2f\n", $end - $start);

	</div>

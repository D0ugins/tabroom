<%args>
	$person
	$country    => undef
	$state      => undef
	$year       => undef
	$circuit_id => undef
</%args>
<%init>

	use POSIX;

	my $key = $country."-".$year."-".$state."-".$circuit_id;

#	return if $m->cache_self(
#		key        => $key,
#		expires_in => '10m'
#	);

	my $tz = $person->tz if $person;
	$tz = "UTC" unless $tz;

	my $now = DateTime->now;
	my $start = $now->clone;

	my $limit;
	my $weekend_limit;
	my $amount;

	$year = int($year);

	if ($year > 0 && $year < 3000) {
		$limit .= " and tourn.start < '$year-07-01 00:00:00'";
		$weekend_limit .= " and weekend.start < '$year-07-01 00:00:00'";
		$year--;

		$limit .= " and tourn.start > '$year-07-01 00:00:00'";
		$weekend_limit .= " and weekend.start > '$year-07-01 00:00:00'";
		$year++;

	} else {

		$start->subtract(days => 2);
		$limit .= " and tourn.end > '".DateTime::Format::MySQL->format_datetime($start)."'";
		$weekend_limit .= " and weekend.end > '".DateTime::Format::MySQL->format_datetime($start)."'";
		$amount = " limit 256";
	}

	my $state_hash = $m->comp("/funclib/state_hash.mas");

	if ($state && defined $state_hash->{$state}) {
		$limit .= " and tourn.state = '$state'";
		$weekend_limit .= " and tourn.state = '$state'";
	}

	my $country_hash = $m->comp("/funclib/country_hash.mas");

	if ($country && defined $country_hash->{$country}) {
		$limit .= " and tourn.country = '$country'";
		$weekend_limit .= " and tourn.country = '$country'";
	}

	my $circuit;

	if ($circuit_id && $circuit_id == int($circuit_id)) {
		$limit .= "\nand exists ( select tourn_circuit.id from tourn_circuit ";
		$limit .= "where tourn_circuit.tourn = tourn.id ";
		$limit .= "and tourn_circuit.approved = 1 ";
		$limit .= "and tourn_circuit.circuit = '$circuit_id' )\n";

		$weekend_limit .= "\nand exists ( select tourn_circuit.id from tourn_circuit ";
		$weekend_limit .= "where tourn_circuit.tourn = tourn.id ";
		$weekend_limit .= "and tourn_circuit.approved = 1 ";
		$weekend_limit .= "and tourn_circuit.circuit = '$circuit_id')\n";

		my $circuit = Tab::Circuit->retrieve($circuit_id);
	}

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select tourn.id, tourn.webname, tourn.name, tourn.tz, tourn.hidden,
			tourn.state, tourn.country, tourn.city,
			CONVERT_TZ(tourn.start, '+00:00', tourn.tz) start,
			CONVERT_TZ(tourn.end, '+00:00', tourn.tz) end,
			CONVERT_TZ(tourn.reg_end, '+00:00', tourn.tz) reg_end,
			CONVERT_TZ(tourn.reg_start, '+00:00', tourn.tz) reg_start,
			msnats.id as msnats,
			nats.id as nats,
			closed.value as closed,
			count(distinct school.id) as tourncount,
			YEAR(tourn.start) as year,
			WEEK(tourn.start) as week

		from tourn

		left join tourn_setting closed
			on closed.tourn = tourn.id
			and closed.tag = 'closed_entry'

		left join tourn_setting msnats
			on msnats.tourn = tourn.id
			and msnats.tag = 'nsda_ms_nats'

		left join tourn_setting nats
			on nats.tourn = tourn.id
			and nats.tag = 'nsda_nats'

		left join school on
			tourn.id = school.tourn

		where tourn.hidden != 1
		$limit
		and not exists (
			select weekend.id
			from weekend
			where weekend.tourn = tourn.id
		)
		group by tourn.id
		order by tourn.start, tourncount
		$amount
	");

	my %tourns;
	my %cache;

	$sth->execute();

	while (
		my (
			$tourn_id, $tourn_webname, $tourn_name, $tourn_tz, $hidden,
			$state, $country, $city,
			$tourn_start, $tourn_end,
			$reg_end, $reg_start,
			$msnats, $nats,
			$closed,
			$tourn_count,
			$year,
			$week
		) = $sth->fetchrow_array()
	) {

		$tourns{$tourn_id}{"web"}  = $tourn_webname;
		$tourns{$tourn_id}{"name"} = $tourn_name;

		$tourns{$tourn_id}{"count"} = $tourn_count;
		$tourns{$tourn_id}{"year"}  = $year;
		$tourns{$tourn_id}{"week"}  = $week;

		$tourns{$tourn_id}{"city"}    = $city;
		$tourns{$tourn_id}{"state"}   = $state;
		$tourns{$tourn_id}{"country"} = $country;

		if ($msnats || $nats) {
			$tourns{$tourn_id}{"nats"}++;
		}

		unless ($cache{$tourn_tz}) {
			$cache{$tourn_tz} = Tab::tzname($tourn_tz);
		}

		$tourns{$tourn_id}{"tz"} = $cache{$tourn_tz};
		foreach my $key ($tourn_start, $tourn_end, $reg_start, $reg_end) {
			$cache{"date"}{$key} = DateTime::Format::MySQL->parse_datetime($key);
		}

		my $start_date = $cache{"date"}{$tourn_start}->month."/".$cache{"date"}{$tourn_start}->day;
		my $end_date = $cache{"date"}{$tourn_end}->month."/".$cache{"date"}{$tourn_end}->day;

		unless ($start_date eq $end_date) {
			$tourns{$tourn_id}{"dates"} = $start_date." - ".$end_date;
		} else {
			$tourns{$tourn_id}{"dates"} = $start_date;
		}

		my $reg_start_dt;
		my $reg_start_time;
		my $reg_end_dt;
		my $reg_end_time;

		if ($closed) {

			$tourns{$tourn_id}{"registration"} = '
				<span class="redtext full centeralign semibold">No open registration</span>
			';

		} elsif ($cache{"date"}{$reg_start} && $cache{"date"}{$reg_start}->epoch > $now->epoch) {

			# Not yet open

			$reg_start_dt = $cache{"date"}{$reg_start}->month."/".$cache{"date"}{$reg_start}->day;
			$reg_start_time .= $cache{"date"}{$reg_start}->hour_12.":".$cache{"date"}{$reg_start}->strftime("%M")." ".$cache{"date"}{$reg_start}->strftime('%p');

			$tourns{$tourn_id}{"registration"} = '
				<span class="orangetext semibold quarter">Opens</span>
				<span class="quarter">'.$reg_start_dt.'</span>
				<span class="half">'.$reg_start_time.' '.$tourns{$tourn_id}{"tz"}.'</span>
			';

		} elsif ($cache{"date"}{$reg_end} && $cache{"date"}{$reg_end}->epoch > $now->epoch) {

			# Open, when's it due?
			$reg_end_dt = $cache{"date"}{$reg_end}->month."/".$cache{"date"}{$reg_end}->day;
			$reg_end_time .= $cache{"date"}{$reg_end}->hour_12.":".$cache{"date"}{$reg_end}->strftime("%M")." ".$cache{"date"}{$reg_end}->strftime('%p');
			$tourns{$tourn_id}{"registration"} = '
				<span class="greentext semibold quarter">Due by</span>
				<span class="quarter centeralign">'.$reg_end_dt.'</span>
				<span class="half">'.$reg_end_time.' '.$tourns{$tourn_id}{"tz"}.'</span>
			';

		} else {

			# Deadline passed
			$tourns{$tourn_id}{"registration"} = '
				<span class="redtext full centeralign semibold">Closed</span>
			';
		}
	}

	$sth->finish();

	$sth = $dbh->prepare("
		select
			tourn.id, tourn.webname, tourn.name, tourn.tz,
			weekend.name, weekend.city, weekend.state,
			site.name, closed.value,
			CONVERT_TZ(weekend.start, '+00:00', tourn.tz) start,
			CONVERT_TZ(weekend.end, '+00:00', tourn.tz) end,
			CONVERT_TZ(weekend.reg_end, '+00:00', tourn.tz) reg_end,
			CONVERT_TZ(weekend.reg_start, '+00:00', tourn.tz) reg_start,
			count(distinct school.id) as tourncount,
			YEAR(weekend.start) as year,
			WEEK(weekend.start) as week,
			nsda_tabbing_software.value

		from (tourn, weekend)

		left join site on weekend.site = site.id

		left join tourn_setting nsda_tabbing_software
			on nsda_tabbing_software.tourn = tourn.id
			and nsda_tabbing_software.tag = 'nsda_tabbing_software'

		left join tourn_setting closed
			on closed.tourn = tourn.id
			and closed.tag = 'closed_entry'

		left join tourn_setting msnats
			on msnats.tourn = tourn.id
			and msnats.tag = 'nsda_ms_nats'

		left join tourn_setting nats
			on nats.tourn = tourn.id
			and nats.tag = 'nsda_nats'

		left join school on tourn.id = school.tourn

		where tourn.hidden != 1
		$weekend_limit
		and weekend.tourn = tourn.id

		group by tourn.id
		order by tourn.start, tourncount
		$amount
	");

	$sth->execute();

	while (
		my (
			$tourn_id, $tourn_webname, $tourn_name, $tourn_tz,
			$weekend_name, $city, $state,
			$site_name, $closed,
			$tourn_start, $tourn_end,
			$reg_end, $reg_start,
			$tourn_count, $year, $week,
			$tabbing
		) = $sth->fetchrow_array()
	) {

		$tourn_name =~ s/District Tournament//g;

		$tourns{$tourn_id}{"web"}  = $tourn_webname;
		$tourns{$tourn_id}{"name"} = $tourn_name;

		$tourns{$tourn_id}{"weekend_name"} = $weekend_name;
		$tourns{$tourn_id}{"districts"} = 1;

		$tourns{$tourn_id}{"count"} = $tourn_count;
		$tourns{$tourn_id}{"year"}  = $year;
		$tourns{$tourn_id}{"week"}  = $week;

		if ($city) {
			$tourns{$tourn_id}{"city"}  = $city;
		} else {
			$tourns{$tourn_id}{"city"}  = $site_name;
		}

		$tourns{$tourn_id}{"state"} = $state;

		unless ($cache{$tourn_tz}) {
			$cache{$tourn_tz} = Tab::tzname($tourn_tz);
		}

		foreach my $key ($tourn_start, $tourn_end, $reg_start, $reg_end) {
			$cache{"date"}{$key} = DateTime::Format::MySQL->parse_datetime($key);
		}

		my $start_date = $cache{"date"}{$tourn_start}->month."/".$cache{"date"}{$tourn_start}->day;
		my $end_date = $cache{"date"}{$tourn_end}->month."/".$cache{"date"}{$tourn_end}->day;

		unless ($start_date eq $end_date) {
			$tourns{$tourn_id}{"dates"} = $start_date." - ".$end_date;
		} else {
			$tourns{$tourn_id}{"dates"} = $start_date;
		}

		my $reg_start_dt;
		my $reg_start_time;
		my $reg_end_dt;
		my $reg_end_time;

		if ($tabbing eq "jot") {

			$tourns{$tourn_id}{"registration"} = '
				<span class="full centeralign semibold">On Joy of Tournments</span>
			';

		} elsif ($tabbing eq "speechwire") {

			$tourns{$tourn_id}{"registration"} = '
				<span class="full centeralign semibold">On Speechwire</span>
			';

		} elsif ($closed) {

			$tourns{$tourn_id}{"registration"} = '
				<span class="redtext full centeralign semibold">No open registration</span>
			';

		} elsif ($cache{"date"}{$reg_start} && $cache{"date"}{$reg_start}->epoch > $now->epoch) {

			# Not yet open

			$reg_start_dt = $cache{"date"}{$reg_start}->month."/".$cache{"date"}{$reg_start}->day;
			$reg_start_time .= $cache{"date"}{$reg_start}->hour_12.":".$cache{"date"}{$reg_start}->strftime("%M")." ".$cache{"date"}{$reg_start}->strftime('%p');

			$tourns{$tourn_id}{"registration"} = '
				<span class="orangetext semibold quarter">Opens</span>
				<span class="quarter">'.$reg_start_dt.'</span>
				<span class="half">'.$reg_start_time.' '.$tourns{$tourn_id}{"tz"}.'</span>
			';

		} elsif ($cache{"date"}{$reg_end} && $cache{"date"}{$reg_end}->epoch > $now->epoch) {

			# Open, when's it due?
			$reg_end_dt = $cache{"date"}{$reg_end}->month."/".$cache{"date"}{$reg_end}->day;
			$reg_end_time .= $cache{"date"}{$reg_end}->hour_12.":".$cache{"date"}{$reg_end}->strftime("%M")." ".$cache{"date"}{$reg_end}->strftime('%p');
			$tourns{$tourn_id}{"registration"} = '
				<span class="greentext semibold quarter">Due by</span>
				<span class="quarter centeralign">'.$reg_end_dt.'</span>
				<span class="half">'.$reg_end_time.' '.$tourns{$tourn_id}{"tz"}.'</span>
			';

		} else {

			# Deadline passed
			$tourns{$tourn_id}{"registration"} = '
				<span class="redtext full centeralign semibold">Closed</span>
			';
		}
	}

	$sth->finish();

	my $circuit_th = $dbh->prepare('
		select
			circuit.id, circuit.abbr, circuit.name
		from circuit
		where circuit.active = 1
		order by circuit.name
	');

	$circuit_th->execute();

</%init>

	<div class="menu">

		<div class="sidenote">

			<div class="centeralign full">
				<a
					class="bluetext buttonwhite invert bigger seveneighths centeralign"
					href="index.mhtml?circuit_id=83"
				>NSDA Districts Calendar</a>

			</div>

			<h4>Circuit</h4>

			<form action="index.mhtml" method="post">

			<input
				type  = "hidden"
				name  = "state"
				value = "<% $state %>"
			>

			<input
				type  = "hidden"
				name  = "country"
				value = "<% $country %>"
			>

			<input
				type  = "hidden"
				name  = "year"
				value = "<% $year %>"
			>

			<div class="row centeralign full">

				<select
					name     = "circuit_id"
					onchange = 'this.form.submit()'
					class    = "fixedmed"
				>

					<option value=""></option>

<%perl>
					while (
						my ($id, $name, $abbr) = $circuit_th->fetchrow_array()
					) {
</%perl>
						<option value="<% $id %>"
							<% $circuit_id == $id ? 'selected' : "" %>
						> <% $abbr %> <% $name %>
						</option>
%					}

				</select>

			</div>

			</form>

			<h4>School Year Ending</h4>

			<form action="index.mhtml" method="post">

			<input
				type  = "hidden"
				name  = "state"
				value = "<% $state %>"
			>

			<input
				type  = "hidden"
				name  = "country"
				value = "<% $country %>"
			>

			<input
				type  = "hidden"
				name  = "circuit"
				value = "<% $circuit_id %>"
			>

			<div class="row centeralign full">

				<select
					name     = "year"
					onchange = 'this.form.submit()'
					class    = "fixedmed"
				>

					<option value=""></option>

%					my $ayear = $now->year + 1;

%					while ($ayear > 2002) {
						<option value="<% $ayear %>" <% $year == $ayear ? 'selected' : "" %>>
							<% $ayear-- %>
						</option>
%					}

				</select>

			</div>

			</form>

<%perl>

	my $state_sth = $dbh->prepare('
		select distinct state
		from tourn
		where state is not null
		and state != ""
		order by state'
	);

	$state_sth->execute();

	my $cth = $dbh->prepare('
		select distinct country
		from tourn
		where country is not null
		and country != ""
		order by country'
	);

	$cth->execute();

</%perl>

			<h4>States/Provinces</h4>

			<div class="row centeralign full">

				<form action="index.mhtml" method="post">

				<input
					type  = "hidden"
					name  = "year"
					value = "<% $year %>"
				>

				<input
					type  = "hidden"
					name  = "country"
					value = "<% $country %>"
				>

				<input
					type  = "hidden"
					name  = "circuit"
					value = "<% $circuit_id %>"
				>

				<select
					name     = "state"
					class    = "fixedmed"
					onchange = "this.form.submit();"
				>

					<option value=""></option>

%					while( my $astate = $state_sth->fetchrow_array() ) {
%						next unless $astate;
						<option
							value="<% $astate %>"
							<% $astate eq $state ? 'selected="selected"' : "" %>
						> <% $astate %> <% $state_hash->{$astate} %>
						</option>
%					}

				</select>

				</form>

			</div>

			<h4>Countries</h4>

			<div class="row centeralign full">

				<form action="index.mhtml" method="post">

				<input
					type  = "hidden"
					name  = "year"
					value = "<% $year %>"
				>

				<input
					type  = "hidden"
					name  = "state"
					value = "<% $state %>"
				>

				<input
					type  = "hidden"
					name  = "circuit"
					value = "<% $circuit_id %>"
				>

				<select
					name     = "country"
					class    = "fixedmed"
					onchange = "this.form.submit();"
				>

					<option value=""></option>

%					while( my $acountry = $cth->fetchrow_array() ) {
%						next unless $acountry;
						<option
							value="<% $acountry %>"
							<% $acountry eq $country ? 'selected="selected"' : "" %>
						> <% $acountry %> <% $country_hash->{$acountry} %>
						</option>
%					}

				</select>

				</form>

			</div>

%			$sth->finish();
%			$cth->finish();
%			$circuit_th->finish();
%			$dbh->disconnect();

		</div>
	</div>

%	if ($r->hostname eq "www.tabroom.com" ) {
		<& "/funclib/ad.mas" &>
		<& "/funclib/external_ad.mas" &>
%	}

	<div class="main">

		<div class="full nospace">

			<span class="twothirds nospace">

				<h2>
%					if ($year || $country || $state) {
						<% scalar (keys %tourns) %> Tournaments
%					} else {
						Upcoming Tournaments
%					}
				</h2>

			</span>

			<span
				class = "third nospace rightalign"
				id    = "tournlist_buttonarea"
			>
				<h6>
%					if ($state) {
						in <% $state_hash->{$state} %>
%					}

%					if ($country) {
						in <% $country_hash->{$country} %>
%					}
%					if ($year) {
						in the <% ($year - 1)%>-<% $year %> school year
%					}
%					if ($circuit_id > 0) {
						in <% $circuit->name %>
%					}
				</h6>
			</span>

		</div>

		<& "/funclib/tablesorter.mas",
			table     => "tournlist",
		&>

		<table
			id    = "tournlist"
			class = "narrow"
		>

			<thead>

			<tr class="yellowrow">

				<th class="smaller">
					Dates
				</th>

				<th class="smaller">
					Tournament
				</th>

				<th class="smaller">
					City
				</th>

				<th title="US State or Country" class="smaller centeralign">
					ST/CY
				</th>

				<th class="smaller">
					Registration
				</th>

			</tr>

			</thead>

			<tbody class="smaller">

<%perl>
				my $counter;

				foreach my $tourn_id (
					sort {
						$tourns{$a}{"week"} <=> $tourns{$b}{"week"}
						|| $tourns{$b}{"count"} <=> $tourns{$a}{"count"}
						|| $tourns{$a}{"name"} cmp $tourns{$b}{"name"}
					} keys %tourns
				) {

					last if $counter++ > 256;
</%perl>

				<tr <% $tourns{$tourn_id}{"nats"} ? "semibold bluetext" : "" %>>

					<td class="centeralign smallish nowrap">
						<span class="hidden"><% $tourns{$tourn_id}{'week'}.'.'.$tourns{$tourn_id}{"count"} %></span>
						<% $tourns{$tourn_id}{"dates"} %>
					</td>

					<td class="nospace">
						<a
							class = "white smallish nearfull padvertless"
							href  = "/index/tourn/index.mhtml?tourn_id=<% $tourn_id %>"
						>
%						if ($tourns{$tourn_id}{"districts"}) {
							<span class="semibold half">
								NSDA: <% $tourns{$tourn_id}{"name"} %>
							</span>
							<span class="half">
								<% $tourns{$tourn_id}{"weekend_name"} %>
							</span>
%						} else {
							<% $tourns{$tourn_id}{"name"} %>
%						}
						</a>
					</td>

					<td title="<% $tourns{$tourn_id}{"city"} %>" class="smallish padvertno">
						<% substr($tourns{$tourn_id}{"city"}, 0, 24) %>
					</td>

					<td title="<% $tourns{$tourn_id}{"state"} %>" class="centeralign padvertless smallish">
%						if ($tourns{$tourn_id}{"state"}) {
							<a class="white"
								href="index.mhtml?state=<% $tourns{$tourn_id}{"state"} %>&country=<% $country %>&circuit_id=<% $circuit_id %>&year=<% $year %>">
%						} elsif ($tourns{$tourn_id}{"country"}) {
							<a class="white"
								href="index.mhtml?country=<% $tourns{$tourn_id}{"country"} %>&circuit_id=<% $circuit_id %>&year=<% $year %>">
%						}
							<% $tourns{$tourn_id}{"state"}
								? $tourns{$tourn_id}{"state"}
								: $tourns{$tourn_id}{"country"}
							%>
						</a>
					</td>

					<td class="nowrap">
						<a
							class="white smaller nospace"
							href="/index/tourn/index.mhtml?tourn_id=<% $tourn_id %>"
						>
							<% $tourns{$tourn_id}{"registration"}  %>
						</a>
					</td>
				</tr>
%			}
			</tbody>
		</table>

	</div>


<%args>
	$person
	$round_id  => undef
	$type      => undef
	$published => 1
	$clearing  => undef
	$listed    => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	my $msg;
	my $round = Tab::Round->retrieve($round_id) if $round_id;

	unless ($round) {
		my $msg = "No round found for id $round_id.  Refresh and try again";
		$m->print('{ "error":true,"message":"'.$msg.'" }');
		$m->abort();
	}

	if ($type eq "clearing") {

		undef $clearing if $clearing eq "false";

		$round->setting("publish_entry_list", 1) if $clearing;
		$round->setting("publish_entry_list", 0) unless $clearing;

		$msg = "List of clearing entries has been removed from the public website";
		$msg = "Clearing entries have been listed in alphabetical order on the public website" if $clearing;

		$round->update();

	} else {

		$round->published($published);

		$msg = "Round has been removed from the public website";
		$msg = "Round has been published on the public website" if $published;
		$msg .= " without judges" if $published == 2;
		$msg .= " with motion" if $published == 3;

		$round->update();
	}

	if ($published || $clearing) {
		$m->comp(
			"/funclib/auto_backups.mas",
			subject => "Published",
			person  => $person,
			round   => $round
		);
	}

	$m->print('{ "error":false, "message":"'.$msg.'" }');
	$m->abort();

</%init>

<%args>
	$person
	$round
	$round_settings
	$tourn
	$tourn_settings
	$event
	$event_settings
	$category
	$category_settings
	$entered => undef
	$nowarn  => undef
</%args>
<%init>

	use Math::Round qw(round);

	my $round_type = $round->type;
	my $round_robin++ if $event_settings->{"round_robin"};
	my $online_ballots++ if $event_settings->{'online_ballots'};
	my $bracket_by_ballots++ if $event_settings->{"bracket_by_ballots"};
	my $winloss_type;

	if ($tourn_settings->{"nsda_nats"}
		&! $event_settings->{"not_nats"}
	) {
		if ($round_type eq "elim"
			|| $round_type eq "final"
			|| $round_type eq "runoff"
		) {
			$winloss_type = "elim";
		} else {
			$bracket_by_ballots++;
		}
	}

	my $tab_ratings   = $category_settings->{"tab_ratings"};
	my $coach_ratings = $category_settings->{"coach_ratings"};
	my $diversity     = $category_settings->{"track_diversity"};
	my $no_codes      = $category_settings->{"no_codes"};
	my $rounds_per    = $category_settings->{"rounds_per"};

	if ($round->type eq "elim" || $round->type eq "final") {
		undef $rounds_per;
	}

	my %round_merge;
	my %round_event;
	my @all_rounds;

	if ($round_settings->{"timeslot_merge"}) {

		my $merge_ref = JSON::decode_json($round_settings->{"timeslot_merge"});
		@all_rounds = $round->timeslot->rounds();
		my %round_name_by_id = map {$_->id => $_->name} @all_rounds;
		my %round_event_by_id = map {$_->id => $_->event->abbr} @all_rounds;

		foreach my $panel ( keys %{$merge_ref}) {
			$round_merge{$panel}{"round"} = $round_name_by_id{$merge_ref->{$panel}};
			$round_merge{$panel}{"event"} = $round_event_by_id{$merge_ref->{$panel}};
		}
	}

	my $judge_use_ref = $m->comp(
		"/funclib/judge_use.mas",
		round => $round,
		event => $event
	);

	my %judge_use = %{$judge_use_ref};
	my $flighted = $round->flighted;
	my $published = $round->published;
	my $aff_string = $event_settings->{"aff_label"};
	my $neg_string = $event_settings->{"neg_label"};

	my $blind_mode++
		if $event_settings->{"blind_mode"}
		&& $published < 1;

	my %anonymize = $m->comp("/funclib/blind_mode.mas", round => $round)
		if $blind_mode;

	my $district = $tourn_settings->{"nsda_district"};
	my $all++ if $tourn_settings->{"nsda_nats"} && $event_settings->{"supp"};

	$aff_string = "Aff" unless $aff_string;
	$neg_string = "Neg" unless $neg_string;

	my $last_round_name = $round->name - 1;

	my $last_round = Tab::Round->search(
		event => $event->id,
		name => $last_round_name
	)->first;

	my %entry_byes = $m->comp(
		"/funclib/entry_byes.mas",
			event => $event,
			round => $last_round
	);

	my %entry_wins = $m->comp(
		"/funclib/entry_wins.mas",
			event    => $event,
			round    => $last_round,
			all      => $all,
			type     => $winloss_type,
			first_tb => $bracket_by_ballots
	);

	my %entry_losses = $m->comp(
		"/funclib/entry_losses.mas",
			event => $event,
			type  => $winloss_type,
			all   => $all,
			round => $last_round
	) unless $bracket_by_ballots;

	foreach my $ar (@all_rounds) {

		next if $ar == $round;

		my $last_round_name = $ar->name - 1;
		my $event = $ar->event;

		my $last_round = Tab::Round->search(
			event => $event->id,
			name => $last_round_name
		)->first;

		my %alt_byes = $m->comp(
			"/funclib/entry_byes.mas",
				event => $event,
				round => $last_round
		);

		my %alt_wins = $m->comp(
			"/funclib/entry_wins.mas",
				event    => $event,
				round    => $last_round,
				all      => $all,
				type     => $winloss_type,
				first_tb => $bracket_by_ballots
		);

		my %alt_losses = $m->comp(
			"/funclib/entry_losses.mas",
				event => $event,
				type  => $winloss_type,
				all   => $all,
				round => $last_round
		) unless $bracket_by_ballots;

		%entry_wins   = (%entry_wins, %alt_wins);
		%entry_losses = (%entry_losses, %alt_losses);
		%entry_byes   = (%entry_byes, %alt_byes);

	}

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $no_side_constraints++
		if $event_settings->{'no_side_constraints'};

	my $sidelocks++
		if ($round_type eq "elim"
			|| $round_type eq "final"
			|| $round_type eq "runoff"
		)
		&& not defined $no_side_constraints;

	undef $sidelocks
		if $tourn_settings->{"nsda_nats"}
		&& (not defined $event_settings->{"not_nats"});

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("

        select panel.id, panel.bracket, room.name,
			school.name, school.code,
			entry.id, entry.name, entry.code,
			seed.value, ballot.side,
            judge.id, judge.code, judge.first, judge.last, judge_school.name, judge_school.code,
			rating.value, ROUND(prefs.percentile, 1), prefs_tier.name,
			coach_tier.name, panel.bye, panel.started,
			pod.value, ballot.audit, ballot.bye, ballot.forfeit, ballot.chair,
				ballot.judge_started,
			winner.value, panel.flight, diverse.value, cap.value,
			panel.publish,
			region.code, region.name, judge_dioregion.value, person.id, noprefs.value,
			district.code, district.name, chapter.state,
			entry_region.code, entry_region.name, dioregion.value,
			entry_district.code, entry_district.name, entry_chapter.state, state.value,
			strike.id

        from (panel, ballot)
        left join entry on ballot.entry = entry.id
        left join entry_setting seed on seed.entry = entry.id
			and seed.tag = 'pairing_seed'

        left join school on entry.school = school.id
        left join judge on ballot.judge = judge.id

        left join judge_setting rating
			on rating.judge = judge.id
			and rating.tag = 'tab_rating'

        left join room on panel.room = room.id
        left join rating prefs on prefs.judge = judge.id and prefs.entry = entry.id
        left join rating_tier prefs_tier on prefs.rating_tier = prefs_tier.id
        left join rating coach on coach.judge = judge.id and coach.type = 'coach'
        left join rating_tier coach_tier on coach.rating_tier = coach_tier.id
        left join entry_setting pod on pod.entry = entry.id and pod.tag = 'pod'
        left join school_setting state on state.school = school.id and state.tag = 'state'

		left join score strike
			on strike.ballot = ballot.id
			and (strike.tag = 'strike' or strike.tag = 'no_strike')

        left join score winner
			on winner.ballot = ballot.id
			and winner.tag = 'winloss'
			and winner.value > 0

        left join judge_setting diverse
			on diverse.judge = judge.id and diverse.tag = 'diverse'

        left join judge_setting cap
			on cap.judge = judge.id and cap.tag = 'chief_adjudicator'

        left join school judge_school on judge.school = judge_school.id
        left join region on judge_school.region = region.id
        left join district on judge_school.district = district.id
        left join chapter on judge_school.chapter = chapter.id

		left join region_setting judge_dioregion
			on region.id = judge_dioregion.region
			and judge_dioregion.tag = 'region-".$event->id."'

		left join region entry_region on school.region = entry_region.id
		left join district entry_district on school.district = entry_district.id
		left join chapter entry_chapter on school.chapter = entry_chapter.id

		left join region_setting dioregion
			on entry_region.id = dioregion.region
			and dioregion.tag = 'region-".$event->id."'

		left join person on judge.person = person.id
		left join school_setting noprefs
			on noprefs.school = school.id and noprefs.tag = 'noprefs'

        where panel.round = ?
        and panel.id = ballot.panel
        order by panel.bracket DESC, panel.letter
	");

	$sth->execute($round->id);

	my %panels = ();
	my %entries = ();
	my %judges = ();
	my @pods;

	while (my ($id, $bracket, $room, $school_name, $school_code,
		$entry_id, $entry_name, $entry_code, $entry_seed, $side,
		$judge_id, $judge_code, $judge_first, $judge_last, $judge_school, $judge_school_code,
		$tab_rating, $percentile, $tier, $coach,
		$bye, $started, $pod,
		$done, $bbye, $fft, $chair, $judge_start,
		$winner, $flight, $diverse, $cap,
		$publish,
		$region, $region_name, $jdioregion, $person, $noprefs,
		$district, $district_name, $state,
		$entry_region, $entry_region_name, $dio_region,
		$entry_district, $entry_district_name, $entry_state, $setting_state,
		$strike_id
	) = $sth->fetchrow_array() ) {

		$panels{$id}{$judge_id}{"started"}  = $judge_start;

		$panels{$id}{"started"} = $started;
		$panels{$id}{"bracket"} = $bracket;
		$panels{$id}{"bracket"} = 0 unless $bracket;
		$panels{$id}{"room"}    = $room;
		$panels{$id}{"publish"} = $publish;
		$panels{$id}{"room"}    = "NO ROOM" unless $room;

		$panels{$id}{"winner"}{$entry_id}++ if $winner;
		$panels{$id}{"flight"} = $flight;

		$panels{$id}{"pod"}  = $pod;
		$panels{$id}{"bye"}  = $bye;

		push @pods, $pod;

		push @{$panels{$id}{"entries"}}, $entry_id if $entry_id;

		$entries{$entry_id}{"side"} = $side;
		$entries{$entry_id}{"seed"} = $entry_seed;
		$entries{$entry_id}{"strike"} = $strike_id if $strike_id;

		if ($blind_mode) {

			$entries{$entry_id}{"code"} = $anonymize{"entry"}{$entry_id};
			$entries{$entry_id}{"name"} = $anonymize{"entry"}{$entry_id};

		} else {

			$entries{$entry_id}{"code"} = $entry_code;
			$entries{$entry_id}{"name"} = $entry_name;
			$entries{$entry_id}{"school"} = $school_name;
			$entries{$entry_id}{"school_code"} = $school_code;

			$entries{$entry_id}{"state"} = $setting_state;
			$entries{$entry_id}{"state"} = $entry_state if $entry_state;

			$entries{$entry_id}{"district"} = $entry_district;
			$entries{$entry_id}{"district_name"} = $entry_district_name;
			$entries{$entry_id}{"region"} = $entry_region;
			$entries{$entry_id}{"region_name"} = $entry_region_name;
			$entries{$entry_id}{"dio_region"} = $dio_region;

		}

		$entries{$entry_id}{$judge_id}{"won"} = 1 if $winner;
		$panels{$id}{$judge_id}{"winner"}{$side}++ if $winner;

		$entries{$entry_id}{$judge_id}{"done"} = 1 if $done;
		$panels{$id}{$judge_id}{"done"} = 1 if $done;
		$panels{$id}{"done"} = 1 if $done;

		$entries{$entry_id}{"forfeit"} = $fft;
		$entries{$entry_id}{"bye"} = $bbye;

		unless ($noprefs > 0) {
			$percentile = 1 if $percentile < 1 && $percentile > 0;
			$entries{$entry_id}{"percentiles"} += round($percentile) if $percentile;
			$entries{$entry_id}{"tiers"} += $tier if $tier;
			$judges{$judge_id}{$entry_id}{"percentile"} = round($percentile);
			$judges{$judge_id}{$entry_id}{"tier"} = $tier;
		}

		$panels{$id}{"preftotal"}  += $percentile if $percentile;
		$panels{$id}{"preftotal"}  += $tier if $tier;

		$panels{$id}{"judgenames"} .= $judge_last." ";
		$panels{$id}{"judgecodes"} .= $judge_last." ";

		push @{$panels{$id}{"judges"}}, $judge_id if $judge_id;
		$judges{$judge_id}{"coach"} = $coach;

		if ($blind_mode) {

			$judges{$judge_id}{"code"} = $anonymize{"judge"}{$judge_id};
			$judges{$judge_id}{"name"} = $anonymize{"judge"}{$judge_id};

		} else {

			$judges{$judge_id}{"code"} = $judge_code unless $no_codes;
			$judges{$judge_id}{"first"} = $judge_first;
			$judges{$judge_id}{"last"} = $judge_last;
			$judges{$judge_id}{"school"} = $judge_school;
			$judges{$judge_id}{"school_code"} = $judge_school_code;
		}

		$judges{$judge_id}{"tab"} = $tab_rating;
		$judges{$judge_id}{"person"} = $person;

		$judges{$judge_id}{"state"} = $state;
		$judges{$judge_id}{"district"} = $district;
		$judges{$judge_id}{"district_name"} = $district_name;
		$judges{$judge_id}{"region"} = $region;
		$judges{$judge_id}{"region_name"} = $region_name;
		$judges{$judge_id}{"dioregion"} = $jdioregion;
		$judges{$judge_id}{"diverse"} = $diverse;
		$judges{$judge_id}{"cap"} = $cap;
		$judges{$judge_id}{"chair"} = $chair;
	}

	if ($round_settings->{"showrooms_from"}) {

		$sth = $dbh->prepare("
			select room.id, room.name, entry.id
				from room, panel, entry, ballot
				where panel.round = ?
				and panel.id = ballot.panel
				and panel.room = room.id
				and ballot.entry = entry.id
		");

		$sth->execute($round_settings->{"showrooms_from"});

		while (
			my ($room_id, $room_name, $entry_id) = $sth->fetchrow_array()
		) {
			$entries{$entry_id}{"other_room_id"} = $room_id;
			$entries{$entry_id}{"other_room_name"} = $room_name;
		}
	}

	my %pods;

	if ($round_robin) {
		foreach my $pod (@pods) {
			$pods{$pod}{"name"} = $event_settings->{"pod_".$pod};
		}
	}

	my $prefs = $category_settings->{"prefs"};

	if ($prefs eq "ndt") {
		$prefs = "ordinals";
		$prefs = "tiers" if $round_type eq "final";
		$prefs = "tiers" if $round_type eq "elim";
		$prefs = "tiers" if $round_type eq "runoff";
		$prefs = "ordinals" if $round->name == 9;
	}

	Tab::Entry->set_sql( missing =>  "
		select distinct entry.id
		from entry
		where entry.active = 1
		and entry.event = ?
		and not exists (
			select distinct ballot.id
			from ballot, panel
			where ballot.panel = panel.id
			and ballot.entry = entry.id
			and panel.round = ?
		)
	" );

	my @missing = Tab::Entry->search_missing( $event->id, $round->id )
		unless ($round_type eq "elim"
			|| $round_type eq "final"
			|| $round_type eq "runoff"
			|| $round->setting("dontcare_aboutmissing")
		);

	my $sides_not_set = $round_settings->{"sides_not_set"};

	undef $sides_not_set
		if $round_type eq "elim"
		|| $round_type eq "final"
		|| $round_type eq "runoff";

	my $hit_warn = $m->comp("/funclib/entry_hit_before_check.mas",
		round_id => $round->id)
		unless $round_type eq "elim"
			|| $round_type eq "runoff"
			|| $round_type eq "final";

	my $judge_warn = $m->comp("/funclib/judge_twice_check.mas",
		round          => $round,
		event          => $event,
		event_settings => $event_settings,
	);

	my $norecord;
	$norecord++ if $round->name == 1;
	$norecord++ if $round_type eq "elim";
	$norecord++ if $round_type eq "final";
	$norecord++ if $round_type eq "runoff";

	$norecord = "hidden" if $norecord;

</%init>

	<& "/funclib/tablesorter.mas", table => "round_schematic", nobuttons => 1 &>

% 	unless ($entered || $nowarn) {

%		if ( @missing || $hit_warn || $judge_warn ) {

			<div class="row centeralign padmore marbottommore martopmore">

				<h2 class="redtext">Drat!</h2>

%				if (@missing) {

					<h5><% scalar @missing %> entries left off pairing.</h5>

%					foreach my $miss (@missing) {
						<a
							class="buttonwhite third nowrap redtext hover"
							title="<% $miss->name %>"
							href="/panel/round/manual_debate.mhtml&round_id=<% $round->id %>"
						>Schedule <% $miss->code %></a>
%					}

%				}

				<div class="block">
					<% $hit_warn %>
				</div>

				<div class="block">
					<% $judge_warn %>
				</div>

			</div>
%		}

%	}

%	if ($sides_not_set) {

		<div class="lirdrow full centeralign">

			<h5>Warning: You have not set sides for this debate:</h5>

			<a
				class="dkblue martop padtop padbottom limit2"
				href="/panel/manipulate/snake_sides.mhtml?from=schemat&round_id=<% $round->id %>"
			>Snake Sides</a>
		</div>
%	}

	<table id="round_schematic">

		<thead>

			<tr class="yellowrow smaller">

%				if ($round_type eq "highlow" || $round_type eq "highhigh" || $round_type eq "elim") {

					<th class="bracket records centeralign" title="Bracket">
						B
					</th>

%				}  elsif ($round_robin) {

					<th class="pod">
						<% $round_robin ? "Pod" : ""%>
					</th>
%				}

%				if ($round->flighted > 1) {
					<th class="flight centeralign" title="Flight">
						F
					</th>
%				}

				<th class="centeralign rooms">
					Room
				</th>

%				foreach my $side_string ($aff_string, $neg_string) {

%					if ($event_settings->{'seed_presets'}) {
						<th class="centeralign nowrap seeds hidden">
							<% substr($side_string,0,1) %> Sd
						</th>
%					}

%					if ($round_settings->{"showrooms_from"}) {
						<th class="centeralign nowrap showrooms_from hidden">
							<% substr($side_string,0,1) %> OtherRoom
						</th>
%					}

					<th class="centeralign nowrap records <% $norecord %>">
						<% substr($side_string,0,1) %>
							<% $bracket_by_ballots  ? "Bals" : "W/L" %>
					</th>

					<th class="centeralign schoolnames hidden">
						<% $side_string %> School
					</th>

					<th class="centeralign schoolcodes hidden">
						<% $side_string %> School
					</th>
%					if ($tourn_settings->{"nsda_nats"}) {

						<td class="states nospace padleft hidden">
							<% substr($side_string,0,1) %> State
						</td>

						<td class="districtcodes nospace padleft hidden centeralign">
							<% substr($side_string,0,1) %> District
						</td>

						<td class="districtnames nospace padleft hidden">
							<% substr($side_string,0,1) %> Dist
						</td>

%					} elsif ($tourn_settings->{"regions"} )  {

						<th class="centeralign regionnames hidden">
							<% $side_string %> Region
						</th>

						<th class="centeralign regioncodes hidden">
							<% $side_string %> RegCode
						</th>

%					} elsif ($tourn_settings->{"ncfl"}) {

						<th class="centeralign regionnames hidden">
							<% $side_string %> Diocese
						</th>

						<th class="centeralign regioncodes hidden">
							<% $side_string %> Dio
						</th>

						<th class="centeralign dioregions hidden">
							<% $side_string %> DioReg
						</th>
%					}

					<th class="centeralign entries">
						<% $no_side_constraints ? "Flip" : $side_string  %>
					</th>

%				}

				<th
					class = "centeralign judgeuse"
					title = "Numbers preceding name are obligation in the left/used/owed format.  Numbers following name are ratings.">
					Use
				</th>

				<th class="centeralign judges sorter-text">
					Judge<% $round_settings->{"num_judges"} > 1 ? "s" : "" %>
				</th>

%				if ($prefs || $tab_ratings || $coach_ratings) {
					<th class="centeralign prefs {sorter: 'digit'}">
						Rate
					</th>
%				}

%				if ($event_settings->{"judge_publish_results"}) {
					<th
						title = "Published Online"
						class = "centeralign publish padless"
					> Pub </th>
%				}

				<th>
				</th>
			</tr>

		</thead>

		<tbody>

<%perl>

		my @keys = keys %panels;

        @keys =
            map  { $_->[0] }
            sort { $a->[1] <=> $b->[1] }
            map  { [$_, $panels{$_}{"room"} =~/(\d+)/] }
            @keys;

        @keys =
            map  { $_->[0] }
            sort { uc($a->[1]) cmp uc($b->[1]) }
            map  { [$_, $panels{$_}{"room"} =~ /(\D+)/] }
            @keys;

		@keys =
			sort {$panels{$b}{"bracket"} <=> $panels{$a}{"bracket"}}
			@keys;

		@keys =
			sort {$panels{$a}{"done"} <=> $panels{$b}{"done"}}
			@keys;

		@keys =
			sort {$panels{$a}{"started"} <=> $panels{$b}{"started"}}
			@keys;

		@keys =
			sort {$panels{$a}{"bye"} <=> $panels{$b}{"bye"}}
			@keys;

		foreach my $key (@keys) {

			my $locked_aff =  $m->comp(
				"/funclib/round_elim_dueaff.mas",
				panel_id => $key
			) if $sidelocks;

</%perl>
			<tr class="smallish">

<%perl>
				if (
					$round_type eq "highlow"
					|| $round_type eq "highhigh"
					|| $round_type eq "elim"
				) {
</%perl>

					<td class="<% $round_robin ? "" : "smallcell" %> centeralign padno bracket records">

%						if ($round_type eq "elim") {
							<% $round_merge{$key} && $round_merge{$key}{"event"}
								? '<p class="marless padno">'.$round_merge{$key}{"event"}.'</p>'
								: ""
							%><% $round_merge{$key} && $round_merge{$key}{"round"}
								? '<p class="marless padno">R'.$round_merge{$key}{"round"}.'</p>'
								: ""
							%>
							<% $panels{$key}{"bracket"} %>
%						} else {
							<%
								$panels{$key}{"bracket"}
							%><% $round_merge{$key} && $round_merge{$key}{"event"}
								? "<br />".$round_merge{$key}{"event"}
								: ""
							%><% $round_merge{$key} && $round_merge{$key}{"round"}
								? "<br /> R".$round_merge{$key}{"round"}
								: ""
							%>
%						}
					</td>

%				}  elsif ($round_robin) {
					<td class="centeralign padless pod">
						<% $pods{$panels{$key}{"pod"}}{"name"} %>
					</td>
%				}

%				if ($round->flighted > 1) {
					<td class="centeralign padno flight">
						<% $panels{$key}{"flight"} %>
					</td>
%				}

				<td
					class = "nospace rooms <%
						$panels{$key}{"room"} eq "NO ROOM" ? "centeralign" : ""
					%> <%
						$panels{$key}{"bye"} ? "centeralign" : ""
					%>"
					title = "<% $panels{$key}{"room"} %>"
				>
					<span
						class="hidden"
					><% $panels{$key}{"room"} %><% $panels{$key}{"flight"} %></span>

					<a
						href  = "panel_view.mhtml?panel_id=<% $key %>"
						class = "padvertical
<%perl>
						if ($panels{$key}{"bye"}) {
							$m->print(" redtext semibold ");
						} elsif ($panels{$key}{"room"} eq "NO ROOM") {
							$m->print(" dkred centeralign padleftbit padrightbit ");
						} else {
							$m->print(" white ");
						}
</%perl>
						"
					>
						<% $panels{$key}{"bye"}
							? "BYE"
							: $panels{$key}{"room"}
						%>
					</a>

				</td>

<%perl>

				eval {
					@{$panels{$key}{"entries"}} =
						sort {$entries{$a}{"side"} <=> $entries{$b}{"side"}}
						@{$panels{$key}{"entries"}}
				};

				my %seen = ();
				@{$panels{$key}{"judges"}} =
					grep { ! $seen{$_} ++ }
					@{$panels{$key}{"judges"}};

				undef(%seen);

				@{$panels{$key}{"entries"}} =
					grep { ! $seen{$_} ++ }
					@{$panels{$key}{"entries"}};

				@{$panels{$key}{"judges"}} =
					sort {$judges{$a}{"last"} cmp $judges{$b}{"last"}}
					@{$panels{$key}{"judges"}};

				@{$panels{$key}{"judges"}} =
					sort {$judges{$b}{"chair"} <=> $judges{$a}{"chair"}}
					@{$panels{$key}{"judges"}};

</%perl>

%				foreach my $entry (@{$panels{$key}{"entries"}}) {

%					if ($event_settings->{'seed_presets'}) {
						<td class="hidden seeds centeralign nowrap nospace">
							<% $entries{$entry}{"seed"}
								?  $entries{$entry}{"seed"}
								: $entry
							%>
						</td>
%					}

%					if ($round_settings->{"showrooms_from"}) {
						<td class="hidden showrooms_from centeralign nowrap nospace">
							<% $entries{$entry}{"other_room_name"} %>
						</td>
%					}

					<td class="<% $norecord %> records centeralign nowrap nospace">
%						if ($bracket_by_ballots) {
							<% $entry_wins{$entry} ? $entry_wins{$entry} : 0 %>
%						} else {
							<%
								$entry_wins{$entry} ? $entry_wins{$entry} : 0
							%>-<%
								$entry_losses{$entry} ? $entry_losses{$entry} : 0
							%>
%						}
					</td>

					<td class="schoolnames nospace padleft hidden">
						<% $entries{$entry}{"school"} %>
					</td>

					<td class="schoolcodes nospace padleft hidden">
						<% $entries{$entry}{"school_code"} %>
					</td>

%					if ($tourn_settings->{"nsda_nats"}) {

						<td class="states nospace padleft hidden centeralign">
							<% $entries{$entry}{"region"} %>
						</td>

						<td class="districtcodes nospace padleft hidden centeralign">
							<% $entries{$entry}{"district"} %>
						</td>

						<td class="districtnames nospace padleft hidden">
							<% $entries{$entry}{"district_name"} %>
						</td>

%					} elsif ($tourn_settings->{"ncfl"} || $tourn_settings->{"regions"} )  {

						<td class="regionnames nospace padleft hidden">
							<% $entries{$entry}{"region_name"} %>
						</td>

						<td class="regioncodes nospace padleft hidden centeralign">
							<% $entries{$entry}{"region"} %>
						</td>

%						if ($tourn_settings->{"ncfl"}) {
							<td class="dioregions nospace padleft hidden centeralign">
								<% $entries{$entry}{"dio_region"} %>
							</td>
%						}

%					}

<%perl>

					my $pullup;
					my $warn;

					if ($round_type ne "elim"
						&& $round_type ne "final"
						&& $round_type ne "prelim"
						&& $round_type ne "runoff"
					) {
						if ($entry_wins{$entry} < $panels{$key}{"bracket"}) {
							$pullup++
						}
					}

					if ($published && (not defined $entered)) {

						my $warn = "This round is published and you are about to move an entry.   This seems suspicious.  Are you sure?";

					}

</%perl>
					<td
						class="nospace entries <% $pullup ? "libl" : "" %>"
						title="<% $entries{$entry}{"name"} %>"
					>
						<span class="hidden">
							<% $entries{$entry}{"code"} %>
							<% $entries{$entry}{"name"} %>
						</span>

%						if ($round->published < 1) {
							<a
								class="leftalign button white"
								href="/panel/manipulate/entry_edit.mhtml?round_id=<% $round->id %>&entry_id=<% $entry %>"
								<& "/funclib/confirm.mas", warn => $warn &>
							>
%						} else {
							<a
								class="leftalign button white"
								href="panel_view.mhtml?panel_id=<% $key %>"
							>
%						}

							<div class="identities">

								<span class="entrycodes nospace">
									<% $entries{$entry}{"code"} %>
									<% $round_settings->{"strikes_published"}
										?  $entries{$entry}{"strike"}
											?  '<span class="semibold redtext full">Strikes In</span>'
											: ""
										: ""
									%>
								</span>

								<span class="entrynames nospace hidden">
									<% $entries{$entry}{"name"} %>
								</span>

								<span class="sixth hidden nospace regions top">
									<% $entries{$entry}{"region"} %>
								</span>
							</div>

							<div class="anonymize hidden centeralign">
								<% $entry %>
							</div>
						</a>

					</td>

%				}

%				if (scalar @{$panels{$key}{"entries"}} < 2) {

					<td class="seeds centeralign nowrap nospace hidden">
					</td>

					<td class="showrooms_from centeralign nowrap nospace hidden">
					</td>
					<td class="byes centeralign nowrap nospace hidden">
					</td>

					<td class="<% $norecord %> records centeralign nowrap nospace">
					</td>

					<td class="schoolnames nospace padleft hidden">
					</td>

					<td class="schoolcodes nospace padleft hidden">
					</td>

					<td class="nospace entries">
					</td>

%					if ($tourn_settings->{"nsda_nats"}) {

						<td class="states nospace padleft hidden centeralign">
						</td>

						<td class="districtcodes nospace padleft hidden centeralign">
						</td>

						<td class="districtnames nospace padleft hidden">
						</td>

%					} elsif ($tourn_settings->{"ncfl"} || $tourn_settings->{"regions"} )  {

						<td class="regionnames nospace padleft hidden">
						</td>

						<td class="regioncodes nospace padleft hidden centeralign">
						</td>

%						if ($tourn_settings->{"ncfl"}) {
							<td class="dioregions nospace padleft hidden centeralign">
							</td>
<%perl>

						}

					}

				}

				$m->print('<td class="judgeuse nospace centeralign">');

					if ($panels{$key}{"judges"}) {

						foreach my $judge (
							@{$panels{$key}{"judges"}}
						) {
</%perl>
							<span
								class="full padvertical marno obligation"
								title="<% $judge_use{$judge}{"percentage"}."% obligated " %>"
%								if ($rounds_per) {
									style="min-width: 7em;"
%								}
							>
								<span class="hidden">
									<% $judge_use{$judge}{"percentage"} %>
								</span>

%								if ($rounds_per) {
									<span class="third nospace" style="min-width: 2.5em;">
										<% $judge_use{$judge}{"percentage"} %>
									</span>
									<span class="threefifths nospace" style="min-width: 3.5em;">
									<%
										$judge_use{$judge}{'left'}
										."/".
											($judge_use{$judge}{'judged_already'}
											+ $judge_use{$judge}{'will_judge'})
										."/".
										$judge_use{$judge}{'oblig'}
									%>
									</span>
%								} else {
									<% $judge_use{$judge}{'judged_all'} %>
%								}
							</span>
%						}
%					}

				</td>

%				if ($panels{$key}{"judges"} && scalar @{$panels{$key}{"judges"}} > 0) {
					<td
						class="judges nospace padleft padrightless nowrap"
						title="<% $panels{$key}{"judgecodes"} %> <% $panels{$key}{"judgenames"} %>"
					>

%					foreach my $judge (
%						@{$panels{$key}{"judges"}}
%					) {

						<span class="hidden">
							<% $judges{$judge}{"last"} %> <% $judges{$judge}{"first"} %>
							<% $judges{$judge}{"code"} ? $judges{$judge}{"code"} : "" %>
						</span>

						<a class=" <% $judges{$judge}{"chair"}
								? "semibold"
								: "" %> hover full white padvertical"
							title="<%
								$judges{$judge}{"last"}.", ".$judges{$judge}{"first"}
							%> <% 	$online_ballots ?
									$judges{$judge}{"person"}
									? ""
									: " - LUDDITE ALERT: Judge is not linked for online ballots"
									: ""
								%>"
							href="flight_judge_swap.mhtml?round_id=<% $round->id."&judge_id=".$judge %>">
%							if ($diversity) {
								<span
									class = "diversity tenth nospace semibold greentext"
									title = "Judge tagged as diversity-enhancing"
								> <% $judges{$judge}{"diverse"} ? "D" : ""  %> </span>
%							}

%							if ($event_settings->{"wsdc_cap_repel"}) {
								<span class="cap tenth nospace bluetext semibold">
									<% $judges{$judge}{"cap"} ? "C" : ""  %>
								</span>
%							}

%							if ($online_ballots) {
								<span class="tenth redtext nospace semibold">
									<% $judges{$judge}{"person"} > 0
										? ""
										: "L"
									%>
								</span>
%							}

							<span class="schoolnames hidden twothirds nospace nowrap ">
								<% $judges{$judge}{"school"} %>
							</span>

							<span class="schoolcodes hidden fifth nospace nowrap ">
								<% $judges{$judge}{"school_code"} %>
							</span>

%							if ($tourn_settings->{"nsda_nats"}) {

								<span class="districtcodes hidden eighth nospace ">
									<% $judges{$judge}{"district"} %>
								</span>

								<span class="districtnames hidden half nospace nowrap">
									<% $judges{$judge}{"district_name"} %>
								</span>

								<span class="states hidden eighth nospace ">
									<% $judges{$judge}{"region"} %>
								</span>

%							}

%							if ($tourn_settings->{"ncfl"} || $tourn_settings->{"regions"} )  {
								<span class="regions hidden eighth nospace ">
									<% $judges{$judge}{"region"} %>
								</span>

								<span class="regioncodes hidden fifth nospace ">
									<% $judges{$judge}{"region"} %>
								</span>

								<span class="regionnames hidden half nospace nowrap">
									<% $judges{$judge}{"region_name"} %>
								</span>

								<span class="dioregions hidden eighth nospace ">
									<% $judges{$judge}{"dioregion"} %>
								</span>
%							}

							<span class="anonymize hidden centeralign nospace">
								<% $judge %>
							</span>

							<span class="identities judgecodes">
								<% $judges{$judge}{"code"}
									?  "<span class='top padright'>".$judges{$judge}{"code"}."</span>"
									: ""
								%>
							</span>

							<span class="identities judgenames">
%								if ($judges{$judge}{"chair"}) {
									<span class="fa fa-sm fa-gavel inline bluetext"></span>
%								}
								<% $judges{$judge}{"last"}.", ".$judges{$judge}{"first"} %>
							</span>

						</a>
% 					}

					<span class="hidden">0</span>

					</td>

% 				} elsif ($panels{$key}{"bye"}) {

					<td class="judges nospace padleft padrightless nowrap">
						<span class="hidden">AAAAAAA</span>
						<a class="hover full white padvertical centeralign redtext semibold">
							BYE
						</a>
					</td>

%				} else {

					<td class="judges nospace centeralign">
						<a
							class="dkred button nowrap padvertical"
							href="panel_view.mhtml?panel_id=<% $key %>"
						> NO JUDGE </a>
					</td>
% 				}

%				if ($prefs || $tab_ratings || $coach_ratings) {

					<td class="prefs nospace centeralign smaller lessheight">

%						if ($prefs) {
							<div class="hidden">
								<% $panels{$key}{"preftotal"} %>
							</div>
%						}

<%perl>
						foreach my $judge (
							@{$panels{$key}{"judges"}}
						) {

</%perl>
							<span class="full padvertical marno">

%								if ($prefs) {
%									my $notfirst;
%									foreach my $entry (@{$panels{$key}{"entries"}}) {

										<span class="twofifth centeralign nospace">
											<% $prefs eq "ordinals"
												? $judges{$judge}{$entry}{"percentile"}
													? $judges{$judge}{$entry}{"percentile"} : "-"
												: ""
											%>
											<% $prefs ne "ordinals"
												? $judges{$judge}{$entry}{"tier"}
													? $judges{$judge}{$entry}{"tier"}
													: "-"
												: ""
											%>
										</span>
%									}
%								} else {
									<% $tab_ratings ? $judges{$judge}{"tab"} : "" %>
									<% $coach_ratings ? $judges{$judge}{"coach"} : "" %>
%								}
							</span>
%						}
					</td>
%				}

%				if ($event_settings->{"judge_publish_results"}) {
					<th class = "centeralign publish nospace">
%						if ($panels{$key}{"publish"}) {
							<span class="greentext fa fa-check padless"></span>
%						} else {
							<span class="redtext fa fa-ellipsis-h padless"></span>
%						}
					</th>
%				}

				<td class="centeralign nospace smaller graytext semibold">

%					if ($panels{$key}{"bye"}) {
						<span class="hidden">4</span>
						B
%					} elsif ($panels{$key}{"started"} || $panels{$key}{"done"}) {

						<span class="hidden">3</span>

%						my $done;

%						foreach my $entry (@{$panels{$key}{"entries"}}) {

							<%
								$entries{$entry}{"bye"}
								?  $entries{$entry}{"side"} == 1
									? substr($aff_string,0,1)." BYE <br />"
									: substr($neg_string,0,1)." BYE"
								: ""
							%> <% $entries{$entry}{"forfeit"}
								?  $entries{$entry}{"side"} == 1
									? substr($aff_string,0,1)." FFT <br />"
										: substr($neg_string,0,1)." FFT"
									: ""
							%>
<%perl>
							$done++
								if $entries{$entry}{"bye"}
								|| $entries{$entry}{"forfeit"};

						}

						unless ($done) {

							foreach my $judge ( @{$panels{$key}{"judges"}}) {

								if ($panels{$key}{$judge}{"done"}) {

</%perl>
									<span class="full greentext padvertical decisions marno">
										<%
											$panels{$key}{$judge}{"winner"}{1}
												? substr($aff_string,0,1)
												: ""
										%>
										<%
											$panels{$key}{$judge}{"winner"}{2}
											? substr($neg_string,0,1)
											: ""
										%>
									</span>

									<span
										class = "full greentext padvertical decisions_placeholder hidden marno"
										title = "Judge has voted and confirmed.  Click Show Decisions at right to see votes."
									>
										IN
									</span>

%								} elsif ($panels{$key}{$judge}{"winner"}) {

									<span
										title="This ballot is entered but not confirmed"
										class="full redtext padvertical marno"
									>
										&frac12;
									</span>
<%perl>
								} elsif ($panels{$key}{$judge}{"started"}) {

									my $starttime = eval {
										my $dt = DateTime::Format::MySQL->parse_datetime(
											$panels{$key}{$judge}{"started"}
										);

										$dt->set_time_zone("UTC");
										$dt->set_time_zone($tz);
										return $dt;
									};
</%perl>
									<span class="full padvertical marno">
										<% $starttime
											? Tab::shortertime($starttime)
											: '&ndash;'
										%>
									</span>

%								} else {

									<span class="full padvertical marno">
										&ndash;
									</span>
<%perl>

								}
							}
						}

					} else {
</%perl>

						<span class="hidden">1</span>

%						if ($prefs) {

							<span
								class = "prefs tightline block a"
								title = "Preferences Differential"
							>
<%perl>
							my $diff;

							foreach my $entry (@{$panels{$key}{"entries"}}) {

								if ($diff) {

									$diff = abs($diff - $entries{$entry}{"percentiles"})
										if $prefs eq "ordinals";

									$diff = abs($diff - $entries{$entry}{"tiers"})
										unless $prefs eq "ordinals";

								} else {

									$diff = $entries{$entry}{"percentiles"}
										if $prefs eq "ordinals";

									$diff = $entries{$entry}{"tiers"}
										unless $prefs eq "ordinals";
								}
							}

							$m->print("$diff");
</%perl>

%						} else {
							<span
								class = "tightline block a"
								title = "Side Lock"
							>
							<% 	$sidelocks ? $locked_aff ? 'Side Lock' : 'Flip' : "" %>
%						}
						</span>
%					}
				</th>
			</tr>
%		}

		</tbody>
	</table>


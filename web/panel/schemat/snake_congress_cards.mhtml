<%args>
	$tourn
	$tourn_settings => undef
	$session
	$round_id => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $round = Tab::Round->retrieve($round_id) if $round_id;
	my $event = $round->event;

	unless ($round) {
		$m->comp(
			"/funclib/abort.mas", 
			warning => "Round $round_id is not valid.  Hit back and try again");
	}

    #Set up the filename and the needed trace files
	my $round_name = $round->realname;
	my $event_abbr = $event->abbr;
	$round_name =~ s/[\W_]//g;
	$event_abbr =~ s/[\W_]//g;

	my $filename = "SnakeCards-".$event_abbr."-".$round_name."-".$session->id;
	my $filepath = $Tab::file_root."tmp/".$filename;

    $m->comp("/funclib/printout.mas", 
        tourn     => $tourn,
        filename  => $filename,
        head      => 1,
		wide      => 1,
        no_header => 1
    );  

    my %event_settings = $event->all_settings;

    my %entry_settings = $m->comp(
        "/funclib/event_entry_settings.mas",
        event => $event,
        all   => 1,
        value => 1
    );  

    my $entries_ref;

    my %schools;

	my $show_strength++ if $round->type eq "elim";

    if ($show_strength) { 

        my $previous_round = Tab::Round->search(
            name => ($round->name - 1), 
            event => $event->id
        )->first;


        if ($previous_round) { 

            my @results = $m->comp(
                "/tabbing/results/order_entries.mas",
                round => $previous_round,
            ) if $previous_round;

            $entries_ref = pop @results if @results;

        }

    }

    my %seeds = %{$entries_ref->{'seed'}}
		if $show_strength
        && $entries_ref
        && $entries_ref->{"seed"};

    my %chamber_rank = %{$entries_ref->{'section_rank'}}
        if $show_strength
        && $entries_ref
        && $entries_ref->{"section_rank"};

    my %chambers = %{$entries_ref->{'section'}}
        if $show_strength
        && $entries_ref
        && $entries_ref->{"section"};

    my $strength = ${$entries_ref}{"tiebreak"}{"1"}
        if $show_strength
        && $entries_ref;

	my @entries = $m->comp("/funclib/round_entries.mas", round => $round);

    open (TEXOUT, ">>$filepath.tex");

	my $switch;

	foreach my $entry (@entries) { 

		unless ($schools{$entry->school->id}{"code"}) { 

			$schools{$entry->school->id}{"name"} = substr($entry->school->short_name, 0, 16);

			if ($entry->school->code) {
				$schools{$entry->school->id}{"code"} = $entry->school->code;
			} else {
				$schools{$entry->school->id}{"code"} = substr($entry->school->short_name, 0, 6);

				if ($tourn_settings->{"nsda_nats"}) {
					$schools{$entry->school->id}{"state"} = $entry->school->chapter->state;
					$schools{$entry->school->id}{"district"} = $entry->school->district->code;
					$schools{$entry->school->id}{"district_name"} = $entry->school->district->code;
				}
			}
		}
   
		print TEXOUT "\\noindent\n";
		print TEXOUT "\\fbox{\n";
		print TEXOUT "\\begin{minipage}{3.25in}\n";

		print TEXOUT "\\vspace{.40in}\n";
		print TEXOUT "\\noindent\n";

		my $code = $entry->code;

		$code =~ s/R/ R /g;
		$code =~ s/S/ S /g;

		print TEXOUT "{\\Huge \\bf ".Tab::texify($code)." }\n";

		print TEXOUT "\\hfill\n";

		print TEXOUT "{\\Huge \\bf D ". $schools{$entry->school->id}{"district"}." } \n";

		print TEXOUT "\\vspace{.40in}\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\LARGE ";
		print TEXOUT $schools{$entry->school->id}{"state"}."\n";
		print TEXOUT "\\hfill\n";
		print TEXOUT "\\Large\n";
		print TEXOUT Tab::texify($schools{$entry->school->id}{"name"})." \n";

		print TEXOUT "\\vspace{.40in}\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "{\\LARGE \\bf ";
		print TEXOUT "Chamber ".$chambers{$entry->id};
		print TEXOUT "} \\hfill ";


		print TEXOUT "{\\LARGE \\bf ";
		print TEXOUT "Rank ".$chamber_rank{$entry->id};
		print TEXOUT "} \n";

		print TEXOUT "\\vspace{.40in}\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\noindent\n";
		print TEXOUT "\\normalsize\n";

		print TEXOUT "\\large\n";
		print TEXOUT Tab::texify($entry->name)."\n";
		print TEXOUT "\\hfill\n";

		if ($entry_settings{$entry->id}{"presiding_officer"}) { 
			print TEXOUT "{\\LARGE \\bf ";
			print TEXOUT "\\color{blue!64}\n";
			print TEXOUT "PO";
			print TEXOUT "}";
		print TEXOUT "\\hfill\n";
		}

		print TEXOUT "\\large\n";
		print TEXOUT "TR: ".$strength->{$entry->id}." \n";

		print TEXOUT "\\newline\n";

		print TEXOUT "\\end{minipage}\n";
		print TEXOUT "}\n";
		
		print TEXOUT "\\hspace{.55in}\n" unless ($switch % 2);
		print TEXOUT "\\vspace{.5in}\n" if ($switch % 2);
		print TEXOUT "\\noindent\n" if ($switch % 2);
		print TEXOUT "\\newline\n" if ($switch++ % 2);

	}

    close TEXOUT;

	$m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		tail     => 1
	);

</%init>

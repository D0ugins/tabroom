<%args>
	$tourn
	$round_id => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);

    my $tz = $tourn->tz;
    $tz = "UTC" unless $tz;
    my $now = DateTime->now(time_zone => $tz);

    # Get the upload and create the file handle.
    my $req = Apache2::Request->new($r);
    my @csv_handles = $r->upload;
    my $csv_file = $req->upload($csv_handles[0]);
    my $io = $csv_file->io;

    my @lines = <$io>;
	my @panels;

    foreach (@lines) {
        $_ =~ s/[\r]+/\n/g;
        $_ =~ s/[\r\n]+/\n/g;
        $_ =~ s/[\n]+/\n/g;
        push @panels, split (/\n/, $_);
    }

	my $event = $round->event;
<<<<<<< HEAD
=======
	my $category = $event->category;

>>>>>>> 41536f4dd66eccb59239c772facec9a06ecf6c10
	my %judge_flight;
	my $letter = 1;

    ENTRY:
    foreach my $panel_string (@panels) {

<<<<<<< HEAD
		my ($flight, $room, $aff, $neg, @judges)  = split(/,/, $panel_string);

		my $aff_team = Tab::Entry->search( code => $aff )->first;
		my $neg_team = Tab::Entry->search( code => $neg )->first;

		$flight = 1 unless $flight;

		my $room_obj = Tab::Room->search( name => $room )->first;
		$room_obj = 0 unless $room_obj;

		if ($aff_team && $neg_team) {

			my @all_judges;

			foreach my $judge_string (@judges) {

				my ($last, $first) = split (/\,/, $judge_string);
				my $judge_record = Tab::Judge->search(first => $first, last => $last)->first;

				if ($judge_record) {
					push @all_judges, $judge_record;
				}
			}

			if (scalar @all_judges && $aff_team && $neg_team) {

				my $panel = Tab::Panel->create({
					round  => $round->id,
					letter => $letter++,
					flight => $flight,
					room   => 0,
					bye    => 0
				});

				foreach my $judge (@all_judges) {

					Tab::Ballot->create({
						panel => $panel->id,
						entry => $aff_team->id,
						side  => 1,
						judge => $judge
					});

=======
		my ($flight, $bracket, $room, $aff, $neg, @judges)  = split(/,/, $panel_string);

		chomp($aff);
		chomp($neg);

        $aff =~ s/\"//g;
        $neg =~ s/\"//g;

		my $aff_team = Tab::Entry->search( code => $aff, event => $event )->first;

		unless ($aff_team) {
			$aff =~ s/ - ONLINE//g;
			$aff =~ s/- ONLINE//g;
			$aff =~ s/ - Online//g;
			$aff =~ s/- Online//g;
			$aff_team = Tab::Entry->search( code => $aff, event => $event )->first;
		}

		my $neg_team = Tab::Entry->search( code => $neg, event => $event)->first;

		unless ($neg_team) {
			$neg =~ s/ - ONLINE//g;
			$neg =~ s/- ONLINE//g;
			$neg =~ s/ - Online//g;
			$neg =~ s/- Online//g;
			$neg_team = Tab::Entry->search( code => $neg, event => $event )->first;
		}

		$flight = 1 unless $flight;

		my $room_obj = 0;

		if ($aff_team && $neg_team) {

			my @all_judges;

			foreach my $judge_string (@judges) {

				chomp($judge_string);
				$judge_string =~ s/\"//g;

				my ($first, @lasts) = split (/\ /, $judge_string);
				my $last = join(' ', @lasts);

				my $judge_record = Tab::Judge->search(category => $category, first => $first, last => $last)->first;

				unless ($judge_record) {
					$last =~ s/ - ONLINE//g;
					$last =~ s/- ONLINE//g;
					$last =~ s/ - Online//g;
					$last =~ s/- Online//g;
					$judge_record = Tab::Judge->search(category => $category, first => $first, last => $last)->first;
				}

				if ($judge_record) {
					push @all_judges, $judge_record;
				}
			}

			if (scalar @all_judges && $aff_team && $neg_team) {

				my $panel = Tab::Panel->create({
					round   => $round->id,
					letter  => $letter++,
					flight  => $flight,
					bracket => $bracket,
					room    => 0,
					bye     => 0
				});

				foreach my $judge (@all_judges) {

					Tab::Ballot->create({
						panel => $panel->id,
						entry => $aff_team->id,
						side  => 1,
						judge => $judge
					});

>>>>>>> 41536f4dd66eccb59239c772facec9a06ecf6c10
					Tab::Ballot->create({
						panel => $panel->id,
						entry => $neg_team->id,
						side  => 2,
						judge => $judge
					});
				}
			}
		}
	}

	$m->redirect("show.mhtml?round_id=".$round->id."&msg=Round Imported");

</%init>


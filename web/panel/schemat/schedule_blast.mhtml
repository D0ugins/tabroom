<%args>
	$tourn
	$style
	$round_id
	$person 
	$message   => undef
	$blastdate => undef
	$blasttime => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);
	$m->abort unless $round->event->tourn->id == $tourn->id;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $blast_dt;
	
	eval {  
		$blast_dt = Tab::dtme($blastdate, $blasttime, $tz);  
	};

	unless ($blast_dt) { 
		my $err = "Invalid date: $blastdate $blasttime";
		$m->redirect("show.mhtml?round_id=$round_id&err=$err"); 
	}

	my $now = DateTime->now(time_zone => $tz);

	if ($blast_dt < $now) { 
		my $err = "Scheduled date is in the past: $blastdate $blasttime";
		$m->redirect("show.mhtml?round_id=$round_id&err=$err"); 
	}

	my $setting = Tab::RoundSetting->search(
		round => $round_id, 
		tag => "scheduled_blast"
	)->first; 

	if ($setting) { 

		$setting->value_date($blast_dt) if $blast_dt;
		$setting->value($style);
		$setting->update;

	} else { 

		my $setting = Tab::RoundSetting->create({ 
			round      => $round_id,
			tag        => "scheduled_blast",
			value      => $style,
			value_date => $blast_dt,
			value_text => $message
		});

	}

	my $description = "Round ".$round->realname." scheduled for blast at ".Tab::csvdt($blast_dt);

	Tab::ChangeLog->create({ 
		type        => 'tabbing',
		event       => $round->event->id,
		tourn       => $tourn->id,
		person      => $person->id,
		description => $description
	});


	my $msg = "Round has been scheduled to blast texts & emails at ".Tab::niceshortdt($blast_dt) 
		if $style eq "both";

	$msg = "Round has been scheduled to blast texts & emails at ".Tab::niceshortdt($blast_dt) 
		if $style eq "blast";

	$msg = "Round has been scheduled to blast texts & emails at ".Tab::niceshortdt($blast_dt) 
		if $style eq "publish";

	$m->redirect("show.mhtml?round_id=$round_id&msg=$msg"); 

</%init>

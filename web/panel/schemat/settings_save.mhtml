<%args>
	$round_id               => undef
	$timeslot_id            => undef
	$flighted               => 0
	$type                   => undef
	$tiebreak_set           => undef
	$label                  => undef
	$flight_rooms_only      => 0
	$tab_rating_priority    => undef
	$tab_seed_priority      => undef
	$offset                 => 0
	$start_time             => undef
	$runoff                 => 0
</%args>
<%init>

	$m->abort unless $round_id;

	unless ($tiebreak_set) {
		my $err = "You must select a tiebreak set";
		$m->redirect("show.mhtml?round_id=".$round_id."&default=settings&err=$err");
	}

	unless ($type) {
		my $err = "You must select a round type";
		$m->redirect("show.mhtml?round_id=".$round_id."&default=settings&err=$err");
	}

	my $timeslot = Tab::Timeslot->retrieve($timeslot_id) if $timeslot_id;

	unless ($timeslot) {
		my $err = "You must select a timeslot";
		$m->redirect("show.mhtml?round_id=".$round_id."&default=settings&err=$err");
	}

	my $round = Tab::Round->retrieve($round_id);
	my %round_settings = $round->all_settings();

	my $event = $round->event;

	unless ($round->timeslot > 0) {
		my $err = "Round ".$round->name." has no timeslot attached.  Lots of stuff breaks when that happens.  Please fix under round settings");
		$m->redirect("show.mhtml?round_id=".$round_id."&default=settings&err=$err");
	}

	if ($timeslot->id != $round->timeslot->id
		&& $timeslot->rounds(event => $event->id)
	) {
		my $err = "Timeslot ".$timeslot->name." already has a round of ".$event->abbr." scheduled in it.";
		$m->redirect("show.mhtml?round_id=".$round_id."&default=settings&err=$err");
	}

	my $tz = $event->tourn->tz;
	$tz = "UTC" unless $tz;

	$runoff = 0 unless $runoff > 0;
	if ($runoff == $round) {
		undef $runoff;
	}

	$flighted = 1 unless $flighted;

	$round->type($type);
	$round->timeslot($timeslot);
	$round->flighted($flighted);
	$round->tiebreak_set($tiebreak_set);
	$round->runoff($runoff);
	$round->label($label);

	$round->update();

	$m->comp("/funclib/renumber_rounds.mas", event_id => $event->id);

	my @settings = (
		"ignore_results",
		"dontcare_aboutmissing",
		"judges_ballots_visible",
		"sidelock_against",
		"seed_round",
		"roomlock_against",
		"showrooms_from",
		"omit_from_bracket",
		"use_for_breakout",
		"include_room_notes",
		"wsdc_round_type",
		"letter_start",
		"num_judges",
		"reset_room_moves",
		"coach_wins",
		"coach_points",
		"coach_feedback",
		"session_lock",
		"motion_publish"
	);

    foreach my $setting (@settings) {

        my $value = $ARGS{$setting};

        if ($value eq $round_settings{$setting}) {

        } else {
            $value = 0 unless $value;
            $round->setting($setting, $value);
        }
    }

	my @text_settings = ("notes", "motion");

    foreach my $setting (@text_settings) {

        my $value = $m->comp("/funclib/save_editor.mas",
            text => $ARGS{$setting}
        );

        if ($value eq $round_settings{$setting}) {

        } else {

            $value = 0 unless $value;
            my $description;

            if ($value eq "0") {
                $description = "Setting $setting text deleted";
                $round->setting($setting, $value);
            } else {
                $description = "Setting $setting changed to $value";
                $round->setting($setting, "text", $value);
            }
        }
    }

	my $start_date = $round->timeslot->start->set_time_zone($tz);
	my $start;

	if ($start_time) {

		eval {
			$start = Tab::dtme( $start_date->mdy('/'), $start_time, $tz);
		};

		undef $start unless $start && $start->year;
		$round->start_time($start) if $start;
		$round->start_time($round->timeslot->start) unless $start;

	} else {
		$round->start_time($round->timeslot->start);
	}

	$round->update();

	$tab_rating_priority =~ s/\./,/g;
	$tab_rating_priority =~ s/\ /,/g;
	$tab_rating_priority =~ s/\:/,/g;

	$round->setting("tab_rating_priority", $tab_rating_priority);

	$tab_seed_priority =~ s/\./,/g;
	$tab_seed_priority =~ s/\ /,/g;
	$tab_seed_priority =~ s/\:/,/g;

	$round->setting("tab_seed_priority", $tab_seed_priority);

	$event->setting("flight_offset", $offset);
	$event->setting("flight_rooms_only", $flight_rooms_only);

	my $msg = $round->realname." settings saved  $start_time.";

	$m->redirect("show.mhtml?round_id=".$round->id."&default=settings&msg=$msg");

</%init>

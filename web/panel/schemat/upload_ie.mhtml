<%args>
	$tourn
	$round_id => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);

    my $tz = $tourn->tz;
    $tz = "UTC" unless $tz;
    my $now = DateTime->now(time_zone => $tz);

    # Get the upload and create the file handle.
    my $req = Apache2::Request->new($r);
    my @csv_handles = $r->upload;
    my $csv_file = $req->upload($csv_handles[0]);
    my $io = $csv_file->io;

    my @lines = <$io>;
	my @panels;

    foreach (@lines) {
        $_ =~ s/[\r]+/\n/g;
        $_ =~ s/[\r\n]+/\n/g;
        $_ =~ s/[\n]+/\n/g;
        push @panels, split (/\n/, $_);
    }

	my $event = $round->event;
	my $letter = 1;

	my $panel;
	my $judge;

    ENTRY:
    foreach my $panel_string (@panels) {

		my $speaker;
		my $code1;
		my $code2;
		my $first;
		my $last;
		my $morelast;
		my $partner_first;
		my $partner_last;

		if ($event->name eq "B Duo") { 
			($speaker, $code1, $code2, $first, $last, $partner_first, $partner_last) = split(/\ /, $panel_string);
		} else { 
			($speaker, $code1, $first, $last, $morelast) = split(/\ /, $panel_string);
			$last = $last." ".$morelast;
		}

		if ($speaker eq "Room:") { 

			my $room_name = $code1." ".$code2 if $code2;
			$room_name = $code1." ".$first unless $code2;

			my $room = Tab::Room->search( 
				site => $round->site->id,
				name => $room_name
			)->first;

			unless ($room) { 
				$room = Tab::Room->create({
					site     => $round->site->id,
					name     => $room_name,
					inactive => 1
				});
			}

			$panel = Tab::Panel->create({
				round  => $round->id,
				letter => $letter++,
				flight => 1,
				room   => $room,
				bye    => 0
			});

		} elsif ($speaker eq "Judges:") { 

			my $judge_first = $code1;
			my $judge_last = $code2 if $code2;
			$judge_last = $first unless $code2;

			undef $judge;

			$judge = Tab::Judge->search( 
				judge_group => $event->judge_group->id,
				first       => $judge_first,
				last        => $judge_last
			)->first;

			$judge = Tab::Judge->create({
				judge_group => $event->judge_group->id,
				first       => $judge_first,
				last        => $judge_last,
				active      => 0
			});

		} else { 

			next if $code1 eq "zz-bye";

			my ($school_code, $kid) = split(/-/, $code1);

			my $entry_code = $school_code." ".$first." ".$last unless $code2;
			$entry_code = $school_code." ".$last." & ".$partner_last if $code2;

			my $entry_name = $first." ".$last unless $code2;
			$entry_name = $last." & ".$partner_last if $code2;

			my $entry = Tab::Entry->search( 
				event => $event->id,
				code  => $entry_code
			)->first;

			$entry = Tab::Entry->search( 
				event => $event->id,
				name  => $entry_name
			)->first unless $entry;

			if ($entry) { 

				$entry->code($entry_code);
				$entry->update;

				Tab::Ballot->create({
					panel        => $panel->id,
					entry        => $entry,
					judge        => $judge,
					speakerorder => $speaker
				});
			}

		}
		
	}

	$m->redirect("show.mhtml?round_id=".$round->id."&msg=Round Imported");

</%init>


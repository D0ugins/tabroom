<%args>
	$tourn
	$tourn_settings
	$person
	$round_id
	$judge_id
	$remove => undef
</%args>
<%init>

	my $judge = Tab::Judge->retrieve($judge_id);
	my $round = Tab::Round->retrieve($round_id);
	my $event = $round->event;

	my $fine++ if $remove eq "Replace and Fine";

	my @panels = $m->comp(
		"/funclib/judge_panels.mas",
		round => $round,
		judge => $judge
	);

	foreach my $panel (@panels) {

		my $clean_judge = $ARGS{$panel->id."_clean"};
		my $steal_judge = $ARGS{$panel->id."_steal"};

		next unless $clean_judge || $steal_judge;

		if ($clean_judge > 0 && $clean_judge != $judge->id) {

			$m->comp("/panel/schemat/judge_add.mhtml",
				judge_id       => $clean_judge,
				panel_id       => $panel->id,
				return         => "shiiiiiny",
				tourn          => $tourn,
				tourn_settings => $tourn_settings,
				person         => $person
			);

			if ($ARGS{"text_swap"}) {

				my $cjo = Tab::Judge->retrieve($clean_judge);
				my $message = "Judge swap ".$cjo->last." instead of ".$judge->last;

				$m->comp("/panel/schemat/blast_debate.mas",
					panel          => $panel,
					event          => $event,
					tourn          => $tourn,
					tourn_settings => $tourn_settings,
					message        => $message,
					skip_judge     => $judge->id
				);
			}

			$m->comp("/panel/schemat/judge_rm.mhtml",
				judge_id       => $judge->id,
				panel_id       => $panel->id,
				pre            => "shiiiiiny",
				fine           => $fine,
				tourn          => $tourn,
				tourn_settings => $tourn_settings,
				person         => $person
			);

			undef $fine; #only fine once per double flighted round;

		} elsif ($steal_judge) {

			$m->comp("/panel/schemat/judge_add.mhtml",
				tourn          => $tourn,
				tourn_settings => $tourn_settings,
				person         => $person,
				judge_id       => $steal_judge,
				panel_id       => $panel->id,
				return         => "shiiiiiny",
			);

			if ($ARGS{"text_swap"}) {

				my $sjo = Tab::Judge->retrieve($steal_judge);
				my $message = "Judge swap ".$sjo->last." instead of ".$judge->last;

				$m->comp("/panel/schemat/blast_debate.mas",
					panel          => $panel,
					event          => $event,
					tourn          => $tourn,
					tourn_settings => $tourn_settings,
					message        => $message,
					skip_judge     => $judge->id
				);
			}

			$m->comp("/panel/schemat/judge_rm.mhtml",
				judge_id       => $judge->id,
				tourn          => $tourn,
				tourn_settings => $tourn_settings,
				person         => $person,
				panel_id       => $panel->id,
				pre            => "shiiiiiny",
				fine           => $fine
			);

			undef $fine; #only fine once per double flighted round;

			my @steal_panels = $m->comp(
				"/funclib/judge_panels.mas",
				timeslot => $round->timeslot,
				judge_id => $steal_judge,
				flight   => $panel->flight
			);

			foreach my $steal_panel (@steal_panels) {

				$m->comp("/panel/schemat/judge_rm.mhtml",
					tourn          => $tourn,
					tourn_settings => $tourn_settings,
					person         => $person,
					judge_id       => $steal_judge,
					panel_id       => $steal_panel->id,
					pre            => "shiiiiiny"
				);
			}
		}
	}

	my $msg = "Double flight swap complete";
	$m->redirect("/panel/schemat/show.mhtml?round_id=$round_id");

</%init>

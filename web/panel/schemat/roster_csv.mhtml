<%args>
	$round_id => undef
	$person
	$session
	$tourn
</%args>
<%init>
	use POSIX;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

    my $now = DateTime->now;    
    $now->set_time_zone($tz);

	my $round = Tab::Round->retrieve($round_id);
	my $event = $round->event;
	my %event_settings = $event->all_settings();

	my $aff_string = $event_settings{"aff_label"};
	my $neg_string = $event_settings{"neg_label"};
	$aff_string = "Aff" unless $aff_string;
	$neg_string = "Neg" unless $neg_string;

    my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select entry.id, entry.code, room.name, ballot.side, panel.flight, 
			GROUP_CONCAT(distinct judge.code SEPARATOR ','),
			GROUP_CONCAT(distinct judge.last SEPARATOR ',')

			from (panel, ballot, entry)

			left join room on room.id = panel.room
			left join judge on judge.id = ballot.judge

			where panel.round = ? 
				and panel.id = ballot.panel
				and ballot.entry = entry.id
				and ballot.judge = judge.id

			group by entry.id order by entry.code
	");

	$sth->execute($round->id);

	my %rooms; 

	while (
		my ($entry_id, $entry_code, $room_name, $ballot_side, $panel_flight, $judge_code, $judge_name) 
			= $sth->fetchrow_array()
	) { 

		$rooms{$entry_id}{"entry"}  = $entry_code;
		$rooms{$entry_id}{"sort"}   = $entry_code;
		$rooms{$entry_id}{"room"}   = $room_name;
		$rooms{$entry_id}{"judge_codes"} = $judge_code;
		$rooms{$entry_id}{"judge_names"} = $judge_name;
		$rooms{$entry_id}{"flight"} = $panel_flight;

		$rooms{$entry_id}{"sort"} =~ s/[\D_]//g;

		unless ($event_settings{"no_side_constraints"}) { 
			$rooms{$entry_id}{"side"} = $aff_string if $ballot_side == 1;
			$rooms{$entry_id}{"side"} = $neg_string if $ballot_side == 2;
		}

	}

    my $event_name = $round->event->abbr;
    $event_name =~ s/[\W_]//g;

    my $name = $round->realname;
    $name =~ s/[\W_]//g;

    my $filename = "EntryList-$event_name-$name.csv";

	$m->clear_buffer();
    $r->content_type('application/csv');
    $r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

	$m->print('"'.$event->name.'"');
	$m->print("\n");

	$m->print('"'.$round->realname.'"');
	$m->print("\n");

	$m->print("Entry,Room,Flight,Side,Judges\n");

	foreach my $entry_id (
		sort {$rooms{$a}{"sort"} <=> $rooms{$b}{"sort"}} 
		keys %rooms
	) { 
		$m->print('"'.$rooms{$entry_id}{"entry"}.'",');
		$m->print('"'.$rooms{$entry_id}{"room"}.'",');
		$m->print('"'.$rooms{$entry_id}{"flight"}.'",');
		$m->print('"'.$rooms{$entry_id}{"side"}.'",');
		if ($rooms{$entry_id}{"judge_codes"}) { 
			$m->print('"'.$rooms{$entry_id}{"judge_codes"}.'",');
		} else { 
			$m->print('"'.$rooms{$entry_id}{"judge_names"}.'",');
		}
		$m->print("\n");
	}

	$m->flush_buffer();
	$m->abort();

</%init>

<%args>
	$tourn
	$session
	$tourn_settings
	$views    => undef
	$names    => "both"
	$round_id => undef
	$panel_id => undef
</%args>
<%init>

	my $round;
	my @panels;

	my $name;

	if ($round_id) { 
		$round = Tab::Round->retrieve($round_id);
		if ($round) { 
			push @panels, $round->panels;
			$name .= $round->realname;
			$name =~ s/[\W_]//g;
		}
	}

	if ($panel_id) {
		my $panel = Tab::Panel->retrieve($panel_id);
		if ($panel) { 
			push @panels, $panel;
			$round = $panel->round;
			$name .= $round->realname;
			$name =~ s/[\W_]//g;
			$name .= "-Chamber".$panel->letter;
		}
	}

	unless (@panels && $round) { 
		$m->comp("/funclib/abort.mas", 
			warning => "No valid chambers or round found"
		);
	}

    my $filename = "SeatingChart-$name-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;
    `rm -f $filepath.*`;

    $m->comp("/funclib/printout.mas", 
        tourn     => $tourn,
        filename  => $filename,
        head      => 1,
        array     => "1.3",
        landscape => 1,
    );  

    open (TEXOUT, ">>$filepath.tex");

	foreach my $panel (@panels) {

		my $room = $panel->room;
		next unless $room;

		my @entries = $m->comp(
			"/funclib/panel_entries.mas", 
			panel    => $panel,
			no_drops => 1
		);

		my @judges = $m->comp(
			"/funclib/panel_judges.mas", 
			panel => $panel
		);

		my $parli_count = 1;
		my $scorer_count;

		foreach my $judge (@judges) { 
			if ($judge->chair) { 
				$parli_count++;
			} else {
				$scorer_count++;
			}
		}

		my %entries_by_seat;
		my %seated;

		foreach my $entry (@entries) { 
			push @{$entries_by_seat{$entry->seat}}, $entry if $entry->seat;
		}

		my @passes;

		unless ($views eq "judges") { 
			foreach (1 .. $scorer_count) { 
				push @passes, "front";
			}
		} 
		
		unless ($views eq "parlis") { 
			foreach (1 .. $parli_count) { 
				push @passes, "back";
			}
		}

		foreach my $pass (@passes) { 

			my @rows; 
			foreach my $row (1 .. $room->rows) { 
				push @rows, $row;
			}

			@rows = reverse @rows if $pass eq "back";

			my @seats; 
			foreach my $seat (1 .. $room->seats) { 
				push @seats, $seat;
			}

			@seats = reverse @seats if $pass eq "back";

			print TEXOUT "\\noindent\n";

			if ($pass eq "front") { 
				print TEXOUT "{\\Large \\bf \\color{black!64} Scorer's View } ";
			} else { 
				print TEXOUT "{\\Large \\bf \\color{black!64} Parli/PO's View } ";
			}

			print TEXOUT " \\hfill ";
			print TEXOUT "{\\Large \\bf ".Tab::texify($round->realname);
			print TEXOUT Tab::texify(" Chamber ".$panel->letter);
			print TEXOUT " \\hfill ";
			print TEXOUT Tab::texify(" Room: ".$room->name)." } \n";

			print TEXOUT "\\vspace{.25in}\n";
			print TEXOUT "\\newline\n";

			print TEXOUT  "\\strut \\hfill {\\LARGE \\bf ".uc($pass)." OF ROOM } \\hfill \\strut\n";

			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";

			print TEXOUT "\\begin{tabular}{|p{.35in}";

			my $length = "7.75";
			$length = $length / ($room->seats) if $room->seats;

			my $height = "5.5";
			$height = $height / ($room->rows) if $room->rows;

			foreach my $seat (@seats) { 
				print TEXOUT "|p{".$length."in}";
			}

			print TEXOUT "|} \n";

			print TEXOUT "\\hline\n";
			print TEXOUT "\\rowcolor[rgb]{1,.95,.74}[5.5pt][5.5pt]\n";

			foreach my $seat (@seats) { 
				print TEXOUT "     & {\\bf Seat ".$seat." } \n";
			}

			print TEXOUT "\\\\ \\hline \n";
			my $switch;

			foreach my $row (@rows) { 

				print TEXOUT "\\rowcolor[rgb]{.92,.92,.92}[5.5pt][5.5pt]\n" if $switch++ % 2;

				print TEXOUT "{\\bf Row ".$row." }";
			
				foreach my $seat (@seats) { 

					print TEXOUT " & ";

					print TEXOUT "\\parbox[c][".$height."in][c]{".$length."in}{ \n";

					if ($entries_by_seat{$row."-".$seat}) {

						foreach my $entry (@{$entries_by_seat{$row."-".$seat}}) { 

							my @names = split(/\ /, $entry->name);

							if ($names eq "codes") { 
								print TEXOUT "\\large\n";
							} else { 
								print TEXOUT "\\normalsize\n";
							}

							unless ($names eq "names") { 
								print TEXOUT "\\strut \\hfill \n";
								print TEXOUT Tab::texify($entry->code);
								print TEXOUT "\\hfill \\strut \n";
							}

							print TEXOUT "\\smallskip" if $names eq "both";
							print TEXOUT "\\newline" if $names eq "both";

							unless ($names eq "codes") {

								foreach my $name (@names) {
									print TEXOUT "\\strut \\hfill \n";
									print TEXOUT Tab::texify($name); 
									print TEXOUT "\\hfill \\strut";
									print TEXOUT "\\newline";
								}
							}

						}

					}

					print TEXOUT "} \n";

				}

				print TEXOUT "\\\\ \\hline \n";

			}

			print TEXOUT "\\end{tabular}\n";

			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";

			if ($pass eq "front") { 
				print TEXOUT  "\\strut \\hfill {\\LARGE \\bf BACK OF ROOM } \\hfill \\strut\n";
			} else {
				print TEXOUT  "\\strut \\hfill {\\LARGE \\bf FRONT OF ROOM } \\hfill \\strut\n";
			}

			print TEXOUT "\\newpage\n";

		} 

	}

	$m->comp("/funclib/printout.mas",
		tourn     => $tourn,
		filename  => $filename,
		landscape => 1,
		tail      => 1
	);



</%init>

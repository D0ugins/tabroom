<%args>
	$round_id => undef
	$person
	$session
	$tourn
	$tourn_settings
</%args>
<%init>
	use POSIX;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

    my $now = DateTime->now;
    $now->set_time_zone($tz);

	my $round = Tab::Round->retrieve($round_id);

	my $event = $round->event;

    my $event_name = $round->event->abbr;
    $event_name =~ s/[\W_]//g;

    my $name = $round->realname;
    $name =~ s/[\W_]//g;

    my $filename = "Schematic-$event_name-$name.csv";

	my $designation = $event->setting('schem_designation');
    my $codes++ if $designation eq "codes";
    my $names++ if $designation eq "names";

    $codes++ if $designation eq "both";
    $names++ if $designation eq "both";

	$m->clear_buffer();
    $r->content_type('application/csv');
    $r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

	$m->print('"'.$event->name.'",');
	$m->print('"'.$round->realname.'"');
	$m->print("\n");

	my @panels = $m->comp("/funclib/round_panels.mas", round => $round);

	Tab::Panel->columns(TEMP => "roomnumber");
	Tab::Panel->columns(TEMP => "roomletter");

	foreach my $panel (@panels) {
		my $number = $panel->roomname();
		$number =~ s/[\D_]//g;
		$panel->roomnumber($number);

		my $letter = $panel->roomname();
		$letter =~ s/\d//g;
		$panel->roomletter($letter);
	}

	my %panels;

	foreach my $panel (
		sort {
			$a->bracket <=> $b->bracket
			|| $b->bye <=> $a->bye
			|| $a->roomletter cmp $b->roomletter
			|| $a->roomnumber <=> $b->roomnumber
		} @panels
	) {

	 	@{$panels{$panel}{entries}} = $m->comp(
			"/funclib/panel_entries.mas",
			panel => $panel
		);

		@{$panels{$panel}{judges}} = $m->comp(
			"/funclib/panel_judges.mas",
			panel => $panel
		);

		if ($panel->bracket) {
			$m->print('"'.$panel->bracket.'",');
		} else {
			$m->print('"'.$panel->letter.'",');
		}

		if ($panel->bye) {
			$m->print('"BYE",');
		} else {
			$m->print('"'.$panel->roomname.'",');
		}

		$m->print('"Flt'.$panel->flight.'",');

		if ($event->type ne "speech" && $event->type ne "congress") {
			foreach my $entry (@{$panels{$panel}{entries}}) {
				$m->print('"'.$entry->code.'",');
				$m->print('"'.$entry->name.'",');
				$m->print('"'.$entry->lastname.'",');
			}
		}

		foreach my $judge (@{$panels{$panel}{judges}}) {
			$m->print('"'.$judge->code.'",');
			$m->print('"'.$judge->first.'",');
			$m->print('"'.$judge->last.'",');
		}

		if ($event->type eq "speech" || $event->type eq "congress") {
			foreach my $entry (@{$panels{$panel}{entries}}) {
				$m->print('"'.$entry->code.'",');
				$m->print('"'.$entry->name.'",');
				$m->print('"'.$entry->lastname.'",') if $event->type eq "congress";
			}
		}

		$m->print("\n");
	}

	$m->print("\n");
	$m->print("\n");

	foreach my $panel (
		sort {
			$a->bracket <=> $b->bracket
			|| $b->bye <=> $a->bye
			|| $a->roomletter cmp $b->roomletter
			|| $a->roomnumber <=> $b->roomnumber
		} @panels
	) {

		if ($panel->bracket) {
			$m->print('"'.$panel->bracket.'",');
		} else {
			$m->print('"'.$panel->letter.'",');
		}

		if ($panel->bye) {
			$m->print('"BYE",');
		} else {
			$m->print('"'.$panel->roomname.'",');
		}

		$m->print("\n");

		foreach my $entry (@{$panels{$panel}{entries}}) {

			$m->print('"'.$entry->code.'",');
			$m->print('"'.$entry->name.'",');
			$m->print('"'.$entry->lastname.'",');

			if ($tourn_settings->{"nsda_nats"}) {

				$m->print('"'.$entry->state.'",');
				$m->print('"'.$entry->schoolname.'",');
				$m->print('"'.$entry->districtcode.'",');
				$m->print('"'.$entry->districtname.'",');
			}

			$m->print("\n");
		}

		if (scalar @{$panels{$panel}{judges}}) {
			$m->print(',"Judges"');
			$m->print("\n");

			foreach my $judge (@{$panels{$panel}{judges}}) {
				$m->print('"'.$judge->code.'",');
				$m->print('"'.$judge->first.'",');
				$m->print('"'.$judge->last.'",');
				$m->print("\n");
			}
		}

		$m->print("\n");
	}

	$m->flush_buffer();
	$m->abort();

</%init>


<%args>
	$person
	$tourn
	$target_id      => undef
	$setting_name   => undef
	$property_name  => undef
	$property_value => 0
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($target_id) {
		$m->print('{ "error": true, "message": "No round ID sent"}');
		$m->abort();
	}

	unless ($property_name || $setting_name) {
		$m->print('{ "error": true, "message": "No property to change sent"}');
		$m->abort();
	}

	my $round = Tab::Round->retrieve($target_id);

	unless ($round) {
		$m->print('{ "error": true, "message": "No round found for ID '.$target_id.'"}');
		$m->abort();
	}

	my $message;

	if ($setting_name) {

		if ($setting_name eq "motion" || $setting_name eq "notes") {
			$round->setting($setting_name, "text", $property_value);
			$message = "Setting $setting_name changed to $property_value";

		} else {
			$round->setting($setting_name, $property_value);
			$message = "Setting $setting_name changed to $property_value";
		}

	} elsif ($property_name) {

		$round->$property_name($property_value);
		$round->update();
		$message = "Property $property_name changed to $property_value";

	}

	$message .= " for round ".$round->realname;

    my %response = (
		error   => 0,
		message => $message
    );

	$m->comp("/funclib/log.mas",
		type        => 'tabbing',
		event       => $round->event->id,
		tourn       => $tourn->id,
		person      => $person->id,
		description => $message
	);

    $m->print(JSON::encode_json(\%response));
	$m->abort();

</%init>

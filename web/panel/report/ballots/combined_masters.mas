<%args>
	$filename
	$round    => undef
	$panel    => undef
</%args>
<%perl>

	my $filepath = $Tab::file_root."/tmp/".$filename;

	my @panels;
	my @judges;

	if ($panel) { 
		$round = $panel->round unless $round;
		push @panels, $panel;
		@judges = $m->comp("/funclib/panel_judges.mas", panel => $panel);
	} else { 
		push @panels, $round->panels();
		@judges = $m->comp("/funclib/round_judges.mas", round => $round);
	}

	my $event    = $round->event;
	my $category = $event->category;
	my $tourn    = $category->tourn;

	my %event_settings = $event->all_settings();

	my $no_codes = $category->setting("no_codes");

	my $aff_string = $event_settings{"aff_label"};
	my $neg_string = $event_settings{"neg_label"};

	$aff_string = "Aff" unless $aff_string;
	$neg_string = "Neg" unless $neg_string;

	open (TEXOUT, ">>$filepath.tex");
	print TEXOUT "\\renewcommand{\\arraystretch}{1.8}\n";
	print TEXOUT "\\setlength{\\parindent}{0pt}\n";
	print TEXOUT "\\noindent\n";

	my $start_time; 

	my $topic = $m->comp(
		"/funclib/print_format.mas", 
		message => $round->setting("motion")
	);

	my $message = $event_settings{"ballot_rules"};

	$message = $m->comp(
		"/funclib/print_format.mas", 
		message => $message
	);

	my $chair_message = $event_settings{"ballot_rules_chair"};

	$chair_message = $m->comp(
		"/funclib/print_format.mas",
		message => $chair_message
	);

	foreach my $judge (@judges) { 

		my @panels = $m->comp(
			"/funclib/judge_panels.mas", 
			judge => $judge,
			round => $round
		);

		next unless @panels;

		my $sample_panel = $panels[0];

		print TEXOUT "\\parbox[r][.5in][t]{2.5in}{";
		print TEXOUT "\\hrule height 0pt width 0pt \n";
		print TEXOUT "\\textsb{\\fontsize{24pt}{24pt}\\selectfont ";

		unless ($no_codes) {
			print TEXOUT Tab::texify($judge->code)." } \n";
			print TEXOUT "\\smallskip \n ";
			print TEXOUT "\\newline \n ";
			print TEXOUT "\\textsb{\\fontsize{18pt}{18pt}\\selectfont ";
		}

		print TEXOUT "\\truncate[-]{2.4in}{\n";
		print TEXOUT Tab::texify($judge->last.", ".$judge->first)."}\n";
		print TEXOUT "}\n";
		print TEXOUT "\\vspace{.05in}";

		if ($judge->school) { 
			print TEXOUT "\n\n {\\normalsize ";
			print TEXOUT Tab::texify(substr($judge->school->short_name, 0, 32))."}";
		}
		print TEXOUT "}\n";
		print TEXOUT "\\hfill\n";

		print TEXOUT "\\parbox[c][.5in][t]{2.5in}{";
		print TEXOUT "\\hrule height 0pt width 0pt \n";
		print TEXOUT "\\hfill ";
		print TEXOUT "{\\fontsize{24pt}{24pt}\\selectfont  \\bf ".Tab::texify($round->realname)."}";
		print TEXOUT "\\hfill\n";
		print TEXOUT "\\vspace{.05in}";
		print TEXOUT "}\n";

		print TEXOUT "\\parbox[r][.5in][t]{2.5in}{ ";
		print TEXOUT "\\hrule height 0pt width 0pt \n";
		print TEXOUT "\\normalsize \n";
		print TEXOUT "\\hfill\n";

		if ($sample_panel->roomname) { 
			print TEXOUT "\\textsb{ Room: ".&Tab::texify($sample_panel->roomname)."}\n";
		} else { 
			print TEXOUT "\\textsb{ Room: ASK TAB }\n";
		}
		print TEXOUT "\\newline \n ";
		print TEXOUT "\\strut\n";
		print TEXOUT "\\hfill\n";

		unless ($start_time) { 

			$start_time = $m->comp(
				"/funclib/showtime.mas", 
				string => $sample_panel->roundstart,
				return => 1
			);

			unless ($start_time) { 
				$start_time = $m->comp(
					"/funclib/showtime.mas", 
					dt => $round->timeslot->start,
					return => 1
				);
			}

			unless ($start_time) { 
				$start_time = "TBA";
			}
		}

		print TEXOUT "\\textsb{Start: ".$start_time." } \n";
		print TEXOUT "\\newline \n ";
		print TEXOUT "\\strut\n";
		print TEXOUT "\\hfill\n";
		print TEXOUT "\\textsb{ ".&Tab::texify($round->event->name)." }\n";
		print TEXOUT "}\n";

		print TEXOUT "\\noindent\n";
		print TEXOUT "\\begin{center}\n";
		my $logo = $tourn->setting("logo");

		if ($logo) { 

			unless (-e "$Tab::file_root/tmp/$logo") { 
				system "cd $Tab::file_root/tmp;
					$Tab::latex_path_prefix/wget ".$Tab::s3_url."/".$tourn->id."/".$logo;
			}

			if (-e "$Tab::file_root/tmp/".$logo) { 
				print TEXOUT "\\vspace{-34pt}\n";
				print TEXOUT "\\begin{figure}[h!]\n";
				print TEXOUT "\\hspace{5pt}\n";
				print TEXOUT "\\centerline{\\includegraphics[height=1in]{".$logo."}}\n";
				print TEXOUT "\\end{figure}\n";
				print TEXOUT "\\vspace{-20pt}\n";
			}

		} else { 

			print TEXOUT "{\\huge \\bf ".&Tab::texify(uc($tourn->name))." } \\\\ \n";
			print TEXOUT "\\smallskip \n ";
		}

		print TEXOUT "\\end{center} \n";


		if ($topic) {
			print TEXOUT "\\normalsize\n ";
			print TEXOUT "\\noindent\n ";
			print TEXOUT "\\strut\n";
			print TEXOUT "\\hfill TOPIC:\n";
			print TEXOUT "\\textsb{".$topic."}";
			print TEXOUT "\\hfill\n";
			print TEXOUT "\\strut\n";
			print TEXOUT "\\vspace{.2in}\n";
			print TEXOUT "\\newline \n ";
		}

		if ($message) {
			print TEXOUT "\\footnotesize\n ";
			print TEXOUT "\\noindent\n ";
			print TEXOUT $message;
			print TEXOUT "\\strut\n";
			print TEXOUT "\\vspace{.2in}\n";
			print TEXOUT "\\newline \n ";
		}
		
		if ($chair_message && $judge->chair) { 


			print TEXOUT "\\footnotesize\n ";
			print TEXOUT "\\noindent\n ";
			print TEXOUT $chair_message;
			print TEXOUT "\\vspace{.2in}\n";
			print TEXOUT "\\newline\n";

		}


		print TEXOUT "\\strut\n";
		print TEXOUT "\\hfill\n";
		print TEXOUT "\\textbf{\\normalsize \\color{black!64} ";
		print TEXOUT "Please CLEARLY CIRCLE the winner of each debate";
		print TEXOUT "}";
		print TEXOUT "\\hfill\n";
		print TEXOUT "\\strut\n";
		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\strut\n";
		print TEXOUT "\\hfill\n";

		print TEXOUT "\\begin{minipage}{7in}\n";

		foreach my $panel (@panels) { 

			print TEXOUT "\\parbox[t][][t]{7in}{";
			print TEXOUT "\\hrulefill\n";
			print TEXOUT "}\n";
			print TEXOUT "\\newline\n";

			print TEXOUT "\\begin{minipage}{7in}\n";

			print TEXOUT "Flight ".$panel->flight." \\hfill Section ".$panel->letter;
			print TEXOUT "\\bigskip\n";
			print TEXOUT "\\newline\n\n";

			my $notfirst;

			foreach my $entry ($m->comp("/funclib/panel_entries.mas", panel => $panel)) { 
				print TEXOUT "\\hfill\n" if $notfirst++;

				print TEXOUT "\\parbox{2in}{\n";
				print TEXOUT "\\strut\n";
				print TEXOUT "\\hfill\n";
				print TEXOUT "\\textbf{\\fontsize{32pt}{32pt}\\selectfont ";
				print TEXOUT Tab::texify($entry->code);
				print TEXOUT " } \n";
				print TEXOUT "\\hfill\n";
				print TEXOUT "\\strut\n";
				print TEXOUT "\\smallskip\n";
				print TEXOUT "\\newline\n";
				print TEXOUT "\\strut\n";
				print TEXOUT "\\hfill\n";

				if ($notfirst < 2) { 
					print TEXOUT "\\textsb{\\normalsize \\color{black!64} ".uc($aff_string)." }\n";
				} else { 
					print TEXOUT "\\textsb{\\normalsize \\color{black!64} ".uc($neg_string)." }\n";
				}
				print TEXOUT "\\hfill\n";
				print TEXOUT "\\strut\n";
				print TEXOUT " } \n";
			}

			print TEXOUT "\\end{minipage}\n";
			print TEXOUT "\\vspace{.44in}\n";
			print TEXOUT "\\newline\n";

		}

		print TEXOUT "\\end{minipage}\n";
		print TEXOUT "\\hfill\n";
		print TEXOUT "\\strut\n";
		print TEXOUT "\\newline\n";

		my $point_scale = $event_settings{"point_scale"};

		if ($point_scale) { 
			my $strip = HTML::Strip->new();
			$point_scale =~ s/\<li\>/*/g;
			$point_scale =~ s/\<\/p\>/\n \n/g;
			$point_scale =~ s/\<\/li\>/\n \n/g;
			$point_scale =~ s/<br \/>/\n\n/g;
			$point_scale =~ s/\&nbsp;/ /g;
			$point_scale = $strip->parse( $point_scale );
			$point_scale = Tab::texify($point_scale);
			$point_scale =~ s/\.\.\./ \\dotfill /g;
			print TEXOUT "\\scriptsize \n\n";
			print TEXOUT "\\noindent \n ";
			print TEXOUT "\\hfill ";
			print TEXOUT "\\parbox[l][][c]{1.5in}{";
			print TEXOUT "\\textsb{ Point Scale:} \n\n";
			print TEXOUT "\\fbox{ \n";
			print TEXOUT "\\parbox[l][][c]{1.5in}{";
			print TEXOUT $point_scale;
			print TEXOUT "}\n";
			print TEXOUT "}\n";
			print TEXOUT "}\n";
			print TEXOUT "\\vspace{.5in} \\newline \n. ";
		}

		my $speech_times = $event_settings{"speech_times"};

		if ($speech_times) { 
			my $strip = HTML::Strip->new();
			$speech_times =~ s/\<li\>/*/g;
			$speech_times =~ s/\<\/p\>/\n \n/g;
			$speech_times =~ s/\<\/li\>/\n \n/g;
			$speech_times =~ s/<br \/>/\n\n/g;
			$speech_times =~ s/\&nbsp;/ /g;
			$speech_times = $strip->parse( $speech_times );
			$speech_times = Tab::texify($speech_times);
			$speech_times =~ s/\.\.\./ \\dotfill /g;
			print TEXOUT "\\scriptsize \n ";
			print TEXOUT "\\hfill ";
			print TEXOUT "\\parbox[l][][c]{1.5in}{";
			print TEXOUT "\\textsb{ Speech Times:} \n\n";
			print TEXOUT "\\fbox{ \n";
			print TEXOUT "\\parbox[l][][c]{1.5in}{";
			print TEXOUT $speech_times;
			print TEXOUT "}\n";
			print TEXOUT "}\n";
			print TEXOUT "}\n";
			print TEXOUT "\\medskip \\newline \n ";
		}

		print TEXOUT "\\strut \n\n";
		print TEXOUT "\\newpage \n\n";

	}

	close (TEXOUT);

	return;

</%perl>

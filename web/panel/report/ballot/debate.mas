<%args>
	$texout
	$category_settings
	$section
	$rounds
	$tb_types
</%args>
<%init>

	my $aff_string = $rounds->{'aff_string'};
	my $neg_string = $rounds->{'neg_string'};

	my $round_type = $rounds->{"type"};

	$round_type = "elim" if $round_type eq "final";
	$round_type = "elim" if $round_type eq "runoff";

	my $side_locked;

	if ($rounds->{'no_side_constraints'}) {

	} elsif ($round_type eq "elim") {

		unless ($rounds->{"no_elim_side_constraints"}) {
			$side_locked =  $m->comp(
				"/funclib/round_elim_dueaff.mas",
				panel => $section->{id}
			);
		}

	} elsif ($rounds->{"flip_round"}) {

	} else {
		$side_locked++;
	}

	print $texout "\\renewcommand{\\arraystretch}{1.8}\n";
	print $texout "\\setlength{\\parindent}{0pt}\n";

	print $texout "\\noindent\n";

	if ($round_type eq "elim") {

		my ($first, $second) = List::Util::shuffle(keys %{$section->{"entry"}});

		print $texout "\\begin{minipage}[c][][r]{7in}\n";
		print $texout "\\begin{center}\n";
		print $texout "\\large\n";

		if ($first && $second) {

			if ($side_locked) {

				print $texout "{\\scriptsize \\emph{ Sides are locked due to a previous debate between these entries}}\n\n";
				print $texout "\\vspace{.2in}\n";
				print $texout "\\parbox[c]{2.75in}{";
					print $texout Tab::texify($section->{"entry"}{$first}{"code"});
					print $texout "(".Tab::texify($section->{"entry"}{$first}{"name"}).")";
				print $texout "} \\hspace{.5in} \\parbox[c]{2.75in}{";
					print $texout Tab::texify($section->{"entry"}{$second}{"code"});
					print $texout "(".Tab::texify($section->{"entry"}{$second}{"name"}).")";
				print $texout "}\n";

			} else {

				print $texout "\\vspace{.2in}\n";

					print $texout Tab::texify($section->{"entry"}{$first}{"code"});
					print $texout "(".Tab::texify($section->{"entry"}{$first}{"name"}).")";
				print $texout " vs ";
					print $texout Tab::texify($section->{"entry"}{$second}{"code"});
					print $texout "(".Tab::texify($section->{"entry"}{$second}{"name"}).")";
				print $texout " \n\n";

				print $texout "\\vspace{.05in}\n";
				print $texout "\\scriptsize{\\emph{Debaters should flip for sides. Please mark entry designations by side on the lines below}}\n\n";
				print $texout "\\vspace{.3in}\n";

			}

			print $texout "\\makebox[2.75in]{\\hrulefill} \\hspace{.5in} \\makebox[2.75in]{\\hrulefill}\n\n";
			print $texout "\\footnotesize\n";
			print $texout "{\\bf ".Tab::texify(uc($aff_string))." } \\hspace{3in} {\\bf ".Tab::texify(uc($neg_string))." } " ;

		}

		print $texout "\\end{center}\n";
		print $texout "\\end{minipage}\n";
		print $texout "\\newline\n";

	} else {

		my $aff_id = $section->{"byside"}{1};
		my $neg_id = $section->{"byside"}{2};
		my $side;

		foreach my $entry_id ($aff_id, $neg_id) {

			unless ($side) {
				$side = $aff_string;
			} else {

				if ($tb_types->{"ranks"}) {
					print $texout "\\hspace{.15in}\n"
				} else {
					print $texout "\\hspace{.25in}\n"
				}
				$side = $neg_string;
			}

			print $texout "\\begin{minipage}[c]{3.5in}";
			print $texout "\n \\normalsize\n";

			if ($side_locked) {

				print $texout "{\\small \\bf ".Tab::texify(uc($side))."}\n\\newline\n";
				print $texout "\\begin{tabular}{"

			} else {

				print $texout "\\small";
				print $texout "{\\bf ".Tab::texify(uc($aff_string)) ." } \n";
				print $texout "\\hspace{.1in} {\\bf ".Tab::texify(uc($neg_string))." } \n";
				print $texout "\\hspace{.1in} {\\footnotesize (Circle Side) } \n";

				print $texout "\\hspace{.5in}\n";

				print $texout "Speakers \\hspace{.1in} {\\bf 1st } \n";
				print $texout "\\hspace{.1in} {\\bf 2nd } \n";

				print $texout "\\medskip\n";
				print $texout "\\newline\n";
				print $texout "\\begin{tabular}{"
			}

			my $first_row;

			my $size;

			if ($rounds->{max_entry} > 1 && ($tb_types->{"points"} || $tb_types->{"ranks"})) {

				if ($tb_types->{"ranks"} && $tb_types->{"points"}) {
					$size = "1.5in"
				} elsif ($tb_types->{"ranks"} || $tb_types->{"points"}) {
					$size = "2in";
				} else {
					$size = "3in";
				}

				print $texout "|p{.25in}|p{$size}";
				if ($entry_id) {
					$first_row = " {\\bf \\scriptsize Spkr} & \\truncate{$size}{ \\bf{ ";
					$first_row .= Tab::texify($section->{entry}{$entry_id}{code});

					if (length($section->{entry}{$entry_id}{code}) < 7) {
						$first_row .= "} -- \\textsb{ ".Tab::texify($section->{entry}{$entry_id}{name});
					}
					$first_row .= "} }";
				} else {
					$first_row = " {\\bf \\scriptsize Spkr} & {\\bf Team: } ";
				}

			} else {

				if ($tb_types->{"ranks"} && $tb_types->{"points"}) {
					$size = "1.75in"
				} elsif ($tb_types->{"ranks"} || $tb_types->{"points"}) {
					$size = "2.25in";
				} else {
					$size = "3.15in";
				}


				print $texout "|";
				print $texout "p{$size}";

				if ($entry_id) {
					$first_row = "\\truncate{$size}{ \\bf{";
					$first_row .= Tab::texify($section->{entry}{$entry_id}{code});
					if (length($section->{entry}{$entry_id}{code}) < 7) {
						$first_row .= "} -- \\textsb{".Tab::texify($section->{entry}{$entry_id}{name});
					}
					$first_row .= "} }";
				} else {
					$first_row = " {\\bf \\truncate{$size}{ Debater: } }";
				}
			}

			if ($tb_types->{"points"}) {
				print $texout "|" ;
				print $texout "p{.4in}";
				$first_row .= " & \\begin{minipage}[c]{.4in}\n";
				$first_row .= "\\vspace{.05in}\n";
				$first_row .= "{\\bf \\scriptsize POINTS}\n\n";
				$first_row .= "{\\scriptsize ( $rounds->{min_points} - $rounds->{max_points} )}\n";
				$first_row .= "\\vspace{.02in}\n";
				$first_row .= "\\end{minipage}\n";
			}

			if ($tb_types->{"ranks"}) {
				print $texout "|" ;
				print $texout "p{.4in}";
				$first_row .= " & \\begin{minipage}[c][][t]{.4in}\n";
				$first_row .= "\\vspace{.05in}\n";
				$first_row .= "{\\bf \\scriptsize RANK}\n\n";
				$first_row .= "\\vspace{.22in}\n\n";
				$first_row .= "\\end{minipage}\n ";
			}

			print $texout "|" ;
			print $texout "}\n";
			print $texout "\\hline\n" ;
			print $texout $first_row."\\\\ \n";
			print $texout "\\hline\n" ;

			my $order = 1;

			if ($rounds->{team_points}) {

				print $texout " & " if $rounds->{max_entry} > 1;
				print $texout "{\\footnotesize Team Points: }";
				print $texout " & " if $tb_types->{"points"};
				print $texout " & " if $tb_types->{"ranks"};
				print $texout "\\\\ \n";
				print $texout "\\hline\n" ;

			} else {

				if (
					$section->{entry}{$entry_id}{"student_names"}
					&& ($tb_types->{"points"} || $tb_types->{"ranks"})
				) {
					foreach my $speaker (split ("NAMESEP", $section->{entry}{$entry_id}{"student_names"})) {
						print $texout " & " if $rounds->{max_entry} > 1;
						print $texout Tab::texify($speaker);
						print $texout " & " if $tb_types->{"points"};
						print $texout " & " if $tb_types->{"ranks"};
						print $texout "\\\\ \n";
						print $texout "\\hline\n" ;
					}

				} elsif ($tb_types->{"points"} || $tb_types->{"ranks"}) {

					my $order = 1;
					foreach (1 .. $rounds->{max_entry}) {

						print $texout " & " if $rounds->{max_entry} > 1;
						print $texout "{\\footnotesize Name: }";
						print $texout " & " if $tb_types->{"points"};
						print $texout " & " if $tb_types->{"ranks"};
						print $texout "\\\\ \n";
						print $texout "\\hline\n" ;
					}
				}
			}

			print $texout "\\end{tabular}\n";
			print $texout "\\end{minipage}\n";

		}
	}

	if ($tb_types->{"winloss"}) {

		print $texout "\\begin{minipage}[c][][r]{7in}\n";
		print $texout "\\begin{center}\n";
		print $texout "\\vspace{.3in}\n";
		print $texout "\\normalsize\n";
		print $texout "Winner: \\makebox[2.5in]{\\hrulefill} debating on the \\makebox[1in]{\\hrulefill}\n";

		if ($tb_types->{"points"} && (not defined $rounds->{no_lpw})) {
			print $texout "\\hspace{.15in} \\footnotesize Low point win? \\makebox[.5in]{\\hrulefill} \n";
		}

		print $texout "\n";
		print $texout "\\scriptsize\n";

		if ($round_type eq "elim") {

			print $texout "\\makebox[1.25in]{}School/Team\\makebox[2.3in]{} Side (";
			print $texout Tab::texify($aff_string." or ".$neg_string).")";

		} else {
			print $texout "\\makebox[2.25in]{}School/Team\\makebox[2.3in]{} Side (";
			print $texout Tab::texify($aff_string." or ".$neg_string).")";
			print $texout "\\makebox[1.25in]{}" unless $rounds->{"no_lpw"};
		}

		print $texout "\n\n";
		print $texout "\\vspace{.25in}\n";
		print $texout "\\end{center}\n";
		print $texout "\\end{minipage}\n\n";
	}

	print $texout "\\noindent";
	print $texout "\\makebox[7in]{\\hrulefill}\n\n";
	print $texout "\\noindent\n";
	print $texout "Comments \\\& Reason for Decision:\n \n" unless $round_type eq "elim";
	print $texout "\\vspace{.5in}\n";

	my $point_scale = $rounds->{"point_scale"};

	if ($point_scale) {
		my $strip = HTML::Strip->new();
		$point_scale =~ s/\<li\>/*/g;
		$point_scale =~ s/\<\/p\>/\n \n/g;
		$point_scale =~ s/\<\/li\>/\n \n/g;
		$point_scale =~ s/<br \/>/\n\n/g;
		$point_scale =~ s/\&nbsp;/ /g;
		$point_scale = $strip->parse( $point_scale );
		$point_scale = Tab::texify($point_scale);
		$point_scale =~ s/\.\.\./ \\dotfill /g;
		print $texout "\\scriptsize \n\n";
		print $texout "\\noindent \n ";
		print $texout "\\hfill ";
		print $texout "\\parbox[l][][c]{1.5in}{";
		print $texout "{\\bf Point Scale:} \n\n";
		print $texout "\\fbox{ \n";
		print $texout "\\parbox[l][][c]{1.5in}{";
		print $texout $point_scale;
		print $texout "}\n";
		print $texout "}\n";
		print $texout "}\n";
		print $texout "\\vspace{.5in} \\newline \n. ";
	}

	my $speech_times = $rounds->{"speech_times"};

	if ($speech_times) {
		my $strip = HTML::Strip->new();
		$speech_times =~ s/\<li\>/*/g;
		$speech_times =~ s/\<\/p\>/\n \n/g;
		$speech_times =~ s/\<\/li\>/\n \n/g;
		$speech_times =~ s/<br \/>/\n\n/g;
		$speech_times =~ s/\r/\n/g;
		$speech_times =~ s/\&nbsp;/ /g;
		$speech_times = $strip->parse( $speech_times );
		$speech_times = Tab::texify($speech_times);
		$speech_times =~ s/\.\.\./ \\dotfill /g;
		print $texout "\\scriptsize \n ";
		print $texout "\\hfill ";
		print $texout "\\parbox[l][][c]{1.5in}{";
		print $texout "{\\bf Speech Times:} \n\n";
		print $texout "\\fbox{ \n";
		print $texout "\\parbox[l][][c]{1.5in}{";
		print $texout $speech_times;
		print $texout "}\n";
		print $texout "}\n";
		print $texout "}\n";
		print $texout "\\medskip \\newline \n ";
	}

	return;

</%init>

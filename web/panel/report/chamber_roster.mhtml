<%args>
	$tourn
	$session
	$round_id => undef
	$sort_by  => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);
	$m->abort unless $round;

	my $event = $round->event;

    my $now = DateTime->now;    
    $now->set_time_zone($tourn->tz);

    my $name = $event->name;
    $name =~ s/[\W_]//g;

    my $filename = "Roster-$name-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;
    `rm -f $filepath.*`; 

    $m->comp("/funclib/printout.mas", 
		tourn    => $tourn,
		filename => $filename,
		wide     => 1,
		head     => 1
	);

    open (TEXOUT, ">>$filepath.tex");

	print TEXOUT "\\noindent\n";
	print TEXOUT "{\\LARGE \\bf ". Tab::texify($event->name);
	print TEXOUT " \\hfill Chamber Assignments } \n";
	print TEXOUT "\\bigskip\n";
	print TEXOUT "\\newline\n";

	my $designation = $event->setting("schem_designation");
	my $tabular; 

	my @entries = $m->comp("/funclib/round_entries.mas", round => $round);
	my $max_length;

	my %entry_id;

	foreach my $entry (@entries) { 

		if ($designation ne "names") { 
			$entry_id{$entry->id} .= $entry->code;
		}

		if ($designation eq "both") { 
			$entry_id{$entry->id} .= " \\hspace{2mm} ";
		}
		
		if ($designation ne "codes") { 
			$entry_id{$entry->id} .= $entry->name;
		}

#		$entry_id{$entry->id} = substr($entry_id{$entry->id}, 0, 19);

		$max_length = length($entry_id{$entry->id}) if length($entry_id{$entry->id}) > $max_length;
	}

	my $columns = 3;
	my $minipage = 2.4;

	my $third = $max_length + 4;

	if ($max_length > 20) { 
		$columns  = 2;
		$minipage = 3.65;
	}

	$max_length++;
	Tab::debuglog("Max length is $max_length");

	$tabular = "\\begin{tabular}{|p{".$max_length."ex}|p{\\dimexpr\\textwidth-".$third."ex}|}\n";

	my $switch;
	my $colorswitch;
	my %panels = map {$_->id => $_} $round->panels;

	if ($designation eq "names" || $sort_by eq "names") { 

		@entries = 
			sort {$a->lastname cmp $b->lastname} 
			@entries;

	} else { 

        @entries = 
            map  { $_->[0] } 
            sort { $a->[1] <=> $b->[1] } 
            map  { [$_, $_->code=~/(\d+)/] } 
            @entries;

        @entries = 
            map  { $_->[0] } 
            sort { uc($a->[1]) cmp uc($b->[1]) } 
            map  { [$_, $_->code =~ /(\D+)/] } 
            @entries;

	}

	my $countdown;
	my $half = POSIX::ceil(scalar (@entries) / 2);

	$half = 39 if $half > 39;

	my $halfswitch;
	my $notfirst;

	foreach my $entry (@entries) { 

		next unless $panels{$entry->panelid};

		if ($countdown-- < 1) { 

			my $countdown_correction;

			if ($notfirst++) { 

				print TEXOUT "\\hline\n";
				print TEXOUT "\\end{tabular}\n";
				print TEXOUT "\\end{minipage}\n";

				unless ($halfswitch++ % $columns) { 
					print TEXOUT "\\newpage\n";
					print TEXOUT "\\noindent\n";
				} else { 
					print TEXOUT "\\hspace{4mm}\n";
				}

			} else { 
				$halfswitch++;
			}

			print TEXOUT "\\begin{minipage}[t][][t]{".$minipage."in}\n";
			print TEXOUT "\\vspace{0pt}\\raggedright\n";
			print TEXOUT $tabular;
			print TEXOUT "\\hline\n";
			print TEXOUT "\\rowcolor[rgb]{1,.95,.72}\[5.5pt\]\[5.5pt\]\n";
			print TEXOUT " \\textsb{Contestant} & \\textsb{Chamber} \\hfill \\textsb{Room} \\\\ \n";
			undef $colorswitch;
			$countdown = $half - 1;
		}

		print TEXOUT "\\rowcolor[rgb]{.93,.93,.93}\[5.5pt\]\[5.5pt\]\n" 
			if $colorswitch++ % 2;

		print TEXOUT "\\footnotesize\n";

		print TEXOUT Tab::texify($entry_id{$entry->id});

		print TEXOUT " & ";

		print TEXOUT "\\footnotesize\n";

		print TEXOUT Tab::texify($entry->panelletter)." \\hfill ";
		print TEXOUT Tab::texify($entry->roomname);
		print TEXOUT "\\\\ \n";

	}

	print TEXOUT "\\hline\n";
	print TEXOUT "\\end{tabular}\n";
	print TEXOUT "\\end{minipage}\n";
	close TEXOUT;

    $m->comp("/funclib/printout.mas", 
		tourn    => $tourn,
		filename => $filename,
		tail     => 1 
	);

</%init>

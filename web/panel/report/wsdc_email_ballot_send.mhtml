<%args>
	$tourn
	$person
	$round_id => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);
	use HTML::FromText;

	if ($round) { 

		foreach my $entry ($m->comp("/funclib/round_entries.mas", round => $round))  { 

			my $subject = "Round scores from ".$round->realname." for ".$entry->code;

			my $body = "\n\n";

			my @ballots = Tab::Ballot->search( panel => $entry->panelid, entry => $entry->id);

			foreach my $ballot (@ballots) { 

				$body .= "Ballot from ".$ballot->judge->first." ".$ballot->judge->last." \n\n";

				my @ballot_scores = $ballot->scores;

				my @points;
				my $win;
				my @categories;
				my @replies;

				my %used;

				foreach my $score (@ballot_scores) { 

					push @points, $score if $score->tag eq "points";
					push @categories, $score if $score->tag eq "categories";
					push @replies, $score if $score->tag eq "rebuttal_points";

					$used{$score->student->id}++ if $score->student;

					$win++ if $score->tag eq "ballot" && $score->value > 0;

				}

				$body .= "Vote:  WIN \n\n" if $win;
				$body .= "Vote:  LOSS \n\n" unless $win;

				foreach my $student ($entry->students) { 

					next unless $used{$student->id};

					$body .= $student->first." ".$student->last."\n";

					foreach my $points (@points) { 
						next if $points->student->id != $student->id;
						$body .= "\tPoints: ".$points->value."\n";
					}

					foreach my $replies (@replies) { 
						next if $replies->student->id != $student->id;
						$body .= "\tReply Points: ".$replies->value."\n";
					}

					foreach my $category (@categories) { 
						next if $category->student->id != $student->id;
						$body .= "\tCategory Scores: ".$category->content."\n";
					}

					$body .= "\n\n";

				}

			}

			my $to = $entry->school->setting("manager_name").' <'.$entry->school->setting("manager_email").'>';

			$body .= $to."\n";

			my $html = text2html($body, paras => 1, metachars => 0);

			my $from_string = $person->first." ".$person->last." <info\@tabroom.com>";

			my $type = "text/html";

			$subject = "[TAB] ".$subject;

			my $msg = MIME::Lite->new(
				From    => $from_string,
				To      => $to,
				Subject => $subject,
				Type    => $type,
				Data    => $html."\n\n"
			);

			if ($Tab::hostname eq "www.tabroom.com") {

				MIME::Lite->send("sendmail", "/usr/sbin/sendmail -t -oi -oem", Timeout => 6);

				my $result = eval { $msg->send; };

				Tab::log("Email sent to $to from $from_string response was: $result ") unless $result == 1;

			} else {

				Tab::debuglog("Tab hostname is $Tab::hostname.  Not sending email to $to");
			}
		}
	}

	my $msg = $round->realname." scores sent to team administrative contacts.";

	$m->redirect("wsdc_email_ballot.mhtml?msg=$msg");

</%init>


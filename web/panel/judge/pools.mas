<%args>
	$tourn
	$perms
	$defaults    => undef
	$session     => undef
	$category_id => undef
	$event_id    => undef
	$jpool_id    => undef
</%args>
<%init>

	my ($eventref, $catref) = $m->comp(
		"/funclib/allowed_events.mas",
		tourn => $tourn,
		perms => $perms,
		type  => "admin"
	);

	#CATEGORIES
	my @categories = @{$catref};
	my $category = Tab::Category->retrieve($category_id);

	if ($session && $category) {
		$defaults->{category} = $category->id;
		$session->default($defaults);
		$session->update();
	}

	if (@categories && (not defined $category)) {

		my $default_category = $defaults->{category};

		if ($defaults->{event} && (not defined $default_category)) {
			my $de = Tab::Event->search(id => $defaults->{event}, tourn => $tourn->id)->first;
			$default_category = $de->category->id if $de;
		}

		foreach my $cat (@categories) {
			if ($cat == $defaults->{category}) {
				$category = $cat;
				last;
			}
		}

		if (not defined $category) {
			$category = $categories[0];
		}
	}

	#EVENTS
	my @events;

	if ($category) {
		foreach my $ev (@{$eventref}) {
			push @events, $ev if $ev->category == $category;
		}
	} else {
		@events = @{$eventref};
	}

	my $event = Tab::Event->retrieve($event_id) if $event_id;
	my %event_by_id = map {$_->id => $_} @events if @events;
	undef $event unless (not defined $event) || $event_by_id{$event->id};

	if (@events) {

		if (scalar @events == 1) {
			$event = $events[0];
		}

		unless ($perms->{'owner'} || $perms->{"full_admin"} || $event) {
			$event = $events[0];
		}
	}

	my @jpools;
	my %children;

	if ($ARGS{"nsda_nats"} && $category->setting("nats_category")) {

		# Nationals has 38,421 judge pools.  Don't show them all, only
		# display the specific event

		if ($ARGS{"orphans"}) {

			Tab::JPool->columns(TEMP => "judgecount");

			Tab::JPool->set_sql( orphans => "
				select jpool.*,
					count(judge.id) as judgecount
				from (jpool)
					left join jpool_judge jpj on jpj.jpool = jpool.id
					left join judge on jpj.judge = judge.id

				where jpool.category = ?

				and not exists (
					select jps.id
					from jpool_setting jps
					where jps.jpool = jpool.id
					and jps.tag = 'registrant'
				)
				and not exists (
					select round.id
					from round, jpool_round jpr
					where jpr.jpool = jpool.id
					and jpr.round = round.id
				)
				group by jpool.id
				order by jpool.name
			");

			@jpools = Tab::JPool->search_orphans($category->id);

			my %seen;
			@jpools = grep { ! $seen{$_->id} ++ } @jpools;

		} elsif ($event) {

			@jpools = $m->comp(
				"/funclib/event_jpools.mas",
				event => $event
			);

		} elsif ($perms->{"owner"} || $perms->{"full_admin"}) {

			@jpools = $m->comp(
				"/funclib/tourn_jpools.mas",
				tourn => $tourn,
				limit => "registrant"
			);

			foreach my $jpool (@jpools) {

				# The below only exposes jpools without an event/round assigned.
				# to cut down on the MADNESS -- CLP

				push @{$children{$jpool->id}},
					$m->comp("/funclib/jpool_children.mas",
						jpool => $jpool
					);
			}
		}

	} elsif ($category) {
		@jpools = sort {$a->name cmp $b->name} $category->jpools;
	}

	my $jpool;

	if ($jpool_id) {
		foreach my $ojpool (@jpools) {
			$jpool = $ojpool if $ojpool->id == $jpool_id;
		}
	}

	unless ($jpool || $ARGS{"no_default"}) {
		$jpool = $jpools[0] if @jpools;
	}

	my %jpool_settings = $m->comp(
		"/funclib/jpool_settings.mas",
		category => $category
	);

	return ($event, \@events, $category, \@categories, $jpool, \@jpools, \%jpool_settings, \%children);

</%init>

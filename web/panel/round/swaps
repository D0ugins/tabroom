
	unless ($num_panels == 1) { 

		foreach my $counter (1 .. 7) { 

			my $total;

			next if $no_improvement == 0;
			$no_improvement = 0;

			foreach my $section_key (@section_keys) { 
			
				my @section = @{$sections{$section_key}};
				my $entry_section1_score = score_section(
					\@section, 
					\%hits, 
					\%entries
				);

				next if $entry_section1_score < 1;

				ENTRY:
				foreach my $entry_id (@section) { 
				
					next if $entry_section1_score < 1;

					# Remove the candidate for a test array of original section
					my @section1 = @section; 	
					my $index = 0;

					$index++ until $section1[$index] == $entry_id;
					splice(@section1, $index, 1);

					my $swap_section;
					my $swap_entry;
					my $current_diff;

					my @new_entry_section;
					my @new_swap_section;

					my $count;
		
					OTHERPANEL:
					foreach my $other_key (@section_keys) { 

						next if $forbidden_sections{$entries{$entry_id}{"school"}}{$other_key};

						# Can't switch to the same section
						next if $other_key == $section_key; 				

						# Find the other section for scoring
						my @section2 = @{$sections{$other_key}}; 			

						my $other_section2_score = score_section(
							\@section2, 
							\%hits, 
							\%entries
						);

						# Put me into this section for testing
						push (@section2, $entry_id);					

						OTHERENTRY:
						foreach my $other_entry_id (@{$sections{$other_key}}) {
						
							next if $forbidden_sections{$entries{$other_entry_id}{"school"}}{$section_key};

							# Add swap candidate to original section
							push (@section1, $other_entry_id);				

							$count++;

							my $other_section1_score = score_section(
								\@section1, 
								\%hits, 
								\%entries
							);

							# Remove swap candidate from the section
							my $index = 0;									

							$index++ until $section2[$index] == $other_entry_id;
							splice(@section2, $index, 1);

							my $entry_section2_score = score_section(
								\@section2, 
								\%hits, 
								\%entries
							);

							my $squo_score = $entry_section1_score + $other_section2_score;
							my $swap_score = $entry_section2_score + $other_section1_score;
							my $diff = $squo_score - $swap_score;

							my $replace = pop(@section1);  #remove me from this section
							push (@section2, $replace);    #put me back from whence I came

							if ( $diff > 0 && $diff > $current_diff) { 
								$current_diff = $diff;
								$swap_entry = $other_entry_id;
								$swap_section = $other_key;
							}

						}

					}

					if ($swap_entry) { 

						my @section2 = @{$sections{$swap_section}};

						push (@section1, $swap_entry);

						my $swapdex = 0;
						$swapdex++ until $section2[$swapdex] == $swap_entry;
						splice(@section2, $swapdex, 1);

						push (@section2, $entry_id);

						$no_improvement++;  # Fail
						@{$sections{$section_key}} = @section1;
						@{$sections{$swap_section}} = @section2;

						@section = @section1;

						$entry_section1_score = score_section(
							\@section1, 
							\%hits, 
							\%entries
						);

						my $other_score = score_section(
							\@section2,
							\%hits, 
							\%entries
						);

					}
				}
			}

			last if $no_improvement < 1;

		}

	}


<%args>
	$tourn
	$tourn_settings
	$person
	$round
	$seeds    => undef
	$strength => undef
	$whoami   => undef
</%args>
<%init>

	$m->abort unless $round;
	my $event = $round->event;
	$m->abort unless $event->tourn == $tourn->id;

	my %event_settings = $event->all_settings;

	my @panels = $round->panels;

    my %panel_entries = ();
	my %school_codes = ();

	foreach my $panel (@panels) {

		my @entries = $m->comp("/funclib/panel_entries.mas", panel => $panel);

        push (@{$panel_entries{$panel->id}}, @entries);

		foreach my $entry (@entries) {
			unless ($school_codes{$entry->school->id}) {
				if ($entry->school->code) {
					$school_codes{$entry->school->id} = $entry->school->code;
				} else {
					$school_codes{$entry->school->id} = $entry->school->name;
				}
			}
		}
    }

	my %title_by_entry;

	my $show_strength++ if $round->type eq "elim";

	my @blocs = $m->comp(
		"/funclib/event_entry_settings.mas",
			event => $event,
			tag   => "nsda_house_bloc"
	) if $tourn_settings->{"nsda_district"}
		&& $event->abbr eq "HSE";

	my %blocs_by_entry = map {$_->entry->id => $_->value} @blocs;

</%init>

	<script>

		$(document).ready( function(){

%			foreach my $panel (@panels) {
				averageStrength('<% $panel->id %>');
%			}

		});

		function averageStrength(panelID) {

			var total = 0, counter = 0, average = 0, already = {};

			$("#panel_"+panelID).find(".strength").each(function(index) {

				var strengthScore = parseInt(this.id);

				var entryID = $(this).attr("entry");

				if (!(entryID in already)) {
					total = total + strengthScore;
					counter++;
					already[entryID]++;
				}

			});

			if (counter) {
				average = (total / counter);
			}

			$("#average_"+panelID).html(average.toFixed(2));

		}

		function toggleShow(elementType) {
			$("#"+elementType).toggleClass("invert");
			$("."+elementType).toggleClass("hidden");
		}

		function hideColor (colorToggle) {
			$(".entries").removeClass(colorToggle);
			$(".schooltoggle").removeClass('invert');
			$(".key_"+colorToggle).addClass('hidden');
		}

		function toggleColor (keyID, panelID, clashKey, clashType, colorToggle) {

			$(".entries").not("."+clashType+"_"+clashKey).removeClass(colorToggle);
			$(".schooltoggle").not("#"+keyID).removeClass('invert');

			$("."+clashType+"_"+clashKey).toggleClass(colorToggle);
			$("#"+keyID).toggleClass('invert');

			if (clashType === "hits") {
				$("."+clashType).toggleClass("hidden");
				$("."+clashType).toggleClass(colorToggle);
			}

			$("."+clashType+"_"+clashKey).children("."+clashType+"s").toggleClass("hidden");

		};

        $(function() {

            $( ".droppable" ).droppable({

                hoverClass       : "ltyellow",
                accept           : ":not(.ui-sortable-helper)",
                disableSelection : "true",

                drop             : function( event, ui) {

                    var droppableId = this.id;

                    $.post("move_congress.mhtml",{
                        entry_id : ui.draggable.attr("id"),
                        panel_id : this.id
                    }).done(function(data) {
						alertify.set('notifier','delay', 2);
						alertify.success(data);
						alertify.set('notifier','delay', 5);
					});

                    // remove the original element from its origin to this
                    // location, and make it visible again while destroying the
                    // clone.  this is necessary because the default jquery
                    // draggable behavior does not play well with scrollable
                    // windows.

                    ui.draggable.show();
                    $(this).prepend(ui.draggable);
                    $( this ).find( ".placeholder" ).remove();

					var panelID = $("#"+this.id).attr("panel");
					averageStrength(panelID);

					$("#"+this.id).removeClass("strength_"+panelID);


                }

            }).sortable({

                items: ":not(.placeholder)",

                sort: function() {

					// gets added unintentionally by droppable interacting with
					// sortable using connectWithSortable fixes this, but
					// doesn't allow you to customize active/hoverClass options

                    $( this ).removeClass( "ui-state-default" );
                }
            });

			$( ".draggable" ).draggable({

				drag: function(event, ui) {
					$("."+this.id).show();
				},

				stop: function(event, ui) {
					$("."+this.id).hide();

					var schoolID = $("#"+this.id).attr("school");
					var titleName = $("#"+this.id).attr("title");

					$(".school_"+schoolID).removeClass("dkred");
					$(".title_"+titleName).removeClass("dkblue");

				},

				start: function(event, ui) {

					$(".entries").removeClass("dkred");
					$(".entries").removeClass("dkorange");
					$(".entries").removeClass("dkblue");
					$(".entries").removeClass("dkgreen");
					$(".entries").removeClass("dkgrey");

					var schoolID = $("#"+this.id).attr("school");
					var titleName = $("#"+this.id).attr("title");

					$(".school_"+schoolID).addClass("dkred");

					if (titleName) {
						$(".title_"+titleName).addClass("dkblue");
					}

					$("#"+this.id).hide();
					$("#"+this.id).removeClass("dkred");
					$("#"+this.id).removeClass("dkblue");


				},

				disableSelection : "true",
				revert           : "invalid",
				containment      : '#wrapper',
				snap             : "true",
				snapMode         : "inner",
				helper           : "clone"
			});

		});

	</script>

		<div class="full nospace">

			<span class="twofifths">
				<h4><% $round->realname %> Double Checks</h4>
			</span>

			<span class="threefifths rightalign">

				<span class="semibold">
					Show:
				</span>

				<span
					id      = "schools"
					class   = "buttonwhite redtext padless"
					onClick = "toggleShow(this.id)";
				>
					Schools
				</span>

%				if ($round->type eq "elim" || $round->type eq "final" || $round->type eq "runoff") {

					<span
						id      = "strength"
						class   = "buttonwhite purpletext padless"
						onClick = "toggleShow(this.id)";
					>
						Strength
					</span>

					<span
						id      = "seeds"
						class   = "buttonwhite orangetext padless"
						onClick = "toggleShow(this.id)";
					>
						Seeds
					</span>

%				} else {

					<span
						id      = "blocs"
						class   = "buttonwhite orangetext padless"
						onClick = "toggleShow(this.id)";
					>
						Blocs
					</span>

%				}

			</span>

		</div>

<%perl>



		my $count;

		foreach my $panel (@panels) {

			my %schools;
			my %titles;

</%perl>

			<span
				class="inline marless top fixedwidth"
				id = "panel_<% $panel->id %>"
			>

				<div class="yellowrow padmore smallish centeralign semibold marno bordersides bordertop">
					Chamber <% $panel->letter %>
				</div>

				<div
					id    = "<% $panel->id %>"
					panel   = "<% $panel->id %>"
					class = "full row nospace bordersides droppable centeralign"
				>

%					foreach my $entry (@{$panel_entries{$panel->id}}) {

%						$schools{$entry->school->id}++;

						<span
							class="
								leftalign
								martop
								marbottom
								entries
								draggable
								school_<% $entry->school->id %>
							"
							id         = "<% $entry->id %>"
							school     = "<% $entry->school->id %>"
						>

%							if (length($entry->code) > 6) {
								<span
									class="marno padless full borderbottom centeralign codes"
								>
									<% $entry->code %>
								</span>

%							} else {
								<span
									class="nospace third borderright centeralign codes"
								>
									<% $entry->code %>
								</span>
%							}

							<span
								class="nospace half rightalign schools hidden redtext semibold"
							>
								<% $school_codes{$entry->school->id} %>
							</span>

							<span
								class="nospace quarter rightalign blocs hidden orangetext"
							>
								<% $blocs_by_entry{$entry->id} %>
							</span>

							<span class="nospace padleft rightalign quarter wrap strength hidden"
								entry = "<% $entry->id %>"
								id    = "<% $strength ? ${$strength}{$entry->id} : ""  %>"
							>
								<% $strength ? ${$strength}{$entry->id} : ""  %>
							</span>

							<span class="nospace padleft rightalign quarter wrap seeds hidden"
								entry = "<% $entry->id %>"
								id    = "<% $seeds ? ${$seeds}{$entry->id} : ""  %>"
							>
								<% $seeds ? ${$seeds}{$entry->id} : ""  %>
							</span>

						</span>
%					}

				</div>

				<div class="row centeralign padmore marno bordersides borderbottom">

					<p class="leftalign semibold smallish marno">Status:</p>

%					if ($round->type eq "semi") {

						<div class = "full padless marno purpletext" >

							<span class="half rightalign">
								Avg Rank:
							</span>

							<span class="half leftalign semibold" id = "average_<% $panel->id %>">
							</span>

						</div>

%					}

%					my $blah;

%					foreach my $key (keys %schools) {

%						next unless $schools{$key} > 1;
%						$blah++;

						<span
							id      = "<% $key %>_<% $panel->id %>"
							class	= "schooltoggle buttonwhite marbottom redtext padless smallish full"
							onClick = "toggleColor( this.id, <% $panel->id %>, <% $key %>, 'school', 'dkred');"
						>
							<% $schools{$key} %> from School <% $school_codes{$key} %>

						</span>

%					}

%					unless ($blah) {

						<span class="buttonwhite greentext padless">

							<span class="fa fa-check fa-lg greentext">
							</span>

							All OK!

						</span>

%					}

				</div>

			</span>
%		}




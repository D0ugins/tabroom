<%args>
	$tourn
	$tourn_settings
	$person
	$round_id
	$next    => undef
	$default => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);
	$m->abort unless $round;

	my $previous_round;

	if ($next) { 

		$previous_round = $round;

		my $next_round = Tab::Round->search(
			event => $previous_round->event->id,
			name  => ($round->name + 1)
		)->first;

		if ($next_round > 0) { 

			$round = $next_round;
			undef $next;

		} else { 
			undef $round;
		}
		
	} else  { 

		$previous_round = Tab::Round->search(
			event => $round->event->id,
			name  => ($round->name - 1)
		)->first;
	}

	my $event = $previous_round->event if $previous_round;
	$event = $round->event unless $event || (not defined $round);

	my $next_number = $round->name if $round;
	$next_number = ($previous_round->name + 1) unless $next_number;

	$m->abort unless $event;
	$m->abort unless $event->tourn == $tourn;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz; 

	my %event_settings = $event->all_settings;
	my %round_settings = $round->all_settings if $round; 

	my @panels = $round->panels if $round;

	my @tabs;
	my $entries_ref;

	if ($previous_round) { 

		my @results = $m->comp(
			"/tabbing/results/order_entries.mas",
			round => $previous_round,
		) if $previous_round;

		$entries_ref = pop @results if @results;

		push @tabs, "results";
	}


	push @tabs, "create";

	if (@panels && scalar @panels > 0) { 
		push @tabs, "checks";
	}

	unless ($default) { 
		$default = "create";
		$default = "checks" if (@panels && scalar @panels > 0);
	}

	my %outs;
	my %entries_by_id =
		map {$_->id => $_} 
		$m->comp("/funclib/round_entries.mas", 
			round => $previous_round
		);

</%init>

	<& 	"menu.mas",
		round          => $round,
		event          => $event,
		round_settings => \%round_settings,
		event_settings => \%event_settings
	&>

	<div class="main">

		<div class="full nospace">

			<span class="half nospace">
				<h2><% $next ? "Create Next Round" : $round->realname %></h2>
			</span>

			<span class="half rightalign nospace">
				<h2><% $event->abbr %></h2>
			</span>

		</div>

%		unless (scalar @tabs < 2) { 

			<& 
				"/funclib/tabs.mas", 
					tabs    => \@tabs,
					default => $default
			&>
%		}

%		if ($next_number > 1) { 

			<div 
				id    = "results"
				class = "results screens"
			>
				<h4><% $previous_round->realname %> Results</h4>
			
<%perl>
				%outs = $m->comp(
					"/tabbing/results/results_table.mas", 
					round     => $previous_round,
					threshold => 2
				);
</%perl>

			</div>
%		}

		<div 
			id    = "create"
			class = "create screens"
		>

%		if ($round->name <= 2) { 

			<& 
				"pair_preset.mas", 
					round          => $round,
					person         => $person,
					entries        => \%entries_by_id,
					outs           => \%outs,
					next_number    => $next_number,
					previous_round => $previous_round
			&>

%		} else { 

			<& "pair_powermatch.mas", 
					round => $round,
					tourn => $tourn,
					person => $person 
			&>
%		}

		</div>

%		if (@panels) { 

			<div 
				id    = "checks"
				class = "checks screens"
			>

				<& "debate_checks.mas", 
					round  => $round,
					tourn  => $tourn,
					person => $person,
					seeds  => ${$entries_ref}{"tiebreak"}{"1"}
				&>

			</div>

%		}

	</div>

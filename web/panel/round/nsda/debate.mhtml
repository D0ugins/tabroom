<%args>
	$tourn
	$tourn_settings
	$person
	$round_id
	$next    => undef
	$default => undef
	$manual  => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);
	$m->abort unless $round;

	my $previous_round;

	if ($next) { 

		$previous_round = $round;

		my $next_round = Tab::Round->search(
			event => $previous_round->event->id,
			name  => ($round->name + 1)
		)->first;

		if ($next_round > 0) { 

			$round = $next_round;
			undef $next;

		} else { 
			undef $round;
		}
		
	} else  { 

		$previous_round = Tab::Round->search(
			event => $round->event->id,
			name  => ($round->name - 1)
		)->first;
	}

	my $event = $previous_round->event if $previous_round;
	$event = $round->event unless $event || (not defined $round);

	my $next_number = $round->name if $round;
	$next_number = ($previous_round->name + 1) unless $next_number;

	$m->abort unless $event;
	$m->abort unless $event->tourn == $tourn;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz; 

	my %event_settings = $event->all_settings;
	my %round_settings = $round->all_settings if $round; 

	my @panels = $round->panels if $round;

	my @tabs;
	my $entries_ref;

	if ($previous_round) { 

		my @results = $m->comp(
			"/tabbing/results/order_entries.mas",
			round => $previous_round,
		) if $previous_round;

		$entries_ref = pop @results if @results;

		push @tabs, "results";
	}


	push @tabs, "create";

	my $pairing_log = $round->setting("nsda_pairing_log") if $round;
	push @tabs, "log" if $pairing_log;

	if (@panels && scalar @panels > 0) { 
		push @tabs, "checks";
	}

	unless ($default) { 
		$default = "create";
		$default = "checks" if (@panels && scalar @panels > 0);
	}

	my @entries = $m->comp(
		"/funclib/round_entries.mas", 
		round => $previous_round
	) unless $round && $round->name == 1;

	@entries = $event->entries( active => 1) 
		if (not defined $previous_round)
		|| ($round && $round->name == 1);

	my %entries_by_id = map {$_->id => $_} @entries;

	undef @entries;

	my $num_entries = scalar(keys %entries_by_id);

	my %outs;
	my $num_outs;
	my $district;

	my $total_quals;
	my $alternates;
	my $total_entries;

	my $threshold = 2;
	my $threshold_direction;

	my $first_elim;

	if ($tourn_settings->{"nsda_district"}) { 

		$district = Tab::District->retrieve(
			$tourn_settings->{"nsda_district"}
		);

		($total_quals, $alternates, $total_entries) = 
			$m->comp(
				"/funclib/nsda_qualifier_count.mas",
				event => $event
			);

	}  elsif ($tourn_settings->{"nsda_nats"}) { 

		# This aims us towards a final round at nationals

		$total_quals = 2;
		$alternates = 0;

		if ($previous_round->type eq "prelim") { 

			$first_elim++;

			$threshold = $event_settings{"clearing_threshold"};
			$threshold = "8" unless $threshold;
			$threshold_direction = "desc";

		}

	}

</%init>

	<& 	"menu.mas",
		round          => $round,
		event          => $event,
		whoami         => "debate",
		round_settings => \%round_settings,
		event_settings => \%event_settings,
		district       => $district,
		total_quals    => $total_quals,
		total_entries  => $total_entries,
		alternates     => $alternates
	&>

	<div class="main">

		<div class="full nospace">

			<span class="half nospace">
				<h2><% $next ? "Create Next Round" : $round->realname %></h2>
			</span>

			<span class="half rightalign nospace">
				<h2><% $event->abbr %></h2>
			</span>

		</div>

%		unless (scalar @tabs < 2) { 

			<& 
				"/funclib/tabs.mas", 
					tabs    => \@tabs,
					default => $default
			&>
%		}

%		if ($next_number > 1) { 

			<div 
				id    = "results"
				class = "results screens"
			>
				<h4><% $previous_round->realname %> Results</h4>
			
<%perl>
				%outs = $m->comp(
					"/tabbing/results/results_table.mas", 
					round               => $previous_round,
					threshold           => $threshold,
					threshold_direction => $threshold_direction
				);

				$num_outs = scalar(keys %outs);
				$num_entries -= $num_outs;

				if ($total_quals == $num_entries) { 

					# Hurrah, you are done!

					if ($tourn_settings->{"nsda_nats"}) { 

						# Find an existing final if one exists; 

						my $final = $event->rounds(type => "final")->first; 

						unless ($final) { 
							$round->type("final");
							$round->update();
							$final = $round;
						}

						my @killme;

						foreach my $other ($event->rounds(type => "elim")) { 
							next if $other->id == $final->id;
							next if $other->name <= $previous_round->name;
							push @killme, $other;
						}

						$round = $final;

						foreach my $victim (@killme) { 
							$victim->delete();
						}

						$m->comp("/funclib/renumber_rounds.mas", event => $event);

						undef $next;

					} else { 

						$previous_round->type("final");
						$previous_round->update();

						my $msg = "You have reached the end! Qualifiers determined.";
						$m->redirect("/panel/schemat/show.mhtml?round_id=".$previous_round->id."&msg=$msg");
					}

				}

</%perl>

			</div>
%		}

		<div 
			id    = "create"
			class = "create screens"
		>

%		if (not defined $manual) { 

			<form 
				action = "/panel/round/panel_master.mhtml"
				method = "post"
			>

			<input 
				type  = "hidden"
				name  = "whoami"
				value = "debate.mhtml"
			>

			<input 
				type  = "hidden"
				name  = "nats_elims"
				value = "1"
			>

%			if ($next) { 

				<h4>Create round <% $next_number %></h4> 

				<input 
					type  = "hidden"
					name  = "new_round"
					value = "<% $next_number %>"
				>

				<input 
					type  = "hidden"
					name  = "event_id"
					value = "<% $event->id %>"
				>

%			} else { 

				<h4>Section <% $round->realname %></h4>

				<input 
					type  = "hidden"
					name  = "round_id"
					value = "<% $round->id %>"
				>

%			}

%			if (@panels) { 

				<div class="lightrow marbottommore">

					<div class="full warning centeralign">
						This round has already been sectioned!
					</div>

					<span class="threequarters rightalign">
						Type "I am certain" to confirm deleting existing
						sections and creating new ones:
					</span>

					<span class="quarter">
						<input 
							type           = "text"
							size           = '16'
							name           = "certain"
							autocomplete   = "off"
							autocorrect    = "off"
							autocapitalize = "off"
							spellcheck     = "false"
						>
					</span>
				</div>

%			}

			<div class="full row marvertno">

				<span class="eighth">
					Timeslot
				</span>

				<span class="threeeighths">

					<select 
						name  = "timeslot_id"
						class = "fixedmed"
					>

<%perl>
					my $round_timeslot_id;

					if ($round && $round->timeslot) { 
						$round_timeslot_id = $round->timeslot->id;
					} 

					my $minimum_start 
						= $previous_round->timeslot->end->set_time_zone($tz) 
						if $previous_round;

					foreach my $timeslot ($tourn->timeslots) { 

						my $start = $timeslot->start->set_time_zone($tz);

						next if $start < $minimum_start;

</%perl>

						<option 
							value="<% $timeslot->id %>"
							<% $round_timeslot_id == $timeslot->id ? 'selected="true"' : "" %>
						><% $timeslot->name %> &ndash; <% Tab::niceshortdayt($start) %></option>
%					}
					</select>

				</span>

				<span class="quarter">
					Number of Judges
				</span>

				<span class="quarter">

<%perl>
					if ($next_number > 2) { 

						my $judge_min = 1;
						my $judge_default;

						$judge_min = 3 if $num_entries < 9;


						foreach my $other_round ($event->rounds) {

							next if $other_round->name >= $next_number;
							my $num_judges = $other_round->setting("num_judges");

							$judge_min = $num_judges if $num_judges > $judge_min;

							$judge_default = $other_round->num_judges 
								if $round 
								&& $other_round->id == $round->id;

						}

						$judge_min = 3 if $round->type eq "elim";

						$judge_default = $judge_min if $judge_default < $judge_min;


</%perl>

						<input 
							type  = "number"
							name  = "num_judges"
							step  = 2
							min   = "<% $judge_min %>"
							value = "<% $judge_default %>"
						>

%					} else { 

						<label for="1">
							<span class="hover half">
								<input 
									type     = "radio"
									name     = "num_judges"
									value    = "1"
									checked  = "true"
								>
								1
							</span>
						</label>

						<label for="3">
							<span class="hover half">
								<input 
									type     = "radio"
									name     = "num_judges"
									value    = "3"
								>
								3
							</span>
						</label>

%					}
				</span>

			</div>

%			my @rpools = $tourn->rpools;

%			if (@rpools) { 

				<div class="full row marvertno">

					<span class="fifth">
						Room Pool(s):
					</span>

					<span class="twofifths">
%						if ($round) { 
%							foreach my $rpool ($round->rpools) { 
								<div class='full padless marno'>
									<% $rpool->name %>
								</div>
%							}
%						}
					</span>

					<span class="twofifths">

						<select 
							name="rpool_id" 
							class="fixedsmall"
						>

							<option value=""></option>

%							foreach my $rpool (@rpools) {
								<option 
									value="<% $rpool->id %>"
								><% $rpool->name %></option>
%							}

						</select>

					</span>

				</div>

%			}

%			my @jpools = $event->category->jpools;

%			if (@jpools) { 

				<div class="full row marvertno">

					<span class="fifth">
						Judge Pool(s):
					</span>

					<span class="twofifths">
%						if ($round) { 
%							foreach my $jpool ($round->jpools) { 
								<div class='full padless marno'>
									<% $jpool->name %>
								</div>
%							}
%						} 
					</span>

					<span class="twofifths">
						<select 
							name="jpool_id" 
							class="fixedsmall"
						>

							<option value=""></option>
%							foreach my $jpool (@jpools) {
								<option 
									value="<% $jpool->id %>"
								><% $jpool->name %></option>
%							}
						</select>

					</span>

				</div>
%			}

<%perl>

			my $final_time;

			if ($next_number > 2) { 

				my @seed_results = $m->comp(
					"/tabbing/results/order_entries.mas",
					round        => $previous_round
				);

				$entries_ref = pop @seed_results if @seed_results;

			}

			if ($tourn_settings->{"nsda_nats"}) { 

				if ($round->type eq "final") { 
					$final_time++;
				}
			}

</%perl> 

%			if ($next_number > 2) { 

				<input 
					type  = "hidden"
					name  = "limit_to"
					value = "<% $num_entries %>"
				>

%			}

			<div class="full row padno marvertno">

				<span class="centeralign sixth">
					<% $num_entries %> entries
				</span> 
				
				<span class="centeralign eighth">

%					if ($final_time) { 

						<input 
							type  = "hidden"
							name  = "round_type"
							value = "final"
						>
						Final

%					} elsif ($next_number > 2) { 

						<input 
							type  = "hidden"
							name  = "round_type"
							value = "prelim"
						>
						Elim

%					} else { 

						<input 
							type  = "hidden"
							name  = "round_type"
							value = "prelim"
						>
						Prelim
%					}

				</span>

				<span class="rightalign eighth" >
					Flights:
				</span>

				<span class="quarter" >

					<label for="1">

						<span class="half hover centeralign">

							<input 
								type    = "radio"
								name    = "num_flights"
								value   = "1"
								id      = "1"
								checked = "true"
							> 1
						</span>

					</label>

					<label for="2">

						<span class="half hover centeralign">

							<input 
								type  = "radio"
								name  = "num_flights"
								value = "2"
								id    = "2"
							> 2
						</span>

					</label>

				</span>

				<span class="quarter rightalign">
					<input 
						type  = "submit"
						value = "Create"
						class = "thinnish"
					>
				</span>

			</div>

			</form>

<%perl>

			if ($num_outs > 0 && (not defined $first_elim) ) { 

				my @codes;

				foreach my $out (keys %outs) { 
					push @codes, $entries_by_id{$out}->code;
				}

				my $downstring;

				foreach my $code (sort @codes) {
					$downstring .= ', ' if $downstring;
					$downstring .= $code;
				}

</%perl>


				<div class="full nospace bordertop padtopmore borderbottom">

					<span class="twothirds">
						<h4 class="nospace">
							Down &amp; outs:
						</h4>
					</span>

					<span class="third rightalign">

						<form 
							action = "print_downs.mhtml"
							method = "post"
							target = "_blank"
						>

							<input 
								type  = "hidden"
								name  = "round_id"
								value = "<% $previous_round->id %>"
							>

							<input
								type  = "hidden"
								name  = "downs"
								value = "<% $downstring %>"
							>

							<input 
								type  = "submit"
								value = "Print"
								class = "thinnish"
							>
						</form>

					</span>

<%perl>
				my $counter;

				foreach my $out_id (
					sort {$entries_by_id{$a}->code <=> $entries_by_id{$b}->code} 
					keys %outs
				) { 

					if ($counter < 1) { 
</%perl>
						</div>
						<div class="full row marverno">
%						$counter = 3;
%					}	

%					$counter--;

					<span class="third padtop padbottom">
						<% $entries_by_id{$out_id}->code %> &mdash;
						<% $entries_by_id{$out_id}->name %>
					</span>

%				}

				</div>

%			} elsif ($first_elim) { 

				<div class="full nospace bordertop padtopmore borderbottom">

					<span class="half">
						<h4>
							Clearing Entries 
						</h4>
					</span>

					<span class="half rightalign">
						<h5>
							<% $threshold %>+ ballots to clear
						</h5>
					</span>

<%perl>

				my $counter;

				foreach my $entry_id (
					sort {$entries_by_id{$a}->code <=> $entries_by_id{$b}->code} 
					keys %entries_by_id
				) { 

					next if $outs{$entry_id};

					if ($counter < 1) { 
</%perl>
						</div>
						<div class="full row nospace">
%						$counter = 3;
%					}	

%					$counter--;

					<span class="third padtop padbottom">
						<% $entries_by_id{$entry_id}->code %> &mdash;
						<% $entries_by_id{$entry_id}->name %>
					</span>

%				}

				</div>



<%perl>

			}

		} else {

			if ($next_number && (not defined $round)) { 

				my $site_id = $previous_round->site->id 
					if $previous_round 
					&& $previous_round->site;

				my $tiebreak_set = Tab::TiebreakSet->search(
					name => "DEB",
					tourn => $tourn->id
				)->first;

				$round = Tab::Round->create({
					type         => "prelim",
					name         => $next_number,
					flighted     => 1,
					event        => $event->id,
					site         => $site_id,
					tiebreak_set => $tiebreak_set->id
				});

			}
</%perl>

			<& "pair_powermatch.mas", 
					round          => $round,
					tourn          => $tourn,
					person         => $person,
					tourn_settings => $tourn_settings,
			&>

%		}

		</div>

%		if ($pairing_log)  {

			<div 
				id    = "log"
				class = "log screens"
			>

				<h4>Log of pairing steps:</h4>

				<% $pairing_log %>

			</div>

%		}

%		if (@panels) { 

%			undef %entries_by_id;

			<div 
				id    = "checks"
				class = "checks screens"
			>

				<& "debate_checks.mas", 
					round          => $round,
					previous_round => $previous_round,
					tourn          => $tourn,
					tourn_settings => $tourn_settings,
					person         => $person,
					bracket        => ${$entries_ref}{"tiebreak"}{"1"}
				&>

			</div>

%		}

	</div>

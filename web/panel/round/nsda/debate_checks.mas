<%args>
	$tourn
	$person
	$round
	$seeds    => undef
	$strength => undef
	$whoami   => undef
</%args>
<%init>

	$m->abort unless $round;
	my $event = $round->event;

	$m->abort unless $event->tourn == $tourn->id;

	my %event_settings = $event->all_settings;

	my $sidelocks++;
	undef $sidelocks if $event_settings{"no_side_constraints"};

	my @panels = sort $round->panels;

    my %panel_entries = ();
	my %school_codes = ();

	foreach my $panel (@panels) { 

		my @entries = $m->comp("/funclib/panel_entries.mas", panel => $panel);

		foreach my $entry (@entries) { 

	        push @{$panel_entries{$panel->id}{$entry->side}}, $entry;

			unless ($school_codes{$entry->school->id}) {
				$school_codes{$entry->school->id} = $entry->school->code;
			}
		}
    }

	my %cross_entries = $m->comp(
		"/funclib/event_doubled.mas", 
		round => $round 
	);

	my %hit_before = $m->comp(
		"/funclib/event_entry_hits.mas",
		round => $round
	);

	my $show_strength++ if $round->name > 2;
	undef $show_strength if $round->type eq "final";

</%init>

	<script>

		$(document).ready( function(){

%			foreach my $panel (@panels) { 
				averageStrength('<% $panel->id %>');
%			}

		});

		function averageStrength(panelID) { 

			var total = 0, counter = 0, average = 0, already = {};

			$("#panel_"+panelID).find(".strength").each(function(index) { 

				var strengthScore = parseInt(this.id);

				var entryID = $(this).attr("entry");

				if (!(entryID in already)) { 
					total = total + strengthScore;
					counter++;
					already[entryID]++;
				}

			});

			if (counter) { 
				average = (total / counter);
			}

			$("#average_"+panelID).html(average.toFixed(2));

		}

		function toggleShow(elementType) { 

			$("#"+elementType).toggleClass("invert");
			$("."+elementType).toggleClass("hidden");
		}

		function hideColor (colorToggle) { 
			$(".entries").removeClass(colorToggle);
			$(".schooltoggle").removeClass('invert');
			$(".key_"+colorToggle).addClass('hidden');
		}

		function toggleColor (keyID, panelID, clashKey, clashType, colorToggle) { 

			$(".entries").not("."+clashType+"_"+clashKey).removeClass(colorToggle);
			$(".schooltoggle").not("#"+keyID).removeClass('invert');

			$("."+clashType+"_"+clashKey).toggleClass(colorToggle);
			$("#"+keyID).toggleClass('invert');

			if (clashType === "hits") { 
				$("."+clashType).toggleClass("hidden");
				$("."+clashType).toggleClass(colorToggle);
			}

			$("."+clashType+"_"+clashKey).children("."+clashType+"s").toggleClass("hidden");

		};

        $(function() {

            $( ".droppable" ).droppable({

                hoverClass       : "ltyellow",
                accept           : ":not(.ui-sortable-helper)",
                disableSelection : "true",

                drop             : function( event, ui) {

                    var droppableId = this.id;

                    $.post("move_debate.mhtml",{ 
                        entry_id     : ui.draggable.attr("id"),
                        panel_marker : this.id
                    }).done(function(data) { 
                        $.jGrowl(data, { 
                            header   : 'Result',
                            life     : 5000,
                            position : 'top-center'
                        });
					});

                    // remove the original element from its origin to this
                    // location, and make it visible again while destroying the
                    // clone.  this is necessary because the default jquery
                    // draggable behavior does not play well with scrollable
                    // windows.

                    ui.draggable.show();
                    $(this).prepend(ui.draggable);
                    $( this ).find( ".placeholder" ).remove();

					var panelID = $("#"+this.id).attr("panel");
					averageStrength(panelID);

					$("#"+this.id).removeClass("strength_"+panelID);
					

                }

            }).sortable({

                items: ":not(.placeholder)",

                sort: function() {

					// gets added unintentionally by droppable interacting with
					// sortable using connectWithSortable fixes this, but
					// doesn't allow you to customize active/hoverClass options

                    $( this ).removeClass( "ui-state-default" );
                }
            });

			$( ".draggable" ).draggable({

				drag: function(event, ui) {
					$("."+this.id).show();
				},

				stop: function(event, ui) { 
					$("."+this.id).hide();

					var schoolID = $("#"+this.id).attr("school");
					var titleName = $("#"+this.id).attr("title");

					$(".school_"+schoolID).removeClass("dkred");
					$(".title_"+titleName).removeClass("dkblue");
					$(".hitcounter").addClass('hidden');

				},

				start: function(event, ui) { 
			
					$(".entries").removeClass("dkred");
					$(".entries").removeClass("dkorange");
					$(".entries").removeClass("dkblue");
					$(".entries").removeClass("dkgreen");
					$(".entries").removeClass("dkgrey");

					var schoolID = $("#"+this.id).attr("school");
					var titleName = $("#"+this.id).attr("title");

					$(".school_"+schoolID).addClass("dkred");

					if (titleName) { 
						$(".title_"+titleName).addClass("dkblue");
					}

					$("#"+this.id).hide();
					$("#"+this.id).removeClass("dkred");
					$("#"+this.id).removeClass("dkblue");

					$(".hit_"+this.id).removeClass("hidden");

				},

				disableSelection : "true",
				revert           : "invalid",
				containment      : '#wrapper',
				snap             : "true",
				snapMode         : "inner",
				helper           : "clone"
			});

		});

	</script>

		<div class="full nospace">

			<span class="twofifths">
				<h4><% $round->realname %> Double Checks</h4>
			</span>

			<span class="threefifths rightalign">

				<span class="strong">
					Show:
				</span>

				<span 
					id      = "schools"
					class   = "buttonwhite redtext padless"
					onClick = "toggleShow(this.id)";
				>
					Schools
				</span>

				<span 
					id      = "hits"
					class   = "buttonwhite orangetext padless"
					onClick = "toggleShow(this.id)";
				>
					Hits
				</span>

				<span 
					id      = "sides"
					class   = "buttonwhite greentext padless"
					onClick = "toggleShow(this.id)";
				>
					Sides
				</span>

				<span 
					id      = "crosses"
					class   = "buttonwhite graytext padless"
					onClick = "toggleShow(this.id)";
				>
					Cross
				</span>

%				if ($show_strength) { 
					<span 
						id      = "bracket"
						class   = "buttonwhite purpletext padless"
						onClick = "toggleShow(this.id)";
					>
						Bracket
					</span>

					<span 
						id      = "seeds"
						class   = "buttonwhite orangetext padless"
						onClick = "toggleShow(this.id)";
					>
						Seeds
					</span>

%				}

			</span>

		</div>

<%perl>

		foreach my $panel (@panels) { 

			my %schools;
			my %titles;
			my $side_count;
			my $last_side_count;
			my $hit_total;

</%perl>

			<div 
				class="row"
				id = "panel_<% $panel->id %>"
			>

				<span class="eighth">
					Debate <% $panel->letter %>
				</span>

%				if ($round->flighted > 1) { 
					<span class="eighth">
						Flight <% $panel->flight %>
					</span>
%				}

%				foreach my $side ( 1 .. 2) { 

					<span class="third">

						<span class="sixth padless marno centeralign">
							<% $sidelocks ? $side == 1 ? "Aff" : "Neg" : $side %>
						</span>

						<span 
							id      = "<% $panel->id %>_<% $side %>"
							panel   = "<% $panel->id %>"
							class   = "marno fivesixths centeralign bordergrey droppable side_<% $side %>"
						>

<%perl>
						foreach my $entry (@{$panel_entries{$panel->id}{$side}}) { 

							my $school_id = $entry->school->id;

							$schools{$school_id}++;

							my $last_side;

</%perl>

							<span 
								class="
									fivesixths
									marno
									entries
									draggable
									<% $last_side == $side ? "side_last" : "" %>
									school_<% $school_id %> 
								"
								id        = "<% $entry->id %>"
								school    = "<% $school_id %>"
								last_side = "<% $last_side %>"
							>

								<span 
									class="nospace third borderright centeralign codes"
								>
									<% $entry->code %>	
								</span>

								<span 
									class="nospace quarter rightalign schools hidden"
								>
									<% $school_codes{$school_id} %>
								</span>

								<span class="nospace threefifths rightalign 
									hits hits_<% $panel->id %> hidden"
								>

%									foreach my $hit (sort keys %{$hit_before{$entry->id}}) {

%										$hit_total++;

										<span class="full nospace strong">
											<% $hit_before{$entry->id}{$hit}{"code"} %>
											<% $hit_before{$entry->id}{$hit}{"count"} %>x
										</span>
%									}

								</span>

%								foreach my $hit (sort keys %{$hit_before{$entry->id}}) {
									<span class="
										rightalign orangetext half nospace 
										strong hitcounter hit_<% $hit %> hidden
									">
										<% $hit_before{$entry->id}{$hit}{"count"} %>x
									</span>
%								}

%								if ($show_strength) { 

									<span class="nospace padleft rightalign quarter wrap seeds hidden"
										entry = "<% $entry->id %>"
										id    = "<% $seeds ? ${$seeds}{$entry->id} : ""  %>"
									>
										<% $seeds ? ${$seeds}{$entry->id} : ""  %>
									</span>


									<span class="nospace padleft rightalign quarter wrap strength hidden"
										entry = "<% $entry->id %>"
										id    = "<% $strength ? ${$strength}{$entry->id} : ""  %>"
									>
										<% $strength ? ${$strength}{$entry->id} : ""  %>
									</span>

%								}

								<span class="nospace threefifths rightalign sides code_<% $panel->id %> hidden">
									<span class="half marno">
									</span>
								</span>

								<span class="nospace threefifths rightalign crosses code_<% $panel->id %> hidden">

%									foreach my $other (keys %{$cross_entries{$entry->id}}) { 

										<span class="full nospace">

											<% $cross_entries{$entry->id}{$other}{"event"} %>-<% 	
												Lingua::EN::Numbers::Ordinate::ordinate(
													$cross_entries{$entry->id}{$other}{"side"} 
												) 
										%>

										</span>
%									}
								</span>
								</span>
	
%							}

						</span>

					</span>
%				}

				<span class="fifth rightalign">

					<span class="third smallish strong">
						Status:
					</span>

					<span class="twothirds">
%					my $blah;

%					foreach my $key (keys %schools) { 

%						next unless $schools{$key} > 1;
%						$blah++;

						<span 
							id      = "<% $key %>_<% $panel->id %>"
							class	= "schooltoggle buttonwhite marbottom redtext padless smallish full"
							onClick = "toggleColor( this.id, <% $panel->id %>, <% $key %>, 'school', 'dkred');"
						>
							<% $schools{$key} %> from School <% $school_codes{$key} %>

						</span>

%					}

%					if ($last_side_count) { 
%						$blah++;

						<span 
							id      = "last_side_<% $panel->id %>"
							class	= "last_sidetoggle buttonwhite marbottom greentext padless smallish full"
							onClick = "toggleColor( this.id, <% $panel->id %>, 'last', 'side', 'dkgreen');"
						>
							<% $last_side_count %> same side R<% $round->name - 1 %>
						</span>
%					}

%					if ($hit_total) { 

%						$blah++;

						<span 
							id      = "hit_<% $panel->id %>"
							class	= "hittoggle buttonwhite marbottom orangetext padless smallish full"
							onClick = "toggleColor( this.id, <% $panel->id %>, 'hits', 'hits', 'orangetext');"
						>
							<% $hit_total %> repeat hits
						</span>
%					}

%					unless ($blah) { 
		
						<span class="buttonwhite greentext padless">

							<span class="fa fa-check fa-lg greentext">
							</span>

							OK!

						</span>

%					}

				</div>

			</span>
%		}


		<& debate_errors.mas, 
			round => $round 
		&>



<%args>
	$tourn
	$tourn_settings
	$person
	$round_id
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);
	$m->abort unless $round;

	my $event = $round->event;
	$m->abort unless $event->tourn == $tourn->id;

	my %event_settings = $event->all_settings;

	my @panels = $round->panels;

	my $previous_round;
	my $entries_ref;

	my @tabs;

	if ($round->name > 2) { 

		$previous_round = Tab::Round->search(
			event => $event->id,
			name  => ($round->name - 1)
		)->first;

		my @results = $m->comp(
			"/tabbing/results/order_entries.mas",
			round => $previous_round, 
		) if $previous_round;

		$entries_ref = pop @results if @results;
		push @tabs, "results";

	}

	push @tabs, "create";
	push @tabs, "checks" if scalar @panels > 0;

</%init>

	<div class="main">

		<div class="full nospace">

			<span class="half nospace">
				<h2><% $round->realname %></h2>
			</span>

			<span class="half rightalign nospace">
				<h2><% $event->abbr %></h2>
			</span>

		</div>

%		unless (scalar @tabs < 2) { 
			<& 
				"/funclib/tabs.mas", 
				tabs    => \@tabs,
				default => "checks"
			&>
%		}

%		if ($round->name > 2) { 
			<div 
				id    = "results"
				class = "results screens"
			>
				<h4>Previous Round Results</h4>
			</div>
%		}

		<div 
			id    = "create"
			class = "create screens"
		>
			<h4>Section <% $round->realname %></h4>

		</div>

%		if (@panels) { 

			<div 
				id    = "checks"
				class = "checks screens"
			>

				<& "checks.mas", 
					round => $round,
					tourn => $tourn,
					person => $person	

				&>

			</div>

%		}

	</div>

<%args>
	$tourn
	$tourn_settings
	$round_id => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);
	my $event = $round->event;

	my @ties = $m->comp("/funclib/congress_ties.mas", round => $round);

	my $first = $ties[0];

	my @panels = $first->panels;

</%init>

	<div class="main">

		<span class="twothirds nospace">
			<h4>Chamber Assignments</h4>
		</span>
		<span class="third rightalign semibold bluetext nospace">
			Currently <% scalar $round->panels %> chambers
		</span>

		<div class="ltbordervert odd full">
			<span class="quarter nospace">
				<h6 class="semibold bluetext">Linked Sessions</h6>
			</span>
			<span class="threequarters biggish semibold bluetext">
%				foreach my $tie (@ties) {
					<span class="sixth">
						<% $tie->realname %>
					</span>
%				}
			</span>
		</div>

		<p>
			All these sessions are scored together and should have the same
			chamber assignments and parliamentarians.
		</p>

		<p>
			To alter, select Settings on the pairing for a round under
			Schemats :: <% $event->abbr %>, and change the "Tie session to
			another" setting.
		</p>

		<h5 class="padvertmore">Options</h5>

		<form
			action="panel_master.mhtml"
			method="post"
		>
			<input
				type  = "hidden"
				name  = "round_id"
				value = "<% $round->id %>"
			>

%			if (@panels) {

				<label for="wipe">
					<div class="row hover">
						<span class="fifth semibold">
							Wipe &amp; resection
						</span>
						<span class="fifth centeralign">
							<input
								type     = "radio"
								name     = "congress_method"
								value    = "wipe"
								id       = "wipe"
								onChange = "checkWipe();"
							>
						</span>
						<span class="threefifths linespaced">
							This option makes new chamber assignments and
							place them in ALL <% scalar @ties %> sessions
							listed above.  Deletes all rounds, results, records.
						</span>
					</div>
				</label>

%				if (scalar @ties > 1) {
					<label for="realign">
						<div class="row hover">
							<span class="fifth semibold">
								Re-align sessions
							</span>
							<span class="fifth centeralign">
								<input
									id       = "realign"
									type     = "radio"
									name     = "congress_method"
									value    = "realign"
									onChange = "checkWipe();"
								>
							</span>
							<span class="threefifths linespaced">
								Copies assignments from <% $first->realname %> into
								the other <% scalar @ties - 1 %> sessions.  Does
								change parliamentarians, does NOT change or copy
								scorers.
							</span>
						</div>
					</label>
%				}

%				if ($first && $first != $round->id) {

					<label for="single">
						<div class="row hover">
							<span class="fifth semibold">
								Re-align <% $round->realname %> only
							</span>
							<span class="fifth centeralign">
								<input
									id       = "single"
									type     = "radio"
									name     = "congress_method"
									value    = "single"
									onChange = "checkWipe();"
								>
							</span>
							<span class="threefifths linespaced">
								Copies assignments from <% $first->realname %> into
								<% $round->realname %>.
								Does copy parliamentarians, does NOT change or
								copy scorers.
							</span>
						</div>
					</label>
%				}

%			} else {

				<div class="row hover">
					<span class="fifth semibold padsetting">
						Section
					</span>
					<span class="fourfifths">
						This process will make new chamber assignments and
						place them in ALL <% scalar @ties %> sessions
						listed above.
					</span>
				</div>

				<input
					id    = "wipe"
					type  = "hidden"
					name  = "congress_method"
					value = "wipe"
				>
%			}

<%perl>

			my $minpanelsize = $event->setting("min_panel_size");
			my $maxpanelsize = $event->setting("max_panel_size");
			my $panelsize = $event->setting("default_panel_size");

			$minpanelsize = 15 unless $minpanelsize;
			$maxpanelsize = 30 unless $maxpanelsize;
			$panelsize = 20 unless $panelsize;

			my $num_entries = scalar $event->entries(active => 1);

			my $num_chambers = POSIX::ceil($num_entries / $panelsize);
			$num_chambers = 1 if $num_chambers < 1;

			my $max_panels = POSIX::ceil($num_entries / $minpanelsize);
			my $min_panels = POSIX::ceil($num_entries / $maxpanelsize);
			my $num_panels = POSIX::ceil($num_entries / $panelsize);

</%perl>

%			if (@panels) {
				<script>
					function checkWipe() {

						if ($('#wipe').is(':checked')) {
							console.log("What the hell");
							$(".resections").removeClass("hidden");
						} else if ($('#realign').is(':checked')) {
							$(".resections").addClass("hidden");
						} else if ($('#single').is(':checked')) {
							$(".resections").addClass("hidden");
						}

						zebraRows();
					}

					$(document).ready(function() {
						checkWipe();
					});
				</script>
%			}

			<span class="nospace full resections <% @panels ? "hidden" : "" %> martopmuchmore">

				<h5>
					Chambers
				</h5>

				<div class="row padvert">
					<span class="fifth semibold">
						Number of Chambers
					</span>
					<span class="seventh padvert">
						<input
							type  = "number"
							name  = "num_panels"
							value = "<% $num_panels %>"
							min   = 1
							max   = 999
						>
					</span>

					<span class="twenty centeralign padvertmore">
					</span>

					<span class="threefifths linespaced">
						Minimum <% $min_panels %> of <% $maxpanelsize %>,
						Maximum <% $max_panels %> of <% $minpanelsize %>
					</span>
				</div>

				<label for="parliamentarians">
					<div class="resections row hover">
						<span class="fifth semibold">
							Parliamentarians
						</span>
						<span class="twenty centeralign padvertmore">
							<input
								id    = "parliamentarians"
								type  = "checkbox"
								name  = "parliamentarians"
								value = "1"
							>
						</span>
						<span
							class="seventh centeralign"
						></span>
						<span class="threefifths linespaced">
							Assigns parliamentarians to all <% scalar @ties %> sessions of the new panels.
							Uses any/all judges with "Parli" flag marked first.  Same parliamentarians
							are assigned to all sessions of a chamber.
						</span>
					</div>
				</label>

				<label for="scorers">
					<div class="resections row hover">
						<span class="fifth semibold">
							Scorers
						</span>
						<span class="twenty centeralign padvertmore">
							<input
								id    = "scorers"
								type  = "checkbox"
								name  = "scorers"
								value = "1"
							>
						</span>
						<span
							title="Number of scorers to assign"
							class="seventh centeralign"
						>
							#
							<input
								type  = "number"
								name  = "num_judges"
								min   = 1
								max   = 999
								value = "<% $round->setting("num_judges") ? $round->setting("num_judges") : 2 %>"
							>
						</span>

						<span class="threefifths linespaced">
							Assigns scorers to all <% scalar @ties %> sessions of the new chambers.
							Avoids judges with "Parli" flag marked first.  Different set of
							scorers assigned each session.
						</span>

					</div>
				</label>

				<label for="rooms">
					<div class="resections row hover">
						<span class="fifth semibold">
							Rooms
						</span>
						<span class="twenty centeralign padvertmore">
							<input
								id    = "rooms"
								type  = "checkbox"
								name  = "rooms"
								value = "1"
							>
						</span>
						<span
							class="seventh centeralign"
						></span>
						<span class="threefifths linespaced">
							Assigns rooms to all <% scalar @ties %> sessions of the new panels.
							Same rooms are assigned to all sessions of a chamber.
						</span>
					</div>
				</label>
			</span>

			<div class="libl row rightalign">
				<span class="quarter centeralign">
					<input
						type="submit"
						value="Set Chambers"
					>
				</span>
			</div>

		</form>
	</div>

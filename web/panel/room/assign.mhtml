<%args>
	$timeslot_id
	$clear => undef
	$tourn
	$perms
</%args>
<%init>

	my $timeslot = Tab::Timeslot->retrieve($timeslot_id);

	my $count;

	my $err;

	my ($eventref, $catref) = $m->comp(
		"/funclib/allowed_events.mas", 
		tourn => $tourn,
		perms => $perms,
		type  => "admin"
	);

	my @events = @{$eventref};
	my @categories = @{$catref};

	foreach my $event (@events) { 
		ROUND:
		foreach my $round ($timeslot->rounds(event => $event->id)) { 

			$m->comp('/funclib/round_clear_rooms.mas', round => $round) 
				if $clear eq "yup" 
				&& $round->event->type eq "speech";

			next if $ARGS{"clear_only"};

			if ($round->event->type ne "speech" && $round->event->type ne "congress") {  

				$err = " You cannot assign rooms to debate rounds this way.  Do it from the pairing on a round by round basis instead.";

				next ROUND;
			}

			my @panels = $m->comp('/funclib/round_panels_ada.mas', round => $round);

			foreach my $panel (@panels) { 

				next if $panel->room && $panel->room->id;
				my @rooms = $m->comp("/funclib/clean_rooms.mas", panel => $panel);
				my $room = shift @rooms;
				$panel->room($room->id) if $room;
				$panel->update;
				$count++;
			}

		}
	}

	my $msg = "Rooms have been assigned to $count rounds";

	$m->redirect("index.mhtml?timeslot_id=$timeslot_id&msg=$msg&err=$err");

</%init>


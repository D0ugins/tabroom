<%args>
	$tourn
	$tourn_settings
	$person
	$person_settings
</%args>
<%init>

	use POSIX;

    # Get the upload and create the file handle.
    my $req = Apache2::Request->new($r);
    my @csv_handles = $r->upload;
    my $csv_file = $req->upload($csv_handles[0]);
    my $io = $csv_file->io;

    my @lines = <$io>;
	my %duplicated = ();
	my %rooms_by_site_name = ();

	foreach my $site ($tourn->sites() ) {
		%{$rooms_by_site_name{$site->id}} =
			map {$_->name => $_} $site->rooms();
	}

	my %collisions;
	my %rooms;

	foreach my $site ($tourn->sites() ) {
		foreach my $key (keys %{$rooms_by_site_name{$site->id}}) {

			my $room = $rooms_by_site_name{$site->id}{$key};

			undef $rooms{$key};
			$key =~ s/[\W_]//g;
			$collisions{$key}++;

			unless ($collisions{$key} > 1) {
				$rooms{$key} = $room;
			}
		}
	}

	my %rpools = map {$_->name => $_} $tourn->rpools();

	foreach my $key (keys %rpools) {
		my $pool = $rpools{$key};
		undef $rpools{$key};
		$key =~ s/[\W_]//g;
		$rpools{$key} = $pool;
	}

	my $current_pool;

	LINE:
	foreach my $line (@lines) {

		chomp $line;
		my ($pool, $room) =  split(/\,/, $line);

		if ($pool)  {
			my $comp = $pool;
			$comp =~ s/[\W_]//g;
			$current_pool = $rpools{$comp};

			unless ($current_pool) {
				$current_pool = Tab::RPool->create({
					tourn => $tourn->id,
					name  => $pool
				});
				$rpools{$comp} = $current_pool;
			}

		} elsif ($room && $current_pool) {

			my $roomkey = $room;
			$roomkey =~ s/[\W_]//g;

			if ($rooms{$roomkey}) {
				Tab::RPoolRoom->create({
					rpool => $current_pool->id,
					room  => $rooms{$line}->id
				});
			}
		};
	}

	my $msg = "Added rooms to pools from the doc!";

	my $current_id = $current_pool->id if $current_pool;

	$m->redirect("/panel/room/rpool.mhtml?rpool_id=".$current_id."&msg=$msg");

</%init>

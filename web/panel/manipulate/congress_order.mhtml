<%args>
	$round_id
	$tourn
	$tourn_settings
	$person
</%args>
<%init>

	use List::Util 'shuffle';

	my $origin = Tab::Round->retrieve($round_id);
	my @rounds = $m->comp("/funclib/congress_ties.mas", round => $origin);

	my $num_rounds = scalar @rounds;
	my $first = $rounds[0];

	my $dbh = Tab::DBI->db_Main();
	my $sth = $dbh->prepare("
		select max(ballot.speakerorder)
			from ballot
		where panel = ?
	");

	my $update_sth = $dbh->prepare("
		update ballot
			set speakerorder = ?
		where entry = ?
			and panel = ?
	");

	foreach my $chamber ($first->panels()) {

		my @entries = $m->comp("/funclib/panel_entries.mas", panel => $chamber);

		my $num_entries = scalar @entries;

		my $cohort_size = POSIX::ceil($num_entries / $num_rounds);
		my %already;

		foreach my $round (shuffle @rounds) {

			my $panel = $round->panels(letter => $chamber->letter)->first;
			next unless $panel;

			$sth->execute($panel->id);

			my ($max_speaker) = $sth->fetch();

			$sth->finish();

			my %cohorts;
			my %quota;

			foreach my $entry (shuffle @entries) {

				my $chosen;

				foreach my $cohort (shuffle( 1 .. $num_rounds )) {
					next if $already{$entry}{$cohort};
					next if $quota{$cohort} >= $cohort_size;
					$chosen = $cohort;
				}

				unless ($chosen) {
					foreach my $cohort (shuffle( 1 .. $num_rounds )) {
						next if $quota{$cohort} >= $cohort_size;
						$chosen = $cohort;
					}
				}

				$already{$entry}{$chosen}++;
				$cohorts{$chosen}{$entry->id} = $entry;
				$quota{$chosen}++;
			}

			my $order;
			my %orders;

			foreach my $cohort (sort keys %cohorts) {
				foreach my $entry_id (shuffle (keys %{$cohorts{$cohort}})) {
					$max_speaker++;
					$order++;
					$update_sth->execute($max_speaker, $entry_id, $panel->id);
					$update_sth->finish();
					$orders{$entry_id} = $order;
				}
			}

			my $start;

			foreach my $entry_id (keys %orders) {
				$start++;
				$update_sth->execute($start, $entry_id, $panel->id);
				$update_sth->finish();
			}
		}
	}

	my $message = "Rounds ";

	foreach my $round (@rounds) {
		$message .= $round->name." ";
	}

	$message .= "precedence randomized";
	$m->redirect("/panel/schemat/show.mhtml?round_id=".$round_id."&msg=$message");

</%init>





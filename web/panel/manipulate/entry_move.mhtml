<%args>
	$person
	$tourn
	$entry_id => undef
	$panel_id => undef
	$manual   => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $entry = Tab::Entry->retrieve($entry_id);
	my $panel = Tab::Panel->retrieve($panel_id);

	$m->abort unless $entry && $panel;

	my $round = $panel->round;
	my $event = $round->event;

	my @panels;

	if (
		$event->type eq "congress" 
		&& $round->type eq "prelim"
	) { 

		foreach my $round (
			$event->rounds(type => "prelim")
		) { 
			push @panels, $round->panels(
				letter => $panel->letter
			);
		}

	} else { 
	
		@panels = ($panel);
	}

	PANEL:
	foreach my $panel (@panels) { 

		my @ballots = $panel->ballots();
		my $round = $panel->round();

		my @entries = $m->comp(
			"/funclib/panel_entries.mas", 
			panel => $panel
		);

		my $sample = $entries[0] if @entries;

		my $speaks = (scalar @entries) + 1;

		Tab::Panel->set_sql( current => "
			select distinct panel.*
			from panel, ballot
			where panel.round = ? 
			and panel.id = ballot.panel
			and ballot.entry = ? 
		");

		Tab::Ballot->set_sql( rm_ballots => "
			delete ballot.* 
			from ballot, panel
			where ballot.entry = ? 
			and ballot.panel = panel.id
			and panel.round = ? 
		");

		my $old_panel = Tab::Panel->search_current(
			$round->id, 
			$entry->id
		)->first;

		Tab::Ballot->sql_rm_ballots->execute( 
			$entry_id,
			$round->id 
		);

		# Are these ballots without entries? 
		my $alldone;

		if ($sample) { 

			BALLOT:
			foreach my $ballot (@ballots) { 

				next BALLOT if $ballot->entry ne $sample;

				my $new_ballot = $ballot->copy({
					entry         => $entry->id,
					speakerorder  => $speaks,
					hangout_admin => 0
				});

				$alldone++;
			}

		}

		unless ($alldone) { 

			BALLOT:

			foreach my $ballot (@ballots) { 

				next BALLOT if $ballot->entry && $ballot->entry->id != 0;

				$ballot->copy({
					entry         => $entry->id,
					speakerorder  => $speaks,
					hangout_admin => 0
				});

				$alldone++;
			}

		}

		unless ($alldone) { 

			my %done_judge = ();

			foreach my $ballot (@ballots) { 

				next if $done_judge{$ballot->judge->id}++;

				$ballot->copy({
					entry         => $entry->id,
					collected_by  => "",
					collected     => "",
					forfeit       => 0,
					audit         => 0,
					speakerorder  => $speaks,
					tv            => 0,
					hangout_admin => 0
				});

				$alldone++;

			}

		}

		unless ($alldone) { 

			Tab::Ballot->create({
				entry        => $entry->id,
				forfeit       => 0,
				judge        => 0,
				chair        => 0,
				audit        => 0,
				tv           => 0,
				speakerorder => $speaks,
				panel        => $panel_id
			});

		}

		my $order;

		foreach my $entry (@entries) { 

			$order++;

			foreach my $ballot (@ballots) { 
				next unless $ballot->entry;
				next unless $ballot->entry->id == $entry->id;
				$ballot->speakerorder($order);
				$ballot->update;
			}

		}

		if ($old_panel) { 
		
			my @entries = $m->comp(
				"/funclib/panel_entries.mas", 
					panel => $old_panel
				);

			my @ballots = $old_panel->ballots;

			my $order;

			foreach my $entry (@entries) { 
				$order++;

				foreach my $ballot (@ballots) { 
					next unless $ballot->entry;
					next if $entry->id != $ballot->entry->id;
					$ballot->speakerorder($order);
					$ballot->update;
				}

			}

		}

		my $regline = "Entry ".$entry->code." moved from ".$old_panel->letter if $old_panel;
		$regline .= " into ".$panel->letter." for ".$round->realname." of ".$event->abbr if $old_panel;

		unless ($regline) { 
			$regline = "Entry ".$entry->code." moved into ".$panel->letter;
			$regline .= " for ".$round->realname." of ".$event->abbr;
		}

		my $old_panel_id = $old_panel->id if $old_panel;

		Tab::ChangeLog->create({
			type        => "move",
			event       => $entry->id,
			tourn       => $tourn->id,
			new_panel   => $panel->id,
			entry       => $entry->id,
			old_panel   => $old_panel_id,
			description => $regline,
			person      => $person->id
		});

	}

	my $msg = "Competitor ".$entry->code." was moved into ".$panel->letter;
	
	$m->redirect("manual_rebalance.mhtml?round_id=".$round->id."&entry_id=$entry_id&new_panel_id=".$panel->id."&msg=$msg") if $manual;

	$m->redirect("entry_edit.mhtml?round_id=".$round->id."&entry_id=$entry_id&msg=$msg");

</%init> 
